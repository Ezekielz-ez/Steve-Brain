ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_fcmpgt
  20              		.global	__aeabi_fadd
  21              		.global	__aeabi_f2iz
  22              		.global	__aeabi_fsub
  23              		.global	__aeabi_i2f
  24              		.global	__aeabi_fcmplt
  25              		.global	__aeabi_fdiv
  26              		.global	__aeabi_fmul
  27              		.section	.text.main,"ax",%progbits
  28              		.align	2
  29              		.global	main
  30              		.thumb
  31              		.thumb_func
  32              		.type	main, %function
  33              	main:
  34              	.LFB64:
  35              		.file 1 "main.c"
   1:main.c        **** /**
   2:main.c        **** * @mainpage ZumoBot Project
   3:main.c        **** * @brief    You can make your own ZumoBot with various sensors.
   4:main.c        **** * @details  <br><br>
   5:main.c        ****     <p>
   6:main.c        ****     <B>General</B><br>
   7:main.c        ****     You will use Pololu Zumo Shields for your robot project with CY8CKIT-059(PSoC 5LP) from Cypress
   8:main.c        ****     library has basic methods of various sensors and communications so that you can make what you w
   9:main.c        ****     <br><br>
  10:main.c        ****     </p>
  11:main.c        ****     
  12:main.c        ****     <p>
  13:main.c        ****     <B>Sensors</B><br>
  14:main.c        ****     &nbsp;Included: <br>
  15:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;LSM303D: Accelerometer & Magnetometer<br>
  16:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;L3GD20H: Gyroscope<br>
  17:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;Reflectance sensor<br>
  18:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;Motors
  19:main.c        ****     &nbsp;Wii nunchuck<br>
  20:main.c        ****     &nbsp;TSOP-2236: IR Receiver<br>
  21:main.c        ****     &nbsp;HC-SR04: Ultrasonic sensor<br>
  22:main.c        ****     &nbsp;APDS-9301: Ambient light sensor<br>
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 2


  23:main.c        ****     &nbsp;IR LED <br><br><br>
  24:main.c        ****     </p>
  25:main.c        ****     
  26:main.c        ****     <p>
  27:main.c        ****     <B>Communication</B><br>
  28:main.c        ****     I2C, UART, Serial<br>
  29:main.c        ****     </p>
  30:main.c        **** */
  31:main.c        **** 
  32:main.c        **** #include <project.h>
  33:main.c        **** #include <stdio.h>
  34:main.c        **** #include "Motor.h"
  35:main.c        **** #include "Ultra.h"
  36:main.c        **** #include "Nunchuk.h"
  37:main.c        **** #include "Reflectance.h"
  38:main.c        **** #include "I2C_made.h"
  39:main.c        **** #include "Gyro.h"
  40:main.c        **** #include "Accel_magnet.h"
  41:main.c        **** #include "IR.h"
  42:main.c        **** #include "Ambient.h"
  43:main.c        **** #include "Beep.h"
  44:main.c        **** 
  45:main.c        **** int rread(void);
  46:main.c        **** 
  47:main.c        **** /**
  48:main.c        ****  * @file    main.c
  49:main.c        ****  * @brief   
  50:main.c        ****  * @details  ** You should enable global interrupt for operating properly. **<br>&nbsp;&nbsp;&nbsp;
  51:main.c        **** */
  52:main.c        **** 
  53:main.c        **** /*
  54:main.c        **** //battery level//
  55:main.c        **** int main()
  56:main.c        **** {
  57:main.c        ****     CyGlobalIntEnable; 
  58:main.c        ****     UART_1_Start();
  59:main.c        ****     ADC_Battery_Start();        
  60:main.c        ****     int16 adcresult =0;
  61:main.c        ****     //float volts = 0.0;
  62:main.c        **** 
  63:main.c        ****     printf("\nBoot\n");
  64:main.c        **** 
  65:main.c        ****     //BatteryLed_Write(1); // Switch led on 
  66:main.c        ****     BatteryLed_Write(0); // Switch led off 
  67:main.c        ****     //uint8 button;
  68:main.c        ****     //button = SW1_Read(); // read SW1 on pSoC board
  69:main.c        **** 
  70:main.c        ****     for(;;)
  71:main.c        ****     {
  72:main.c        ****         
  73:main.c        ****         ADC_Battery_StartConvert();
  74:main.c        ****         if(ADC_Battery_IsEndConversion(ADC_Battery_WAIT_FOR_RESULT)) {   // wait for get ADC conver
  75:main.c        ****             adcresult = ADC_Battery_GetResult16();
  76:main.c        ****             volts = ADC_Battery_CountsTo_Volts(adcresult);                  // convert value to Vol
  77:main.c        ****         
  78:main.c        ****             // If you want to print value
  79:main.c        ****             printf("%d %f\r\n",adcresult, volts*1.5+0.045);
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 3


  80:main.c        ****         }
  81:main.c        ****         CyDelay(500);
  82:main.c        ****     }
  83:main.c        ****    
  84:main.c        ****     int choice;
  85:main.c        ****     int IR_val;
  86:main.c        ****     while(1) {
  87:main.c        ****         do {
  88:main.c        ****             IR_val = get_IR();
  89:main.c        ****         }
  90:main.c        ****         while(!IR_val);
  91:main.c        ****         motor_start();
  92:main.c        ****        
  93:main.c        ****         motor_forward(110,4800);
  94:main.c        ****         motor_turn(160,0,470);
  95:main.c        ****         motor_forward(100,3800);
  96:main.c        ****         motor_turn(170,0,470);
  97:main.c        ****         motor_forward(200,2450);
  98:main.c        ****         motor_turn(230,0,600);
  99:main.c        ****         motor_turn(90,120,3620);
 100:main.c        ****         
 101:main.c        ****         motor_stop();
 102:main.c        **** 
 103:main.c        ****     }
 104:main.c        **** }
 105:main.c        **** */
 106:main.c        **** 
 107:main.c        **** 
 108:main.c        **** /*//ultra sonic sensor//
 109:main.c        **** int main()
 110:main.c        **** {
 111:main.c        ****     CyGlobalIntEnable; 
 112:main.c        ****     UART_1_Start();
 113:main.c        ****     Ultra_Start();                          // Ultra Sonic Start function
 114:main.c        ****     while(1) {
 115:main.c        ****         //If you want to print out the value  
 116:main.c        ****         printf("distance = %5.0f\r\n", Ultra_GetDistance());
 117:main.c        ****         CyDelay(1000);
 118:main.c        ****     }
 119:main.c        **** }   
 120:main.c        **** //*/
 121:main.c        **** 
 122:main.c        **** 
 123:main.c        **** /*//nunchuk//
 124:main.c        **** int main()
 125:main.c        **** {
 126:main.c        ****     CyGlobalIntEnable; 
 127:main.c        ****     UART_1_Start();
 128:main.c        ****   
 129:main.c        ****     nunchuk_start();
 130:main.c        ****     nunchuk_init();
 131:main.c        ****     
 132:main.c        ****     for(;;)
 133:main.c        ****     {    
 134:main.c        ****         nunchuk_read();
 135:main.c        ****     }
 136:main.c        **** }   
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 4


 137:main.c        **** //*/
 138:main.c        **** 
 139:main.c        **** 
 140:main.c        **** /*//IR receiver//
 141:main.c        **** int main()
 142:main.c        **** {
 143:main.c        ****     CyGlobalIntEnable; 
 144:main.c        ****     UART_1_Start();
 145:main.c        ****     
 146:main.c        ****     unsigned int IR_val; 
 147:main.c        ****     
 148:main.c        ****     for(;;)
 149:main.c        ****     {
 150:main.c        ****        IR_val = get_IR();
 151:main.c        ****        printf("%x\r\n\n",IR_val);
 152:main.c        ****     }    
 153:main.c        ****  }   
 154:main.c        **** //*/
 155:main.c        **** 
 156:main.c        **** 
 157:main.c        **** /*//Ambient light sensor//
 158:main.c        **** int main()
 159:main.c        **** {
 160:main.c        ****     CyGlobalIntEnable; 
 161:main.c        ****     UART_1_Start();
 162:main.c        ****     
 163:main.c        ****     I2C_Start();
 164:main.c        ****     
 165:main.c        ****     I2C_write(0x29,0x80,0x00);          // set to power down
 166:main.c        ****     I2C_write(0x29,0x80,0x03);          // set to power on
 167:main.c        ****     
 168:main.c        ****     for(;;)
 169:main.c        ****     {    
 170:main.c        ****         uint8 Data0Low,Data0High,Data1Low,Data1High;
 171:main.c        ****         Data0Low = I2C_read(0x29,CH0_L);
 172:main.c        ****         Data0High = I2C_read(0x29,CH0_H);
 173:main.c        ****         Data1Low = I2C_read(0x29,CH1_L);
 174:main.c        ****         Data1High = I2C_read(0x29,CH1_H);
 175:main.c        ****         
 176:main.c        ****         uint8 CH0, CH1;
 177:main.c        ****         CH0 = convert_raw(Data0Low,Data0High);      // combine Data0
 178:main.c        ****         CH1 = convert_raw(Data1Low,Data1High);      // combine Data1
 179:main.c        **** 
 180:main.c        ****         double Ch0 = CH0;
 181:main.c        ****         double Ch1 = CH1;
 182:main.c        ****         
 183:main.c        ****         double data = 0;
 184:main.c        ****         data = getLux(Ch0,Ch1);
 185:main.c        ****         
 186:main.c        ****         // If you want to print out data
 187:main.c        ****         //printf("%lf\r\n",data);    
 188:main.c        ****     }    
 189:main.c        ****  }   
 190:main.c        **** //*/
 191:main.c        **** 
 192:main.c        **** 
 193:main.c        **** /*//accelerometer//
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 5


 194:main.c        **** int main()
 195:main.c        **** {
 196:main.c        ****     CyGlobalIntEnable; 
 197:main.c        ****     UART_1_Start();
 198:main.c        ****   
 199:main.c        ****     I2C_Start();
 200:main.c        ****   
 201:main.c        ****     uint8 X_L_A, X_H_A, Y_L_A, Y_H_A, Z_L_A, Z_H_A;
 202:main.c        ****     int16 X_AXIS_A, Y_AXIS_A, Z_AXIS_A;
 203:main.c        ****     
 204:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL1_REG, 0x37);           // set accelerometer & magnetometer
 205:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL7_REG, 0x22);
 206:main.c        ****     
 207:main.c        ****     
 208:main.c        ****     for(;;)
 209:main.c        ****     {
 210:main.c        ****         //print out accelerometer output
 211:main.c        ****         X_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_X_L_A);
 212:main.c        ****         X_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_X_H_A);
 213:main.c        ****         X_AXIS_A = convert_raw(X_L_A, X_H_A);
 214:main.c        ****         
 215:main.c        ****         Y_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_Y_L_A);
 216:main.c        ****         Y_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_Y_H_A);
 217:main.c        ****         Y_AXIS_A = convert_raw(Y_L_A, Y_H_A);
 218:main.c        ****         
 219:main.c        ****         Z_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_Z_L_A);
 220:main.c        ****         Z_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_Z_H_A);
 221:main.c        ****         Z_AXIS_A = convert_raw(Z_L_A, Z_H_A);
 222:main.c        ****         
 223:main.c        ****         printf("ACCEL: %d %d %d %d %d %d \r\n", X_L_A, X_H_A, Y_L_A, Y_H_A, Z_L_A, Z_H_A);
 224:main.c        ****         value_convert_accel(X_AXIS_A, Y_AXIS_A, Z_AXIS_A);
 225:main.c        ****         printf("\n");
 226:main.c        ****         
 227:main.c        ****         CyDelay(50);
 228:main.c        ****     }
 229:main.c        **** }   
 230:main.c        **** //*/
 231:main.c        **** 
 232:main.c        **** //reflectance//
 233:main.c        **** int main()
 234:main.c        **** {
  36              		.loc 1 234 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 24
  39              		@ frame_needed = 0, uses_anonymous_args = 0
  40 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  41              		.cfi_def_cfa_offset 36
  42              		.cfi_offset 4, -36
  43              		.cfi_offset 5, -32
  44              		.cfi_offset 6, -28
  45              		.cfi_offset 7, -24
  46              		.cfi_offset 8, -20
  47              		.cfi_offset 9, -16
  48              		.cfi_offset 10, -12
  49              		.cfi_offset 11, -8
  50              		.cfi_offset 14, -4
  51 0004 87B0     		sub	sp, sp, #28
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 6


  52              		.cfi_def_cfa_offset 64
 235:main.c        ****     struct sensors_ ref;
 236:main.c        ****     struct sensors_ dig;
 237:main.c        ****     CyGlobalIntEnable; 
  53              		.loc 1 237 0
  54              		.syntax unified
  55              	@ 237 "main.c" 1
  56 0006 62B6     		CPSIE   i
  57              	@ 0 "" 2
 238:main.c        ****     UART_1_Start();
  58              		.loc 1 238 0
  59              		.thumb
  60              		.syntax unified
  61 0008 FFF7FEFF 		bl	UART_1_Start
  62              	.LVL0:
 239:main.c        ****   
 240:main.c        ****     sensor_isr_StartEx(sensor_isr_handler);
  63              		.loc 1 240 0
  64 000c 9148     		ldr	r0, .L27
  65 000e FFF7FEFF 		bl	sensor_isr_StartEx
  66              	.LVL1:
 241:main.c        ****     
 242:main.c        ****     reflectance_start();
  67              		.loc 1 242 0
  68 0012 FFF7FEFF 		bl	reflectance_start
  69              	.LVL2:
 243:main.c        ****     int left_white = 5450, right_white = 5400, black = 24000;
 244:main.c        ****     
 245:main.c        ****     IR_led_Write(1);
  70              		.loc 1 245 0
  71 0016 0120     		movs	r0, #1
  72 0018 FFF7FEFF 		bl	IR_led_Write
  73              	.LVL3:
  74              	.L2:
 246:main.c        ****     int IR_val;
 247:main.c        ****     int stopCounter = 0, left_speed = 255, right_speed = 255, max_speed = 255, oldSignalValue = -1,
 248:main.c        ****     float error_left = 0, error_right = 0, old_error_right = 500000, old_error_left = 500000, old_s
 249:main.c        ****     
 250:main.c        ****     for(;;)
 251:main.c        ****     {
 252:main.c        ****         /*
 253:main.c        ****         do
 254:main.c        ****         {
 255:main.c        ****         reflectance_read(&ref);
 256:main.c        ****         printf("%d %d %d %d \r\n", ref.l3, ref.l1, ref.r1, ref.r3);       //print out each period o
 257:main.c        ****         reflectance_digital(&dig);      //print out 0 or 1 according to results of reflectance peri
 258:main.c        ****         printf("%d %d %d %d \r\n", dig.l3, dig.l1, dig.r1, dig.r3);        //print out 0 or 1 accor
 259:main.c        ****         CyDelay(1000);
 260:main.c        ****         }
 261:main.c        ****         while(1);
 262:main.c        ****         */
 263:main.c        ****         
 264:main.c        ****         
 265:main.c        ****         //int lineChecker = 0; //variable to check if the line is still the same
 266:main.c        ****         //float accelerator = 1;
 267:main.c        ****         
 268:main.c        ****         //remote control
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 7


 269:main.c        ****         do 
 270:main.c        ****         {
 271:main.c        ****             IR_val = get_IR();
  75              		.loc 1 271 0 discriminator 1
  76 001c FFF7FEFF 		bl	get_IR
  77              	.LVL4:
 272:main.c        ****         }
 273:main.c        ****         while(!IR_val);
  78              		.loc 1 273 0 discriminator 1
  79 0020 0028     		cmp	r0, #0
  80 0022 FBD0     		beq	.L2
 274:main.c        ****         
 275:main.c        ****         motor_start();
  81              		.loc 1 275 0
  82 0024 FFF7FEFF 		bl	motor_start
  83              	.LVL5:
 248:main.c        ****     
  84              		.loc 1 248 0
  85 0028 4FF00009 		mov	r9, #0
  86 002c CDF80090 		str	r9, [sp]	@ float
  87 0030 DFF838A2 		ldr	r10, .L27+24
  88 0034 CDF804A0 		str	r10, [sp, #4]	@ float
 247:main.c        ****     float error_left = 0, error_right = 0, old_error_right = 500000, old_error_left = 500000, old_s
  89              		.loc 1 247 0
  90 0038 4FF4FA77 		mov	r7, #500
  91 003c 4FF0FF36 		mov	r6, #-1
  92 0040 4FF0FF0B 		mov	fp, #255
  93 0044 5D46     		mov	r5, fp
  94 0046 5C46     		mov	r4, fp
  95 0048 4FF00008 		mov	r8, #0
  96              	.LVL6:
  97              	.L15:
 276:main.c        ****        
 277:main.c        ****         do
 278:main.c        ****         { 
 279:main.c        ****             reflectance_read(&ref);
  98              		.loc 1 279 0
  99 004c 04A8     		add	r0, sp, #16
 100 004e FFF7FEFF 		bl	reflectance_read
 101              	.LVL7:
 280:main.c        ****             reflectance_digital(&dig);
 102              		.loc 1 280 0
 103 0052 02A8     		add	r0, sp, #8
 104 0054 FFF7FEFF 		bl	reflectance_digital
 105              	.LVL8:
 281:main.c        ****             //for pausing at extra line
 282:main.c        ****             
 283:main.c        ****             if(dig.l1 + dig.l3 + dig.r1 + dig.r3 == 0)
 106              		.loc 1 283 0
 107 0058 BDF80A20 		ldrh	r2, [sp, #10]
 108 005c BDF80830 		ldrh	r3, [sp, #8]
 109 0060 1344     		add	r3, r3, r2
 110 0062 BDF80C20 		ldrh	r2, [sp, #12]
 111 0066 1344     		add	r3, r3, r2
 112 0068 BDF80E20 		ldrh	r2, [sp, #14]
 113 006c D318     		adds	r3, r2, r3
 114 006e 15D1     		bne	.L3
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 8


 284:main.c        ****             {
 285:main.c        ****                 if(dig.l1 + dig.l3 + dig.r1 + dig.r3 != oldSignalValue )
 115              		.loc 1 285 0
 116 0070 9E42     		cmp	r6, r3
 117 0072 01D0     		beq	.L4
 286:main.c        ****                 {   
 287:main.c        ****                     stopCounter ++;
 118              		.loc 1 287 0
 119 0074 08F10108 		add	r8, r8, #1
 120              	.LVL9:
 121              	.L4:
 288:main.c        ****                 }
 289:main.c        ****                 if(stopCounter == 1 || stopCounter == 3)
 122              		.loc 1 289 0
 123 0078 B8F1010F 		cmp	r8, #1
 124 007c 02D0     		beq	.L5
 125              		.loc 1 289 0 is_stmt 0 discriminator 1
 126 007e B8F1030F 		cmp	r8, #3
 127 0082 0BD1     		bne	.L3
 128              	.L5:
 290:main.c        ****                 {
 291:main.c        ****                     motor_stop();
 129              		.loc 1 291 0 is_stmt 1
 130 0084 FFF7FEFF 		bl	motor_stop
 131              	.LVL10:
 132              	.L6:
 292:main.c        ****                 do
 293:main.c        ****                 {
 294:main.c        ****                     IR_val = get_IR();
 133              		.loc 1 294 0 discriminator 1
 134 0088 FFF7FEFF 		bl	get_IR
 135              	.LVL11:
 295:main.c        ****                 }
 296:main.c        ****                 while(!IR_val);
 136              		.loc 1 296 0 discriminator 1
 137 008c 0028     		cmp	r0, #0
 138 008e FBD0     		beq	.L6
 297:main.c        ****                 motor_start();
 139              		.loc 1 297 0
 140 0090 FFF7FEFF 		bl	motor_start
 141              	.LVL12:
 298:main.c        ****                 motor_forward(220,100);
 142              		.loc 1 298 0
 143 0094 6421     		movs	r1, #100
 144 0096 DC20     		movs	r0, #220
 145 0098 FFF7FEFF 		bl	motor_forward
 146              	.LVL13:
 147              	.L3:
 299:main.c        ****                 }
 300:main.c        ****             }
 301:main.c        ****             oldSignalValue = dig.l1 + dig.l3 + dig.r1 + dig.r3;
 148              		.loc 1 301 0
 149 009c BDF80A10 		ldrh	r1, [sp, #10]
 150 00a0 BDF80860 		ldrh	r6, [sp, #8]
 151              	.LVL14:
 152 00a4 0E44     		add	r6, r6, r1
 153 00a6 BDF80C20 		ldrh	r2, [sp, #12]
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 9


 154 00aa B318     		adds	r3, r6, r2
 155 00ac BDF80E60 		ldrh	r6, [sp, #14]
 156 00b0 1E44     		add	r6, r6, r3
 157              	.LVL15:
 302:main.c        ****             
 303:main.c        ****             
 304:main.c        ****             if(dig.l1 + dig.r1 == 2)
 158              		.loc 1 304 0
 159 00b2 0A44     		add	r2, r2, r1
 160 00b4 022A     		cmp	r2, #2
 161 00b6 27D1     		bne	.L7
 305:main.c        ****             {   
 306:main.c        ****                 if(old_speed_left > old_speed_right)
 162              		.loc 1 306 0
 163 00b8 4946     		mov	r1, r9
 164 00ba 009C     		ldr	r4, [sp]	@ float
 165              	.LVL16:
 166 00bc 2046     		mov	r0, r4
 167 00be FFF7FEFF 		bl	__aeabi_fcmpgt
 168              	.LVL17:
 169 00c2 80B1     		cbz	r0, .L24
 307:main.c        ****                 {
 308:main.c        ****                     left_speed  = old_speed_left   + 120;
 170              		.loc 1 308 0
 171 00c4 6449     		ldr	r1, .L27+4
 172 00c6 2046     		mov	r0, r4
 173 00c8 FFF7FEFF 		bl	__aeabi_fadd
 174              	.LVL18:
 175 00cc FFF7FEFF 		bl	__aeabi_f2iz
 176              	.LVL19:
 177 00d0 0446     		mov	r4, r0
 178              	.LVL20:
 309:main.c        ****                     right_speed = old_speed_right  - 120;
 179              		.loc 1 309 0
 180 00d2 6149     		ldr	r1, .L27+4
 181 00d4 4846     		mov	r0, r9
 182              	.LVL21:
 183 00d6 FFF7FEFF 		bl	__aeabi_fsub
 184              	.LVL22:
 185 00da FFF7FEFF 		bl	__aeabi_f2iz
 186              	.LVL23:
 187 00de 0546     		mov	r5, r0
 188              	.LVL24:
 310:main.c        ****                 }
 311:main.c        ****                 else
 312:main.c        ****                 {
 313:main.c        ****                     left_speed = old_speed_left   - 120;
 314:main.c        ****                     right_speed = old_speed_right + 120;
 315:main.c        ****                 }
 316:main.c        ****                 flag = 1;
 189              		.loc 1 316 0
 190 00e0 4FF0010A 		mov	r10, #1
 191              	.LVL25:
 192 00e4 42E0     		b	.L10
 193              	.LVL26:
 194              	.L24:
 313:main.c        ****                     right_speed = old_speed_right + 120;
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 10


 195              		.loc 1 313 0
 196 00e6 5C49     		ldr	r1, .L27+4
 197 00e8 0098     		ldr	r0, [sp]	@ float
 198 00ea FFF7FEFF 		bl	__aeabi_fsub
 199              	.LVL27:
 200 00ee FFF7FEFF 		bl	__aeabi_f2iz
 201              	.LVL28:
 202 00f2 0446     		mov	r4, r0
 203              	.LVL29:
 314:main.c        ****                 }
 204              		.loc 1 314 0
 205 00f4 5849     		ldr	r1, .L27+4
 206 00f6 4846     		mov	r0, r9
 207              	.LVL30:
 208 00f8 FFF7FEFF 		bl	__aeabi_fadd
 209              	.LVL31:
 210 00fc FFF7FEFF 		bl	__aeabi_f2iz
 211              	.LVL32:
 212 0100 0546     		mov	r5, r0
 213              	.LVL33:
 214              		.loc 1 316 0
 215 0102 4FF0010A 		mov	r10, #1
 216              	.LVL34:
 217 0106 31E0     		b	.L10
 218              	.LVL35:
 219              	.L7:
 317:main.c        ****             }
 318:main.c        ****             
 319:main.c        ****             else
 320:main.c        ****             
 321:main.c        ****             if(old_error_left - (black - ref.l1) < 500 && old_error_right - (black - ref.r1) < 500)
 220              		.loc 1 321 0
 221 0108 BDF81200 		ldrh	r0, [sp, #18]
 222 010c C0F5BB40 		rsb	r0, r0, #23936
 223 0110 4030     		adds	r0, r0, #64
 224 0112 FFF7FEFF 		bl	__aeabi_i2f
 225              	.LVL36:
 226 0116 0146     		mov	r1, r0
 227 0118 5046     		mov	r0, r10
 228 011a FFF7FEFF 		bl	__aeabi_fsub
 229              	.LVL37:
 230 011e 4F49     		ldr	r1, .L27+8
 231 0120 FFF7FEFF 		bl	__aeabi_fcmplt
 232              	.LVL38:
 233 0124 A8B1     		cbz	r0, .L25
 234              		.loc 1 321 0 is_stmt 0 discriminator 1
 235 0126 BDF81400 		ldrh	r0, [sp, #20]
 236 012a C0F5BB40 		rsb	r0, r0, #23936
 237 012e 4030     		adds	r0, r0, #64
 238 0130 FFF7FEFF 		bl	__aeabi_i2f
 239              	.LVL39:
 240 0134 0146     		mov	r1, r0
 241 0136 0198     		ldr	r0, [sp, #4]	@ float
 242 0138 FFF7FEFF 		bl	__aeabi_fsub
 243              	.LVL40:
 244 013c 4749     		ldr	r1, .L27+8
 245 013e FFF7FEFF 		bl	__aeabi_fcmplt
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 11


 246              	.LVL41:
 247 0142 68B9     		cbnz	r0, .L17
 322:main.c        ****                 {
 323:main.c        ****                     Kp = 325;
 324:main.c        ****                     max_speed = 255;
 325:main.c        ****                     flag = 0;
 326:main.c        ****                 }
 327:main.c        ****             else
 328:main.c        ****                 {
 329:main.c        ****                     Kp = 500;
 330:main.c        ****                     max_speed = 125;
 331:main.c        ****                     flag = 0;
 248              		.loc 1 331 0 is_stmt 1
 249 0144 4FF0000A 		mov	r10, #0
 250              	.LVL42:
 329:main.c        ****                     max_speed = 125;
 251              		.loc 1 329 0
 252 0148 4FF4FA77 		mov	r7, #500
 253              	.LVL43:
 330:main.c        ****                     flag = 0;
 254              		.loc 1 330 0
 255 014c 4FF07D0B 		mov	fp, #125
 256              	.LVL44:
 257 0150 0CE0     		b	.L10
 258              	.LVL45:
 259              	.L25:
 260              		.loc 1 331 0
 261 0152 4FF0000A 		mov	r10, #0
 262              	.LVL46:
 329:main.c        ****                     max_speed = 125;
 263              		.loc 1 329 0
 264 0156 4FF4FA77 		mov	r7, #500
 265              	.LVL47:
 330:main.c        ****                     flag = 0;
 266              		.loc 1 330 0
 267 015a 4FF07D0B 		mov	fp, #125
 268              	.LVL48:
 269 015e 05E0     		b	.L10
 270              	.LVL49:
 271              	.L17:
 325:main.c        ****                 }
 272              		.loc 1 325 0
 273 0160 4FF0000A 		mov	r10, #0
 274              	.LVL50:
 323:main.c        ****                     max_speed = 255;
 275              		.loc 1 323 0
 276 0164 40F24517 		movw	r7, #325
 277              	.LVL51:
 324:main.c        ****                     flag = 0;
 278              		.loc 1 324 0
 279 0168 4FF0FF0B 		mov	fp, #255
 280              	.LVL52:
 281              	.L10:
 332:main.c        ****                 }
 333:main.c        ****             
 334:main.c        ****              
 335:main.c        ****                  
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 12


 336:main.c        ****             error_left  = ((float)black - ref.l1)/(black - left_white);
 282              		.loc 1 336 0
 283 016c BDF81200 		ldrh	r0, [sp, #18]
 284 0170 FFF7FEFF 		bl	__aeabi_i2f
 285              	.LVL53:
 286 0174 0146     		mov	r1, r0
 287 0176 3A48     		ldr	r0, .L27+12
 288 0178 FFF7FEFF 		bl	__aeabi_fsub
 289              	.LVL54:
 290 017c 3949     		ldr	r1, .L27+16
 291 017e FFF7FEFF 		bl	__aeabi_fdiv
 292              	.LVL55:
 293 0182 8146     		mov	r9, r0
 294              	.LVL56:
 337:main.c        ****             error_right = ((float)black - ref.r1)/(black - right_white);
 295              		.loc 1 337 0
 296 0184 BDF81400 		ldrh	r0, [sp, #20]
 297              	.LVL57:
 298 0188 FFF7FEFF 		bl	__aeabi_i2f
 299              	.LVL58:
 300 018c 0146     		mov	r1, r0
 301 018e 3448     		ldr	r0, .L27+12
 302 0190 FFF7FEFF 		bl	__aeabi_fsub
 303              	.LVL59:
 304 0194 3449     		ldr	r1, .L27+20
 305 0196 FFF7FEFF 		bl	__aeabi_fdiv
 306              	.LVL60:
 307 019a 0090     		str	r0, [sp]	@ float
 308              	.LVL61:
 338:main.c        ****             
 339:main.c        ****             if (flag == 0)
 309              		.loc 1 339 0
 310 019c BAF1000F 		cmp	r10, #0
 311 01a0 25D1     		bne	.L12
 340:main.c        ****             {
 341:main.c        ****             left_speed  =  max_speed - error_right * Kp + error_left ;
 312              		.loc 1 341 0
 313 01a2 5846     		mov	r0, fp
 314              	.LVL62:
 315 01a4 FFF7FEFF 		bl	__aeabi_i2f
 316              	.LVL63:
 317 01a8 0546     		mov	r5, r0
 318              	.LVL64:
 319 01aa 3846     		mov	r0, r7
 320 01ac FFF7FEFF 		bl	__aeabi_i2f
 321              	.LVL65:
 322 01b0 8246     		mov	r10, r0
 323              	.LVL66:
 324 01b2 0146     		mov	r1, r0
 325 01b4 0098     		ldr	r0, [sp]	@ float
 326 01b6 FFF7FEFF 		bl	__aeabi_fmul
 327              	.LVL67:
 328 01ba 0146     		mov	r1, r0
 329 01bc 2846     		mov	r0, r5
 330 01be FFF7FEFF 		bl	__aeabi_fsub
 331              	.LVL68:
 332 01c2 0146     		mov	r1, r0
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 13


 333 01c4 4846     		mov	r0, r9
 334 01c6 FFF7FEFF 		bl	__aeabi_fadd
 335              	.LVL69:
 336 01ca FFF7FEFF 		bl	__aeabi_f2iz
 337              	.LVL70:
 338 01ce 0446     		mov	r4, r0
 339              	.LVL71:
 342:main.c        ****             right_speed =  max_speed - error_left  * Kp + error_right; 
 340              		.loc 1 342 0
 341 01d0 5146     		mov	r1, r10
 342 01d2 4846     		mov	r0, r9
 343              	.LVL72:
 344 01d4 FFF7FEFF 		bl	__aeabi_fmul
 345              	.LVL73:
 346 01d8 0146     		mov	r1, r0
 347 01da 2846     		mov	r0, r5
 348 01dc FFF7FEFF 		bl	__aeabi_fsub
 349              	.LVL74:
 350 01e0 0146     		mov	r1, r0
 351 01e2 0098     		ldr	r0, [sp]	@ float
 352 01e4 FFF7FEFF 		bl	__aeabi_fadd
 353              	.LVL75:
 354 01e8 FFF7FEFF 		bl	__aeabi_f2iz
 355              	.LVL76:
 356 01ec 0546     		mov	r5, r0
 357              	.LVL77:
 358              	.L12:
 343:main.c        ****             }
 344:main.c        ****             
 345:main.c        ****             if(left_speed >= 255)
 359              		.loc 1 345 0
 360 01ee FE2C     		cmp	r4, #254
 361 01f0 03DC     		bgt	.L18
 346:main.c        ****             {
 347:main.c        ****                 left_speed = 255;
 348:main.c        ****             }
 349:main.c        ****             else if(left_speed <= - 255)
 362              		.loc 1 349 0
 363 01f2 14F1FE0F 		cmn	r4, #254
 364 01f6 02DB     		blt	.L19
 365 01f8 03E0     		b	.L13
 366              	.L18:
 347:main.c        ****             }
 367              		.loc 1 347 0
 368 01fa FF24     		movs	r4, #255
 369              	.LVL78:
 370 01fc 01E0     		b	.L13
 371              	.LVL79:
 372              	.L19:
 350:main.c        ****             {
 351:main.c        ****                 left_speed = -255;
 373              		.loc 1 351 0
 374 01fe 6FF0FE04 		mvn	r4, #254
 375              	.LVL80:
 376              	.L13:
 352:main.c        ****             }
 353:main.c        ****             
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 14


 354:main.c        ****             
 355:main.c        ****             if(right_speed >= 255)
 377              		.loc 1 355 0
 378 0202 FE2D     		cmp	r5, #254
 379 0204 03DC     		bgt	.L20
 356:main.c        ****             {
 357:main.c        ****                 right_speed = 255;
 358:main.c        ****             }
 359:main.c        ****             else if(right_speed < - 255)
 380              		.loc 1 359 0
 381 0206 15F1FF0F 		cmn	r5, #255
 382 020a 02DB     		blt	.L21
 383 020c 03E0     		b	.L14
 384              	.L20:
 357:main.c        ****             }
 385              		.loc 1 357 0
 386 020e FF25     		movs	r5, #255
 387              	.LVL81:
 388 0210 01E0     		b	.L14
 389              	.LVL82:
 390              	.L21:
 360:main.c        ****             {
 361:main.c        ****                 right_speed = -255;
 391              		.loc 1 361 0
 392 0212 6FF0FE05 		mvn	r5, #254
 393              	.LVL83:
 394              	.L14:
 362:main.c        ****             }
 363:main.c        ****                         
 364:main.c        ****             motor_move(left_speed , right_speed , 1);
 395              		.loc 1 364 0
 396 0216 0122     		movs	r2, #1
 397 0218 2946     		mov	r1, r5
 398 021a 2046     		mov	r0, r4
 399 021c FFF7FEFF 		bl	motor_move
 400              	.LVL84:
 365:main.c        ****             
 366:main.c        ****             old_error_left  = black - ref.l1;
 401              		.loc 1 366 0
 402 0220 BDF81200 		ldrh	r0, [sp, #18]
 403 0224 45F6C059 		movw	r9, #24000
 404              	.LVL85:
 405 0228 C0EB0900 		rsb	r0, r0, r9
 406 022c FFF7FEFF 		bl	__aeabi_i2f
 407              	.LVL86:
 408 0230 8246     		mov	r10, r0
 409              	.LVL87:
 367:main.c        ****             old_error_right = black - ref.r1;
 410              		.loc 1 367 0
 411 0232 BDF81400 		ldrh	r0, [sp, #20]
 412              	.LVL88:
 413 0236 C0EB0900 		rsb	r0, r0, r9
 414 023a FFF7FEFF 		bl	__aeabi_i2f
 415              	.LVL89:
 416 023e 0190     		str	r0, [sp, #4]	@ float
 417              	.LVL90:
 368:main.c        ****             
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 15


 369:main.c        ****             old_speed_left  = left_speed;
 418              		.loc 1 369 0
 419 0240 2046     		mov	r0, r4
 420              	.LVL91:
 421 0242 FFF7FEFF 		bl	__aeabi_i2f
 422              	.LVL92:
 423 0246 0090     		str	r0, [sp]	@ float
 424              	.LVL93:
 370:main.c        ****             old_speed_right = right_speed;
 425              		.loc 1 370 0
 426 0248 2846     		mov	r0, r5
 427              	.LVL94:
 428 024a FFF7FEFF 		bl	__aeabi_i2f
 429              	.LVL95:
 430 024e 8146     		mov	r9, r0
 431              	.LVL96:
 371:main.c        ****             
 372:main.c        ****         }
 373:main.c        ****         while(1);
 432              		.loc 1 373 0
 433 0250 FCE6     		b	.L15
 434              	.L28:
 435 0252 00BF     		.align	2
 436              	.L27:
 437 0254 00000000 		.word	sensor_isr_handler
 438 0258 0000F042 		.word	1123024896
 439 025c 0000FA43 		.word	1140457472
 440 0260 0080BB46 		.word	1186693120
 441 0264 00EC9046 		.word	1183902720
 442 0268 00509146 		.word	1183928320
 443 026c 0024F448 		.word	1223959552
 444              		.cfi_endproc
 445              	.LFE64:
 446              		.size	main, .-main
 447              		.section	.text._write,"ax",%progbits
 448              		.align	2
 449              		.global	_write
 450              		.thumb
 451              		.thumb_func
 452              		.type	_write, %function
 453              	_write:
 454              	.LFB65:
 374:main.c        ****             
 375:main.c        ****     }
 376:main.c        **** }   
 377:main.c        **** //
 378:main.c        **** 
 379:main.c        ****  /* //motor//
 380:main.c        **** int main()
 381:main.c        **** {
 382:main.c        ****     CyGlobalIntEnable; 
 383:main.c        ****     UART_1_Start();
 384:main.c        **** 
 385:main.c        ****     motor_start();              // motor start
 386:main.c        **** 
 387:main.c        ****     motor_forward(100,2000);     // moving forward
 388:main.c        ****     motor_turn(200,50,2000);     // turn
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 16


 389:main.c        ****     motor_turn(50,200,2000);     // turn
 390:main.c        ****     motor_backward(100,2000);    // movinb backward
 391:main.c        ****        
 392:main.c        ****     motor_stop();               // motor stop
 393:main.c        ****     
 394:main.c        ****     for(;;)
 395:main.c        ****     {
 396:main.c        **** 
 397:main.c        ****     }
 398:main.c        **** }
 399:main.c        **** //*/
 400:main.c        ****     
 401:main.c        **** 
 402:main.c        **** /*//gyroscope//
 403:main.c        **** int main()
 404:main.c        **** {
 405:main.c        ****     CyGlobalIntEnable; 
 406:main.c        ****     UART_1_Start();
 407:main.c        ****   
 408:main.c        ****     I2C_Start();
 409:main.c        ****   
 410:main.c        ****     uint8 X_L_G, X_H_G, Y_L_G, Y_H_G, Z_L_G, Z_H_G;
 411:main.c        ****     int16 X_AXIS_G, Y_AXIS_G, Z_AXIS_G;
 412:main.c        ****     
 413:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL1_REG, 0x0F);             // set gyroscope into active mode
 414:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL4_REG, 0x30);             // set full scale selection to 2000dps 
 415:main.c        ****     
 416:main.c        ****     for(;;)
 417:main.c        ****     {
 418:main.c        ****         //print out gyroscope output
 419:main.c        ****         X_L_G = I2C_read(GYRO_ADDR, OUT_X_AXIS_L);
 420:main.c        ****         X_H_G = I2C_read(GYRO_ADDR, OUT_X_AXIS_H);
 421:main.c        ****         X_AXIS_G = convert_raw(X_H_G, X_L_G);
 422:main.c        ****         
 423:main.c        ****         
 424:main.c        ****         Y_L_G = I2C_read(GYRO_ADDR, OUT_Y_AXIS_L);
 425:main.c        ****         Y_H_G = I2C_read(GYRO_ADDR, OUT_Y_AXIS_H);
 426:main.c        ****         Y_AXIS_G = convert_raw(Y_H_G, Y_L_G);
 427:main.c        ****         
 428:main.c        ****         
 429:main.c        ****         Z_L_G = I2C_read(GYRO_ADDR, OUT_Z_AXIS_L);
 430:main.c        ****         Z_H_G = I2C_read(GYRO_ADDR, OUT_Z_AXIS_H);
 431:main.c        ****         Z_AXIS_G = convert_raw(Z_H_G, Z_L_G);
 432:main.c        ****      
 433:main.c        ****         // If you want to print value
 434:main.c        ****         printf("%d %d %d \r\n", X_AXIS_G, Y_AXIS_G, Z_AXIS_G);
 435:main.c        ****         CyDelay(50);
 436:main.c        ****     }
 437:main.c        **** }   
 438:main.c        **** //*/
 439:main.c        **** 
 440:main.c        **** 
 441:main.c        **** /*//magnetometer//
 442:main.c        **** int main()
 443:main.c        **** {
 444:main.c        ****     CyGlobalIntEnable; 
 445:main.c        ****     UART_1_Start();
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 17


 446:main.c        ****   
 447:main.c        ****     I2C_Start();
 448:main.c        ****    
 449:main.c        ****     uint8 X_L_M, X_H_M, Y_L_M, Y_H_M, Z_L_M, Z_H_M;
 450:main.c        ****     int16 X_AXIS, Y_AXIS, Z_AXIS;
 451:main.c        ****     
 452:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL1_REG, 0x0F);             // set gyroscope into active mode
 453:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL4_REG, 0x30);             // set full scale selection to 2000dps
 454:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL1_REG, 0x37);           // set accelerometer & magnetometer
 455:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL7_REG, 0x22);
 456:main.c        ****     
 457:main.c        ****     
 458:main.c        ****     for(;;)
 459:main.c        ****     {
 460:main.c        ****         X_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_X_L_M);
 461:main.c        ****         X_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_X_H_M);
 462:main.c        ****         X_AXIS = convert_raw(X_L_M, X_H_M);
 463:main.c        ****         
 464:main.c        ****         Y_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_Y_L_M);
 465:main.c        ****         Y_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_Y_H_M);
 466:main.c        ****         Y_AXIS = convert_raw(Y_L_M, Y_H_M);
 467:main.c        ****         
 468:main.c        ****         Z_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_Z_L_M);
 469:main.c        ****         Z_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_Z_H_M);
 470:main.c        ****         Z_AXIS = convert_raw(Z_L_M, Z_H_M);
 471:main.c        ****         
 472:main.c        ****         heading(X_AXIS, Y_AXIS);
 473:main.c        ****         printf("MAGNET: %d %d %d %d %d %d \r\n", X_L_M, X_H_M, Y_L_M, Y_H_M, Z_L_M, Z_H_M);
 474:main.c        ****         printf("%d %d %d \r\n", X_AXIS,Y_AXIS, Z_AXIS);
 475:main.c        ****         CyDelay(50);      
 476:main.c        ****     }
 477:main.c        **** }   
 478:main.c        **** //*/
 479:main.c        **** 
 480:main.c        **** 
 481:main.c        **** #if 0
 482:main.c        **** int rread(void)
 483:main.c        **** {
 484:main.c        ****     SC0_SetDriveMode(PIN_DM_STRONG);
 485:main.c        ****     SC0_Write(1);
 486:main.c        ****     CyDelayUs(10);
 487:main.c        ****     SC0_SetDriveMode(PIN_DM_DIG_HIZ);
 488:main.c        ****     Timer_1_Start();
 489:main.c        ****     uint16_t start = Timer_1_ReadCounter();
 490:main.c        ****     uint16_t end = 0;
 491:main.c        ****     while(!(Timer_1_ReadStatusRegister() & Timer_1_STATUS_TC)) {
 492:main.c        ****         if(SC0_Read() == 0 && end == 0) {
 493:main.c        ****             end = Timer_1_ReadCounter();
 494:main.c        ****         }
 495:main.c        ****     }
 496:main.c        ****     Timer_1_Stop();
 497:main.c        ****     
 498:main.c        ****     return (start - end);
 499:main.c        **** }
 500:main.c        **** #endif
 501:main.c        **** 
 502:main.c        **** /* Don't remove the functions below */
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 18


 503:main.c        **** int _write(int file, char *ptr, int len)
 504:main.c        **** {
 455              		.loc 1 504 0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 0, uses_anonymous_args = 0
 459              	.LVL97:
 460 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 461              		.cfi_def_cfa_offset 24
 462              		.cfi_offset 3, -24
 463              		.cfi_offset 4, -20
 464              		.cfi_offset 5, -16
 465              		.cfi_offset 6, -12
 466              		.cfi_offset 7, -8
 467              		.cfi_offset 14, -4
 468 0002 0C46     		mov	r4, r1
 469 0004 1746     		mov	r7, r2
 470              	.LVL98:
 505:main.c        ****     (void)file; /* Parameter is not used, suppress unused argument warning */
 506:main.c        **** 	int n;
 507:main.c        **** 	for(n = 0; n < len; n++) {
 471              		.loc 1 507 0
 472 0006 0025     		movs	r5, #0
 473 0008 0BE0     		b	.L30
 474              	.LVL99:
 475              	.L32:
 508:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 476              		.loc 1 508 0
 477 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 478 000c 0A2B     		cmp	r3, #10
 479 000e 02D1     		bne	.L31
 480              		.loc 1 508 0 is_stmt 0 discriminator 1
 481 0010 0D20     		movs	r0, #13
 482 0012 FFF7FEFF 		bl	UART_1_PutChar
 483              	.LVL100:
 484              	.L31:
 509:main.c        **** 		UART_1_PutChar(*ptr++);
 485              		.loc 1 509 0 is_stmt 1 discriminator 2
 486 0016 661C     		adds	r6, r4, #1
 487              	.LVL101:
 488 0018 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 489 001a FFF7FEFF 		bl	UART_1_PutChar
 490              	.LVL102:
 507:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 491              		.loc 1 507 0 discriminator 2
 492 001e 0135     		adds	r5, r5, #1
 493              	.LVL103:
 494              		.loc 1 509 0 discriminator 2
 495 0020 3446     		mov	r4, r6
 496              	.LVL104:
 497              	.L30:
 507:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 498              		.loc 1 507 0 discriminator 1
 499 0022 BD42     		cmp	r5, r7
 500 0024 F1DB     		blt	.L32
 510:main.c        **** 	}
 511:main.c        **** 	return len;
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 19


 512:main.c        **** }
 501              		.loc 1 512 0
 502 0026 3846     		mov	r0, r7
 503 0028 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 504              		.cfi_endproc
 505              	.LFE65:
 506              		.size	_write, .-_write
 507 002a 00BF     		.section	.text._read,"ax",%progbits
 508              		.align	2
 509              		.global	_read
 510              		.thumb
 511              		.thumb_func
 512              		.type	_read, %function
 513              	_read:
 514              	.LFB66:
 513:main.c        **** 
 514:main.c        **** int _read (int file, char *ptr, int count)
 515:main.c        **** {
 515              		.loc 1 515 0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 0
 518              		@ frame_needed = 0, uses_anonymous_args = 0
 519              	.LVL105:
 520 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 521              		.cfi_def_cfa_offset 24
 522              		.cfi_offset 3, -24
 523              		.cfi_offset 4, -20
 524              		.cfi_offset 5, -16
 525              		.cfi_offset 6, -12
 526              		.cfi_offset 7, -8
 527              		.cfi_offset 14, -4
 528 0002 0F46     		mov	r7, r1
 529 0004 1446     		mov	r4, r2
 530              	.LVL106:
 516:main.c        ****     int chs = 0;
 531              		.loc 1 516 0
 532 0006 0026     		movs	r6, #0
 517:main.c        ****     char ch;
 518:main.c        ****  
 519:main.c        ****     (void)file; /* Parameter is not used, suppress unused argument warning */
 520:main.c        ****     while(count > 0) {
 533              		.loc 1 520 0
 534 0008 12E0     		b	.L36
 535              	.LVL107:
 536              	.L39:
 521:main.c        ****         ch = UART_1_GetChar();
 537              		.loc 1 521 0
 538 000a FFF7FEFF 		bl	UART_1_GetChar
 539              	.LVL108:
 522:main.c        ****         if(ch != 0) {
 540              		.loc 1 522 0
 541 000e 0546     		mov	r5, r0
 542 0010 70B1     		cbz	r0, .L36
 523:main.c        ****             UART_1_PutChar(ch);
 543              		.loc 1 523 0
 544 0012 FFF7FEFF 		bl	UART_1_PutChar
 545              	.LVL109:
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 20


 524:main.c        ****             chs++;
 546              		.loc 1 524 0
 547 0016 0136     		adds	r6, r6, #1
 548              	.LVL110:
 525:main.c        ****             if(ch == '\r') {
 549              		.loc 1 525 0
 550 0018 0D2D     		cmp	r5, #13
 551 001a 03D1     		bne	.L37
 552              	.LVL111:
 526:main.c        ****                 ch = '\n';
 527:main.c        ****                 UART_1_PutChar(ch);
 553              		.loc 1 527 0
 554 001c 0A20     		movs	r0, #10
 555 001e FFF7FEFF 		bl	UART_1_PutChar
 556              	.LVL112:
 526:main.c        ****                 ch = '\n';
 557              		.loc 1 526 0
 558 0022 0A25     		movs	r5, #10
 559              	.LVL113:
 560              	.L37:
 528:main.c        ****             }
 529:main.c        ****             *ptr++ = ch;
 561              		.loc 1 529 0
 562 0024 7B1C     		adds	r3, r7, #1
 563              	.LVL114:
 564 0026 3D70     		strb	r5, [r7]
 530:main.c        ****             count--;
 565              		.loc 1 530 0
 566 0028 013C     		subs	r4, r4, #1
 567              	.LVL115:
 531:main.c        ****             if(ch == '\n') break;
 568              		.loc 1 531 0
 569 002a 0A2D     		cmp	r5, #10
 570 002c 02D0     		beq	.L38
 529:main.c        ****             count--;
 571              		.loc 1 529 0
 572 002e 1F46     		mov	r7, r3
 573              	.LVL116:
 574              	.L36:
 520:main.c        ****         ch = UART_1_GetChar();
 575              		.loc 1 520 0
 576 0030 002C     		cmp	r4, #0
 577 0032 EADC     		bgt	.L39
 578              	.LVL117:
 579              	.L38:
 532:main.c        ****         }
 533:main.c        ****     }
 534:main.c        ****     return chs;
 535:main.c        **** }
 580              		.loc 1 535 0
 581 0034 3046     		mov	r0, r6
 582 0036 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 583              		.cfi_endproc
 584              	.LFE66:
 585              		.size	_read, .-_read
 586              		.text
 587              	.Letext0:
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 21


 588              		.file 2 "j:\\psoc\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.1\\arm-none-eabi\\includ
 589              		.file 3 "j:\\psoc\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.1\\arm-none-eabi\\includ
 590              		.file 4 ".\\ZumoLibrary/Reflectance.h"
 591              		.file 5 "Generated_Source\\PSoC5/UART_1.h"
 592              		.file 6 "Generated_Source\\PSoC5/sensor_isr.h"
 593              		.file 7 "Generated_Source\\PSoC5/IR_led.h"
 594              		.file 8 ".\\ZumoLibrary/IR.h"
 595              		.file 9 ".\\ZumoLibrary/Motor.h"
 596              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 597              		.section	.debug_info,"",%progbits
 598              	.Ldebug_info0:
 599 0000 87040000 		.4byte	0x487
 600 0004 0400     		.2byte	0x4
 601 0006 00000000 		.4byte	.Ldebug_abbrev0
 602 000a 04       		.byte	0x4
 603 000b 01       		.uleb128 0x1
 604 000c 9D020000 		.4byte	.LASF52
 605 0010 0C       		.byte	0xc
 606 0011 0F020000 		.4byte	.LASF53
 607 0015 D7010000 		.4byte	.LASF54
 608 0019 00000000 		.4byte	.Ldebug_ranges0+0
 609 001d 00000000 		.4byte	0
 610 0021 00000000 		.4byte	.Ldebug_line0
 611 0025 02       		.uleb128 0x2
 612 0026 01       		.byte	0x1
 613 0027 06       		.byte	0x6
 614 0028 48010000 		.4byte	.LASF0
 615 002c 02       		.uleb128 0x2
 616 002d 01       		.byte	0x1
 617 002e 08       		.byte	0x8
 618 002f 34010000 		.4byte	.LASF1
 619 0033 02       		.uleb128 0x2
 620 0034 02       		.byte	0x2
 621 0035 05       		.byte	0x5
 622 0036 2F000000 		.4byte	.LASF2
 623 003a 03       		.uleb128 0x3
 624 003b 76000000 		.4byte	.LASF4
 625 003f 02       		.byte	0x2
 626 0040 2B       		.byte	0x2b
 627 0041 45000000 		.4byte	0x45
 628 0045 02       		.uleb128 0x2
 629 0046 02       		.byte	0x2
 630 0047 07       		.byte	0x7
 631 0048 98010000 		.4byte	.LASF3
 632 004c 03       		.uleb128 0x3
 633 004d 52020000 		.4byte	.LASF5
 634 0051 02       		.byte	0x2
 635 0052 3F       		.byte	0x3f
 636 0053 57000000 		.4byte	0x57
 637 0057 02       		.uleb128 0x2
 638 0058 04       		.byte	0x4
 639 0059 05       		.byte	0x5
 640 005a 01010000 		.4byte	.LASF6
 641 005e 02       		.uleb128 0x2
 642 005f 04       		.byte	0x4
 643 0060 07       		.byte	0x7
 644 0061 16020000 		.4byte	.LASF7
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 22


 645 0065 02       		.uleb128 0x2
 646 0066 08       		.byte	0x8
 647 0067 05       		.byte	0x5
 648 0068 61000000 		.4byte	.LASF8
 649 006c 02       		.uleb128 0x2
 650 006d 08       		.byte	0x8
 651 006e 07       		.byte	0x7
 652 006f 54010000 		.4byte	.LASF9
 653 0073 04       		.uleb128 0x4
 654 0074 04       		.byte	0x4
 655 0075 05       		.byte	0x5
 656 0076 696E7400 		.ascii	"int\000"
 657 007a 02       		.uleb128 0x2
 658 007b 04       		.byte	0x4
 659 007c 07       		.byte	0x7
 660 007d 6B010000 		.4byte	.LASF10
 661 0081 03       		.uleb128 0x3
 662 0082 78010000 		.4byte	.LASF11
 663 0086 03       		.byte	0x3
 664 0087 24       		.byte	0x24
 665 0088 3A000000 		.4byte	0x3a
 666 008c 03       		.uleb128 0x3
 667 008d CF010000 		.4byte	.LASF12
 668 0091 03       		.byte	0x3
 669 0092 2C       		.byte	0x2c
 670 0093 4C000000 		.4byte	0x4c
 671 0097 02       		.uleb128 0x2
 672 0098 04       		.byte	0x4
 673 0099 04       		.byte	0x4
 674 009a CD000000 		.4byte	.LASF13
 675 009e 02       		.uleb128 0x2
 676 009f 08       		.byte	0x8
 677 00a0 04       		.byte	0x4
 678 00a1 77020000 		.4byte	.LASF14
 679 00a5 02       		.uleb128 0x2
 680 00a6 01       		.byte	0x1
 681 00a7 08       		.byte	0x8
 682 00a8 C5010000 		.4byte	.LASF15
 683 00ac 02       		.uleb128 0x2
 684 00ad 08       		.byte	0x8
 685 00ae 04       		.byte	0x4
 686 00af 1D010000 		.4byte	.LASF16
 687 00b3 02       		.uleb128 0x2
 688 00b4 04       		.byte	0x4
 689 00b5 07       		.byte	0x7
 690 00b6 49000000 		.4byte	.LASF17
 691 00ba 05       		.uleb128 0x5
 692 00bb 04       		.byte	0x4
 693 00bc A5000000 		.4byte	0xa5
 694 00c0 06       		.uleb128 0x6
 695 00c1 86000000 		.4byte	.LASF55
 696 00c5 08       		.byte	0x8
 697 00c6 04       		.byte	0x4
 698 00c7 11       		.byte	0x11
 699 00c8 F9000000 		.4byte	0xf9
 700 00cc 07       		.uleb128 0x7
 701 00cd 6C3300   		.ascii	"l3\000"
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 23


 702 00d0 04       		.byte	0x4
 703 00d1 12       		.byte	0x12
 704 00d2 81000000 		.4byte	0x81
 705 00d6 00       		.byte	0
 706 00d7 07       		.uleb128 0x7
 707 00d8 6C3100   		.ascii	"l1\000"
 708 00db 04       		.byte	0x4
 709 00dc 14       		.byte	0x14
 710 00dd 81000000 		.4byte	0x81
 711 00e1 02       		.byte	0x2
 712 00e2 07       		.uleb128 0x7
 713 00e3 723100   		.ascii	"r1\000"
 714 00e6 04       		.byte	0x4
 715 00e7 15       		.byte	0x15
 716 00e8 81000000 		.4byte	0x81
 717 00ec 04       		.byte	0x4
 718 00ed 07       		.uleb128 0x7
 719 00ee 723300   		.ascii	"r3\000"
 720 00f1 04       		.byte	0x4
 721 00f2 17       		.byte	0x17
 722 00f3 81000000 		.4byte	0x81
 723 00f7 06       		.byte	0x6
 724 00f8 00       		.byte	0
 725 00f9 08       		.uleb128 0x8
 726 00fa CA010000 		.4byte	.LASF34
 727 00fe 01       		.byte	0x1
 728 00ff E9       		.byte	0xe9
 729 0100 73000000 		.4byte	0x73
 730 0104 00000000 		.4byte	.LFB64
 731 0108 70020000 		.4byte	.LFE64-.LFB64
 732 010c 01       		.uleb128 0x1
 733 010d 9C       		.byte	0x9c
 734 010e DF020000 		.4byte	0x2df
 735 0112 09       		.uleb128 0x9
 736 0113 72656600 		.ascii	"ref\000"
 737 0117 01       		.byte	0x1
 738 0118 EB       		.byte	0xeb
 739 0119 C0000000 		.4byte	0xc0
 740 011d 02       		.uleb128 0x2
 741 011e 91       		.byte	0x91
 742 011f 50       		.sleb128 -48
 743 0120 09       		.uleb128 0x9
 744 0121 64696700 		.ascii	"dig\000"
 745 0125 01       		.byte	0x1
 746 0126 EC       		.byte	0xec
 747 0127 C0000000 		.4byte	0xc0
 748 012b 02       		.uleb128 0x2
 749 012c 91       		.byte	0x91
 750 012d 48       		.sleb128 -56
 751 012e 0A       		.uleb128 0xa
 752 012f 29010000 		.4byte	.LASF18
 753 0133 01       		.byte	0x1
 754 0134 F3       		.byte	0xf3
 755 0135 73000000 		.4byte	0x73
 756 0139 4A15     		.2byte	0x154a
 757 013b 0A       		.uleb128 0xa
 758 013c 11010000 		.4byte	.LASF19
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 24


 759 0140 01       		.byte	0x1
 760 0141 F3       		.byte	0xf3
 761 0142 73000000 		.4byte	0x73
 762 0146 1815     		.2byte	0x1518
 763 0148 0A       		.uleb128 0xa
 764 0149 00000000 		.4byte	.LASF20
 765 014d 01       		.byte	0x1
 766 014e F3       		.byte	0xf3
 767 014f 73000000 		.4byte	0x73
 768 0153 C05D     		.2byte	0x5dc0
 769 0155 0B       		.uleb128 0xb
 770 0156 0A010000 		.4byte	.LASF21
 771 015a 01       		.byte	0x1
 772 015b F6       		.byte	0xf6
 773 015c 73000000 		.4byte	0x73
 774 0160 00000000 		.4byte	.LLST0
 775 0164 0B       		.uleb128 0xb
 776 0165 03020000 		.4byte	.LASF22
 777 0169 01       		.byte	0x1
 778 016a F7       		.byte	0xf7
 779 016b 73000000 		.4byte	0x73
 780 016f 1E000000 		.4byte	.LLST1
 781 0173 0B       		.uleb128 0xb
 782 0174 81010000 		.4byte	.LASF23
 783 0178 01       		.byte	0x1
 784 0179 F7       		.byte	0xf7
 785 017a 73000000 		.4byte	0x73
 786 017e 3D000000 		.4byte	.LLST2
 787 0182 0B       		.uleb128 0xb
 788 0183 8C010000 		.4byte	.LASF24
 789 0187 01       		.byte	0x1
 790 0188 F7       		.byte	0xf7
 791 0189 73000000 		.4byte	0x73
 792 018d AA000000 		.4byte	.LLST3
 793 0191 0B       		.uleb128 0xb
 794 0192 6D020000 		.4byte	.LASF25
 795 0196 01       		.byte	0x1
 796 0197 F7       		.byte	0xf7
 797 0198 73000000 		.4byte	0x73
 798 019c 0C010000 		.4byte	.LLST4
 799 01a0 0B       		.uleb128 0xb
 800 01a1 52000000 		.4byte	.LASF26
 801 01a5 01       		.byte	0x1
 802 01a6 F7       		.byte	0xf7
 803 01a7 73000000 		.4byte	0x73
 804 01ab 42010000 		.4byte	.LLST5
 805 01af 0C       		.uleb128 0xc
 806 01b0 4B7000   		.ascii	"Kp\000"
 807 01b3 01       		.byte	0x1
 808 01b4 F7       		.byte	0xf7
 809 01b5 73000000 		.4byte	0x73
 810 01b9 6D010000 		.4byte	.LLST6
 811 01bd 0B       		.uleb128 0xb
 812 01be 47020000 		.4byte	.LASF27
 813 01c2 01       		.byte	0x1
 814 01c3 F7       		.byte	0xf7
 815 01c4 73000000 		.4byte	0x73
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 25


 816 01c8 AF010000 		.4byte	.LLST7
 817 01cc 0B       		.uleb128 0xb
 818 01cd D3000000 		.4byte	.LASF28
 819 01d1 01       		.byte	0x1
 820 01d2 F8       		.byte	0xf8
 821 01d3 97000000 		.4byte	0x97
 822 01d7 CE010000 		.4byte	.LLST8
 823 01db 0B       		.uleb128 0xb
 824 01dc AB010000 		.4byte	.LASF29
 825 01e0 01       		.byte	0x1
 826 01e1 F8       		.byte	0xf8
 827 01e2 97000000 		.4byte	0x97
 828 01e6 FC010000 		.4byte	.LLST9
 829 01ea 0B       		.uleb128 0xb
 830 01eb 8F000000 		.4byte	.LASF30
 831 01ef 01       		.byte	0x1
 832 01f0 F8       		.byte	0xf8
 833 01f1 97000000 		.4byte	0x97
 834 01f5 2B020000 		.4byte	.LLST10
 835 01f9 0B       		.uleb128 0xb
 836 01fa 15000000 		.4byte	.LASF31
 837 01fe 01       		.byte	0x1
 838 01ff F8       		.byte	0xf8
 839 0200 97000000 		.4byte	0x97
 840 0204 66020000 		.4byte	.LLST11
 841 0208 0B       		.uleb128 0xb
 842 0209 DE000000 		.4byte	.LASF32
 843 020d 01       		.byte	0x1
 844 020e F8       		.byte	0xf8
 845 020f 97000000 		.4byte	0x97
 846 0213 CB020000 		.4byte	.LLST12
 847 0217 0B       		.uleb128 0xb
 848 0218 39000000 		.4byte	.LASF33
 849 021c 01       		.byte	0x1
 850 021d F8       		.byte	0xf8
 851 021e 97000000 		.4byte	0x97
 852 0222 06030000 		.4byte	.LLST13
 853 0226 0D       		.uleb128 0xd
 854 0227 0C000000 		.4byte	.LVL0
 855 022b FB030000 		.4byte	0x3fb
 856 022f 0D       		.uleb128 0xd
 857 0230 12000000 		.4byte	.LVL1
 858 0234 06040000 		.4byte	0x406
 859 0238 0D       		.uleb128 0xd
 860 0239 16000000 		.4byte	.LVL2
 861 023d 11040000 		.4byte	0x411
 862 0241 0E       		.uleb128 0xe
 863 0242 1C000000 		.4byte	.LVL3
 864 0246 1C040000 		.4byte	0x41c
 865 024a 54020000 		.4byte	0x254
 866 024e 0F       		.uleb128 0xf
 867 024f 01       		.uleb128 0x1
 868 0250 50       		.byte	0x50
 869 0251 01       		.uleb128 0x1
 870 0252 31       		.byte	0x31
 871 0253 00       		.byte	0
 872 0254 0D       		.uleb128 0xd
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 26


 873 0255 20000000 		.4byte	.LVL4
 874 0259 27040000 		.4byte	0x427
 875 025d 0D       		.uleb128 0xd
 876 025e 28000000 		.4byte	.LVL5
 877 0262 32040000 		.4byte	0x432
 878 0266 0E       		.uleb128 0xe
 879 0267 52000000 		.4byte	.LVL7
 880 026b 3D040000 		.4byte	0x43d
 881 026f 7A020000 		.4byte	0x27a
 882 0273 0F       		.uleb128 0xf
 883 0274 01       		.uleb128 0x1
 884 0275 50       		.byte	0x50
 885 0276 02       		.uleb128 0x2
 886 0277 91       		.byte	0x91
 887 0278 50       		.sleb128 -48
 888 0279 00       		.byte	0
 889 027a 0E       		.uleb128 0xe
 890 027b 58000000 		.4byte	.LVL8
 891 027f 48040000 		.4byte	0x448
 892 0283 8E020000 		.4byte	0x28e
 893 0287 0F       		.uleb128 0xf
 894 0288 01       		.uleb128 0x1
 895 0289 50       		.byte	0x50
 896 028a 02       		.uleb128 0x2
 897 028b 91       		.byte	0x91
 898 028c 48       		.sleb128 -56
 899 028d 00       		.byte	0
 900 028e 0D       		.uleb128 0xd
 901 028f 88000000 		.4byte	.LVL10
 902 0293 53040000 		.4byte	0x453
 903 0297 0D       		.uleb128 0xd
 904 0298 8C000000 		.4byte	.LVL11
 905 029c 27040000 		.4byte	0x427
 906 02a0 0D       		.uleb128 0xd
 907 02a1 94000000 		.4byte	.LVL12
 908 02a5 32040000 		.4byte	0x432
 909 02a9 0E       		.uleb128 0xe
 910 02aa 9C000000 		.4byte	.LVL13
 911 02ae 5E040000 		.4byte	0x45e
 912 02b2 C3020000 		.4byte	0x2c3
 913 02b6 0F       		.uleb128 0xf
 914 02b7 01       		.uleb128 0x1
 915 02b8 50       		.byte	0x50
 916 02b9 02       		.uleb128 0x2
 917 02ba 09       		.byte	0x9
 918 02bb DC       		.byte	0xdc
 919 02bc 0F       		.uleb128 0xf
 920 02bd 01       		.uleb128 0x1
 921 02be 51       		.byte	0x51
 922 02bf 02       		.uleb128 0x2
 923 02c0 08       		.byte	0x8
 924 02c1 64       		.byte	0x64
 925 02c2 00       		.byte	0
 926 02c3 10       		.uleb128 0x10
 927 02c4 20020000 		.4byte	.LVL84
 928 02c8 69040000 		.4byte	0x469
 929 02cc 0F       		.uleb128 0xf
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 27


 930 02cd 01       		.uleb128 0x1
 931 02ce 50       		.byte	0x50
 932 02cf 02       		.uleb128 0x2
 933 02d0 74       		.byte	0x74
 934 02d1 00       		.sleb128 0
 935 02d2 0F       		.uleb128 0xf
 936 02d3 01       		.uleb128 0x1
 937 02d4 51       		.byte	0x51
 938 02d5 02       		.uleb128 0x2
 939 02d6 75       		.byte	0x75
 940 02d7 00       		.sleb128 0
 941 02d8 0F       		.uleb128 0xf
 942 02d9 01       		.uleb128 0x1
 943 02da 52       		.byte	0x52
 944 02db 01       		.uleb128 0x1
 945 02dc 31       		.byte	0x31
 946 02dd 00       		.byte	0
 947 02de 00       		.byte	0
 948 02df 11       		.uleb128 0x11
 949 02e0 6F000000 		.4byte	.LASF35
 950 02e4 01       		.byte	0x1
 951 02e5 F701     		.2byte	0x1f7
 952 02e7 73000000 		.4byte	0x73
 953 02eb 00000000 		.4byte	.LFB65
 954 02ef 2A000000 		.4byte	.LFE65-.LFB65
 955 02f3 01       		.uleb128 0x1
 956 02f4 9C       		.byte	0x9c
 957 02f5 54030000 		.4byte	0x354
 958 02f9 12       		.uleb128 0x12
 959 02fa 81000000 		.4byte	.LASF36
 960 02fe 01       		.byte	0x1
 961 02ff F701     		.2byte	0x1f7
 962 0301 73000000 		.4byte	0x73
 963 0305 34030000 		.4byte	.LLST14
 964 0309 13       		.uleb128 0x13
 965 030a 70747200 		.ascii	"ptr\000"
 966 030e 01       		.byte	0x1
 967 030f F701     		.2byte	0x1f7
 968 0311 BA000000 		.4byte	0xba
 969 0315 55030000 		.4byte	.LLST15
 970 0319 13       		.uleb128 0x13
 971 031a 6C656E00 		.ascii	"len\000"
 972 031e 01       		.byte	0x1
 973 031f F701     		.2byte	0x1f7
 974 0321 73000000 		.4byte	0x73
 975 0325 89030000 		.4byte	.LLST16
 976 0329 14       		.uleb128 0x14
 977 032a 6E00     		.ascii	"n\000"
 978 032c 01       		.byte	0x1
 979 032d FA01     		.2byte	0x1fa
 980 032f 73000000 		.4byte	0x73
 981 0333 A7030000 		.4byte	.LLST17
 982 0337 0E       		.uleb128 0xe
 983 0338 16000000 		.4byte	.LVL100
 984 033c 74040000 		.4byte	0x474
 985 0340 4A030000 		.4byte	0x34a
 986 0344 0F       		.uleb128 0xf
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 28


 987 0345 01       		.uleb128 0x1
 988 0346 50       		.byte	0x50
 989 0347 01       		.uleb128 0x1
 990 0348 3D       		.byte	0x3d
 991 0349 00       		.byte	0
 992 034a 0D       		.uleb128 0xd
 993 034b 1E000000 		.4byte	.LVL102
 994 034f 74040000 		.4byte	0x474
 995 0353 00       		.byte	0
 996 0354 11       		.uleb128 0x11
 997 0355 42010000 		.4byte	.LASF37
 998 0359 01       		.byte	0x1
 999 035a 0202     		.2byte	0x202
 1000 035c 73000000 		.4byte	0x73
 1001 0360 00000000 		.4byte	.LFB66
 1002 0364 38000000 		.4byte	.LFE66-.LFB66
 1003 0368 01       		.uleb128 0x1
 1004 0369 9C       		.byte	0x9c
 1005 036a EA030000 		.4byte	0x3ea
 1006 036e 12       		.uleb128 0x12
 1007 036f 81000000 		.4byte	.LASF36
 1008 0373 01       		.byte	0x1
 1009 0374 0202     		.2byte	0x202
 1010 0376 73000000 		.4byte	0x73
 1011 037a C6030000 		.4byte	.LLST18
 1012 037e 13       		.uleb128 0x13
 1013 037f 70747200 		.ascii	"ptr\000"
 1014 0383 01       		.byte	0x1
 1015 0384 0202     		.2byte	0x202
 1016 0386 BA000000 		.4byte	0xba
 1017 038a E7030000 		.4byte	.LLST19
 1018 038e 12       		.uleb128 0x12
 1019 038f 4C020000 		.4byte	.LASF38
 1020 0393 01       		.byte	0x1
 1021 0394 0202     		.2byte	0x202
 1022 0396 73000000 		.4byte	0x73
 1023 039a 1B040000 		.4byte	.LLST20
 1024 039e 14       		.uleb128 0x14
 1025 039f 63687300 		.ascii	"chs\000"
 1026 03a3 01       		.byte	0x1
 1027 03a4 0402     		.2byte	0x204
 1028 03a6 73000000 		.4byte	0x73
 1029 03aa 39040000 		.4byte	.LLST21
 1030 03ae 14       		.uleb128 0x14
 1031 03af 636800   		.ascii	"ch\000"
 1032 03b2 01       		.byte	0x1
 1033 03b3 0502     		.2byte	0x205
 1034 03b5 A5000000 		.4byte	0xa5
 1035 03b9 58040000 		.4byte	.LLST22
 1036 03bd 0D       		.uleb128 0xd
 1037 03be 0E000000 		.4byte	.LVL108
 1038 03c2 7F040000 		.4byte	0x47f
 1039 03c6 0E       		.uleb128 0xe
 1040 03c7 16000000 		.4byte	.LVL109
 1041 03cb 74040000 		.4byte	0x474
 1042 03cf DA030000 		.4byte	0x3da
 1043 03d3 0F       		.uleb128 0xf
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 29


 1044 03d4 01       		.uleb128 0x1
 1045 03d5 50       		.byte	0x50
 1046 03d6 02       		.uleb128 0x2
 1047 03d7 75       		.byte	0x75
 1048 03d8 00       		.sleb128 0
 1049 03d9 00       		.byte	0
 1050 03da 10       		.uleb128 0x10
 1051 03db 22000000 		.4byte	.LVL112
 1052 03df 74040000 		.4byte	0x474
 1053 03e3 0F       		.uleb128 0xf
 1054 03e4 01       		.uleb128 0x1
 1055 03e5 50       		.byte	0x50
 1056 03e6 01       		.uleb128 0x1
 1057 03e7 3A       		.byte	0x3a
 1058 03e8 00       		.byte	0
 1059 03e9 00       		.byte	0
 1060 03ea 15       		.uleb128 0x15
 1061 03eb 90020000 		.4byte	.LASF56
 1062 03ef 0A       		.byte	0xa
 1063 03f0 1207     		.2byte	0x712
 1064 03f2 F6030000 		.4byte	0x3f6
 1065 03f6 16       		.uleb128 0x16
 1066 03f7 8C000000 		.4byte	0x8c
 1067 03fb 17       		.uleb128 0x17
 1068 03fc B1000000 		.4byte	.LASF39
 1069 0400 B1000000 		.4byte	.LASF39
 1070 0404 05       		.byte	0x5
 1071 0405 54       		.byte	0x54
 1072 0406 17       		.uleb128 0x17
 1073 0407 28020000 		.4byte	.LASF40
 1074 040b 28020000 		.4byte	.LASF40
 1075 040f 06       		.byte	0x6
 1076 0410 18       		.byte	0x18
 1077 0411 17       		.uleb128 0x17
 1078 0412 9F000000 		.4byte	.LASF41
 1079 0416 9F000000 		.4byte	.LASF41
 1080 041a 04       		.byte	0x4
 1081 041b 1A       		.byte	0x1a
 1082 041c 17       		.uleb128 0x17
 1083 041d 2B030000 		.4byte	.LASF42
 1084 0421 2B030000 		.4byte	.LASF42
 1085 0425 07       		.byte	0x7
 1086 0426 26       		.byte	0x26
 1087 0427 17       		.uleb128 0x17
 1088 0428 7E020000 		.4byte	.LASF43
 1089 042c 7E020000 		.4byte	.LASF43
 1090 0430 08       		.byte	0x8
 1091 0431 10       		.byte	0x10
 1092 0432 17       		.uleb128 0x17
 1093 0433 3B020000 		.4byte	.LASF44
 1094 0437 3B020000 		.4byte	.LASF44
 1095 043b 09       		.byte	0x9
 1096 043c 0B       		.byte	0xb
 1097 043d 17       		.uleb128 0x17
 1098 043e 5C020000 		.4byte	.LASF45
 1099 0442 5C020000 		.4byte	.LASF45
 1100 0446 04       		.byte	0x4
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 30


 1101 0447 1B       		.byte	0x1b
 1102 0448 17       		.uleb128 0x17
 1103 0449 ED000000 		.4byte	.LASF46
 1104 044d ED000000 		.4byte	.LASF46
 1105 0451 04       		.byte	0x4
 1106 0452 1C       		.byte	0x1c
 1107 0453 17       		.uleb128 0x17
 1108 0454 24000000 		.4byte	.LASF47
 1109 0458 24000000 		.4byte	.LASF47
 1110 045c 09       		.byte	0x9
 1111 045d 0C       		.byte	0xc
 1112 045e 17       		.uleb128 0x17
 1113 045f B7010000 		.4byte	.LASF48
 1114 0463 B7010000 		.4byte	.LASF48
 1115 0467 09       		.byte	0x9
 1116 0468 0F       		.byte	0xf
 1117 0469 17       		.uleb128 0x17
 1118 046a 85020000 		.4byte	.LASF49
 1119 046e 85020000 		.4byte	.LASF49
 1120 0472 09       		.byte	0x9
 1121 0473 17       		.byte	0x17
 1122 0474 17       		.uleb128 0x17
 1123 0475 BE000000 		.4byte	.LASF50
 1124 0479 BE000000 		.4byte	.LASF50
 1125 047d 05       		.byte	0x5
 1126 047e 8A       		.byte	0x8a
 1127 047f 17       		.uleb128 0x17
 1128 0480 06000000 		.4byte	.LASF51
 1129 0484 06000000 		.4byte	.LASF51
 1130 0488 05       		.byte	0x5
 1131 0489 71       		.byte	0x71
 1132 048a 00       		.byte	0
 1133              		.section	.debug_abbrev,"",%progbits
 1134              	.Ldebug_abbrev0:
 1135 0000 01       		.uleb128 0x1
 1136 0001 11       		.uleb128 0x11
 1137 0002 01       		.byte	0x1
 1138 0003 25       		.uleb128 0x25
 1139 0004 0E       		.uleb128 0xe
 1140 0005 13       		.uleb128 0x13
 1141 0006 0B       		.uleb128 0xb
 1142 0007 03       		.uleb128 0x3
 1143 0008 0E       		.uleb128 0xe
 1144 0009 1B       		.uleb128 0x1b
 1145 000a 0E       		.uleb128 0xe
 1146 000b 55       		.uleb128 0x55
 1147 000c 17       		.uleb128 0x17
 1148 000d 11       		.uleb128 0x11
 1149 000e 01       		.uleb128 0x1
 1150 000f 10       		.uleb128 0x10
 1151 0010 17       		.uleb128 0x17
 1152 0011 00       		.byte	0
 1153 0012 00       		.byte	0
 1154 0013 02       		.uleb128 0x2
 1155 0014 24       		.uleb128 0x24
 1156 0015 00       		.byte	0
 1157 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 31


 1158 0017 0B       		.uleb128 0xb
 1159 0018 3E       		.uleb128 0x3e
 1160 0019 0B       		.uleb128 0xb
 1161 001a 03       		.uleb128 0x3
 1162 001b 0E       		.uleb128 0xe
 1163 001c 00       		.byte	0
 1164 001d 00       		.byte	0
 1165 001e 03       		.uleb128 0x3
 1166 001f 16       		.uleb128 0x16
 1167 0020 00       		.byte	0
 1168 0021 03       		.uleb128 0x3
 1169 0022 0E       		.uleb128 0xe
 1170 0023 3A       		.uleb128 0x3a
 1171 0024 0B       		.uleb128 0xb
 1172 0025 3B       		.uleb128 0x3b
 1173 0026 0B       		.uleb128 0xb
 1174 0027 49       		.uleb128 0x49
 1175 0028 13       		.uleb128 0x13
 1176 0029 00       		.byte	0
 1177 002a 00       		.byte	0
 1178 002b 04       		.uleb128 0x4
 1179 002c 24       		.uleb128 0x24
 1180 002d 00       		.byte	0
 1181 002e 0B       		.uleb128 0xb
 1182 002f 0B       		.uleb128 0xb
 1183 0030 3E       		.uleb128 0x3e
 1184 0031 0B       		.uleb128 0xb
 1185 0032 03       		.uleb128 0x3
 1186 0033 08       		.uleb128 0x8
 1187 0034 00       		.byte	0
 1188 0035 00       		.byte	0
 1189 0036 05       		.uleb128 0x5
 1190 0037 0F       		.uleb128 0xf
 1191 0038 00       		.byte	0
 1192 0039 0B       		.uleb128 0xb
 1193 003a 0B       		.uleb128 0xb
 1194 003b 49       		.uleb128 0x49
 1195 003c 13       		.uleb128 0x13
 1196 003d 00       		.byte	0
 1197 003e 00       		.byte	0
 1198 003f 06       		.uleb128 0x6
 1199 0040 13       		.uleb128 0x13
 1200 0041 01       		.byte	0x1
 1201 0042 03       		.uleb128 0x3
 1202 0043 0E       		.uleb128 0xe
 1203 0044 0B       		.uleb128 0xb
 1204 0045 0B       		.uleb128 0xb
 1205 0046 3A       		.uleb128 0x3a
 1206 0047 0B       		.uleb128 0xb
 1207 0048 3B       		.uleb128 0x3b
 1208 0049 0B       		.uleb128 0xb
 1209 004a 01       		.uleb128 0x1
 1210 004b 13       		.uleb128 0x13
 1211 004c 00       		.byte	0
 1212 004d 00       		.byte	0
 1213 004e 07       		.uleb128 0x7
 1214 004f 0D       		.uleb128 0xd
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 32


 1215 0050 00       		.byte	0
 1216 0051 03       		.uleb128 0x3
 1217 0052 08       		.uleb128 0x8
 1218 0053 3A       		.uleb128 0x3a
 1219 0054 0B       		.uleb128 0xb
 1220 0055 3B       		.uleb128 0x3b
 1221 0056 0B       		.uleb128 0xb
 1222 0057 49       		.uleb128 0x49
 1223 0058 13       		.uleb128 0x13
 1224 0059 38       		.uleb128 0x38
 1225 005a 0B       		.uleb128 0xb
 1226 005b 00       		.byte	0
 1227 005c 00       		.byte	0
 1228 005d 08       		.uleb128 0x8
 1229 005e 2E       		.uleb128 0x2e
 1230 005f 01       		.byte	0x1
 1231 0060 3F       		.uleb128 0x3f
 1232 0061 19       		.uleb128 0x19
 1233 0062 03       		.uleb128 0x3
 1234 0063 0E       		.uleb128 0xe
 1235 0064 3A       		.uleb128 0x3a
 1236 0065 0B       		.uleb128 0xb
 1237 0066 3B       		.uleb128 0x3b
 1238 0067 0B       		.uleb128 0xb
 1239 0068 49       		.uleb128 0x49
 1240 0069 13       		.uleb128 0x13
 1241 006a 8701     		.uleb128 0x87
 1242 006c 19       		.uleb128 0x19
 1243 006d 11       		.uleb128 0x11
 1244 006e 01       		.uleb128 0x1
 1245 006f 12       		.uleb128 0x12
 1246 0070 06       		.uleb128 0x6
 1247 0071 40       		.uleb128 0x40
 1248 0072 18       		.uleb128 0x18
 1249 0073 9642     		.uleb128 0x2116
 1250 0075 19       		.uleb128 0x19
 1251 0076 01       		.uleb128 0x1
 1252 0077 13       		.uleb128 0x13
 1253 0078 00       		.byte	0
 1254 0079 00       		.byte	0
 1255 007a 09       		.uleb128 0x9
 1256 007b 34       		.uleb128 0x34
 1257 007c 00       		.byte	0
 1258 007d 03       		.uleb128 0x3
 1259 007e 08       		.uleb128 0x8
 1260 007f 3A       		.uleb128 0x3a
 1261 0080 0B       		.uleb128 0xb
 1262 0081 3B       		.uleb128 0x3b
 1263 0082 0B       		.uleb128 0xb
 1264 0083 49       		.uleb128 0x49
 1265 0084 13       		.uleb128 0x13
 1266 0085 02       		.uleb128 0x2
 1267 0086 18       		.uleb128 0x18
 1268 0087 00       		.byte	0
 1269 0088 00       		.byte	0
 1270 0089 0A       		.uleb128 0xa
 1271 008a 34       		.uleb128 0x34
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 33


 1272 008b 00       		.byte	0
 1273 008c 03       		.uleb128 0x3
 1274 008d 0E       		.uleb128 0xe
 1275 008e 3A       		.uleb128 0x3a
 1276 008f 0B       		.uleb128 0xb
 1277 0090 3B       		.uleb128 0x3b
 1278 0091 0B       		.uleb128 0xb
 1279 0092 49       		.uleb128 0x49
 1280 0093 13       		.uleb128 0x13
 1281 0094 1C       		.uleb128 0x1c
 1282 0095 05       		.uleb128 0x5
 1283 0096 00       		.byte	0
 1284 0097 00       		.byte	0
 1285 0098 0B       		.uleb128 0xb
 1286 0099 34       		.uleb128 0x34
 1287 009a 00       		.byte	0
 1288 009b 03       		.uleb128 0x3
 1289 009c 0E       		.uleb128 0xe
 1290 009d 3A       		.uleb128 0x3a
 1291 009e 0B       		.uleb128 0xb
 1292 009f 3B       		.uleb128 0x3b
 1293 00a0 0B       		.uleb128 0xb
 1294 00a1 49       		.uleb128 0x49
 1295 00a2 13       		.uleb128 0x13
 1296 00a3 02       		.uleb128 0x2
 1297 00a4 17       		.uleb128 0x17
 1298 00a5 00       		.byte	0
 1299 00a6 00       		.byte	0
 1300 00a7 0C       		.uleb128 0xc
 1301 00a8 34       		.uleb128 0x34
 1302 00a9 00       		.byte	0
 1303 00aa 03       		.uleb128 0x3
 1304 00ab 08       		.uleb128 0x8
 1305 00ac 3A       		.uleb128 0x3a
 1306 00ad 0B       		.uleb128 0xb
 1307 00ae 3B       		.uleb128 0x3b
 1308 00af 0B       		.uleb128 0xb
 1309 00b0 49       		.uleb128 0x49
 1310 00b1 13       		.uleb128 0x13
 1311 00b2 02       		.uleb128 0x2
 1312 00b3 17       		.uleb128 0x17
 1313 00b4 00       		.byte	0
 1314 00b5 00       		.byte	0
 1315 00b6 0D       		.uleb128 0xd
 1316 00b7 898201   		.uleb128 0x4109
 1317 00ba 00       		.byte	0
 1318 00bb 11       		.uleb128 0x11
 1319 00bc 01       		.uleb128 0x1
 1320 00bd 31       		.uleb128 0x31
 1321 00be 13       		.uleb128 0x13
 1322 00bf 00       		.byte	0
 1323 00c0 00       		.byte	0
 1324 00c1 0E       		.uleb128 0xe
 1325 00c2 898201   		.uleb128 0x4109
 1326 00c5 01       		.byte	0x1
 1327 00c6 11       		.uleb128 0x11
 1328 00c7 01       		.uleb128 0x1
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 34


 1329 00c8 31       		.uleb128 0x31
 1330 00c9 13       		.uleb128 0x13
 1331 00ca 01       		.uleb128 0x1
 1332 00cb 13       		.uleb128 0x13
 1333 00cc 00       		.byte	0
 1334 00cd 00       		.byte	0
 1335 00ce 0F       		.uleb128 0xf
 1336 00cf 8A8201   		.uleb128 0x410a
 1337 00d2 00       		.byte	0
 1338 00d3 02       		.uleb128 0x2
 1339 00d4 18       		.uleb128 0x18
 1340 00d5 9142     		.uleb128 0x2111
 1341 00d7 18       		.uleb128 0x18
 1342 00d8 00       		.byte	0
 1343 00d9 00       		.byte	0
 1344 00da 10       		.uleb128 0x10
 1345 00db 898201   		.uleb128 0x4109
 1346 00de 01       		.byte	0x1
 1347 00df 11       		.uleb128 0x11
 1348 00e0 01       		.uleb128 0x1
 1349 00e1 31       		.uleb128 0x31
 1350 00e2 13       		.uleb128 0x13
 1351 00e3 00       		.byte	0
 1352 00e4 00       		.byte	0
 1353 00e5 11       		.uleb128 0x11
 1354 00e6 2E       		.uleb128 0x2e
 1355 00e7 01       		.byte	0x1
 1356 00e8 3F       		.uleb128 0x3f
 1357 00e9 19       		.uleb128 0x19
 1358 00ea 03       		.uleb128 0x3
 1359 00eb 0E       		.uleb128 0xe
 1360 00ec 3A       		.uleb128 0x3a
 1361 00ed 0B       		.uleb128 0xb
 1362 00ee 3B       		.uleb128 0x3b
 1363 00ef 05       		.uleb128 0x5
 1364 00f0 27       		.uleb128 0x27
 1365 00f1 19       		.uleb128 0x19
 1366 00f2 49       		.uleb128 0x49
 1367 00f3 13       		.uleb128 0x13
 1368 00f4 11       		.uleb128 0x11
 1369 00f5 01       		.uleb128 0x1
 1370 00f6 12       		.uleb128 0x12
 1371 00f7 06       		.uleb128 0x6
 1372 00f8 40       		.uleb128 0x40
 1373 00f9 18       		.uleb128 0x18
 1374 00fa 9742     		.uleb128 0x2117
 1375 00fc 19       		.uleb128 0x19
 1376 00fd 01       		.uleb128 0x1
 1377 00fe 13       		.uleb128 0x13
 1378 00ff 00       		.byte	0
 1379 0100 00       		.byte	0
 1380 0101 12       		.uleb128 0x12
 1381 0102 05       		.uleb128 0x5
 1382 0103 00       		.byte	0
 1383 0104 03       		.uleb128 0x3
 1384 0105 0E       		.uleb128 0xe
 1385 0106 3A       		.uleb128 0x3a
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 35


 1386 0107 0B       		.uleb128 0xb
 1387 0108 3B       		.uleb128 0x3b
 1388 0109 05       		.uleb128 0x5
 1389 010a 49       		.uleb128 0x49
 1390 010b 13       		.uleb128 0x13
 1391 010c 02       		.uleb128 0x2
 1392 010d 17       		.uleb128 0x17
 1393 010e 00       		.byte	0
 1394 010f 00       		.byte	0
 1395 0110 13       		.uleb128 0x13
 1396 0111 05       		.uleb128 0x5
 1397 0112 00       		.byte	0
 1398 0113 03       		.uleb128 0x3
 1399 0114 08       		.uleb128 0x8
 1400 0115 3A       		.uleb128 0x3a
 1401 0116 0B       		.uleb128 0xb
 1402 0117 3B       		.uleb128 0x3b
 1403 0118 05       		.uleb128 0x5
 1404 0119 49       		.uleb128 0x49
 1405 011a 13       		.uleb128 0x13
 1406 011b 02       		.uleb128 0x2
 1407 011c 17       		.uleb128 0x17
 1408 011d 00       		.byte	0
 1409 011e 00       		.byte	0
 1410 011f 14       		.uleb128 0x14
 1411 0120 34       		.uleb128 0x34
 1412 0121 00       		.byte	0
 1413 0122 03       		.uleb128 0x3
 1414 0123 08       		.uleb128 0x8
 1415 0124 3A       		.uleb128 0x3a
 1416 0125 0B       		.uleb128 0xb
 1417 0126 3B       		.uleb128 0x3b
 1418 0127 05       		.uleb128 0x5
 1419 0128 49       		.uleb128 0x49
 1420 0129 13       		.uleb128 0x13
 1421 012a 02       		.uleb128 0x2
 1422 012b 17       		.uleb128 0x17
 1423 012c 00       		.byte	0
 1424 012d 00       		.byte	0
 1425 012e 15       		.uleb128 0x15
 1426 012f 34       		.uleb128 0x34
 1427 0130 00       		.byte	0
 1428 0131 03       		.uleb128 0x3
 1429 0132 0E       		.uleb128 0xe
 1430 0133 3A       		.uleb128 0x3a
 1431 0134 0B       		.uleb128 0xb
 1432 0135 3B       		.uleb128 0x3b
 1433 0136 05       		.uleb128 0x5
 1434 0137 49       		.uleb128 0x49
 1435 0138 13       		.uleb128 0x13
 1436 0139 3F       		.uleb128 0x3f
 1437 013a 19       		.uleb128 0x19
 1438 013b 3C       		.uleb128 0x3c
 1439 013c 19       		.uleb128 0x19
 1440 013d 00       		.byte	0
 1441 013e 00       		.byte	0
 1442 013f 16       		.uleb128 0x16
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 36


 1443 0140 35       		.uleb128 0x35
 1444 0141 00       		.byte	0
 1445 0142 49       		.uleb128 0x49
 1446 0143 13       		.uleb128 0x13
 1447 0144 00       		.byte	0
 1448 0145 00       		.byte	0
 1449 0146 17       		.uleb128 0x17
 1450 0147 2E       		.uleb128 0x2e
 1451 0148 00       		.byte	0
 1452 0149 3F       		.uleb128 0x3f
 1453 014a 19       		.uleb128 0x19
 1454 014b 3C       		.uleb128 0x3c
 1455 014c 19       		.uleb128 0x19
 1456 014d 6E       		.uleb128 0x6e
 1457 014e 0E       		.uleb128 0xe
 1458 014f 03       		.uleb128 0x3
 1459 0150 0E       		.uleb128 0xe
 1460 0151 3A       		.uleb128 0x3a
 1461 0152 0B       		.uleb128 0xb
 1462 0153 3B       		.uleb128 0x3b
 1463 0154 0B       		.uleb128 0xb
 1464 0155 00       		.byte	0
 1465 0156 00       		.byte	0
 1466 0157 00       		.byte	0
 1467              		.section	.debug_loc,"",%progbits
 1468              	.Ldebug_loc0:
 1469              	.LLST0:
 1470 0000 20000000 		.4byte	.LVL4
 1471 0004 27000000 		.4byte	.LVL5-1
 1472 0008 0100     		.2byte	0x1
 1473 000a 50       		.byte	0x50
 1474 000b 8C000000 		.4byte	.LVL11
 1475 000f 93000000 		.4byte	.LVL12-1
 1476 0013 0100     		.2byte	0x1
 1477 0015 50       		.byte	0x50
 1478 0016 00000000 		.4byte	0
 1479 001a 00000000 		.4byte	0
 1480              	.LLST1:
 1481 001e 1C000000 		.4byte	.LVL3
 1482 0022 4C000000 		.4byte	.LVL6
 1483 0026 0200     		.2byte	0x2
 1484 0028 30       		.byte	0x30
 1485 0029 9F       		.byte	0x9f
 1486 002a 4C000000 		.4byte	.LVL6
 1487 002e 70020000 		.4byte	.LFE64
 1488 0032 0100     		.2byte	0x1
 1489 0034 58       		.byte	0x58
 1490 0035 00000000 		.4byte	0
 1491 0039 00000000 		.4byte	0
 1492              	.LLST2:
 1493 003d 1C000000 		.4byte	.LVL3
 1494 0041 4C000000 		.4byte	.LVL6
 1495 0045 0300     		.2byte	0x3
 1496 0047 08       		.byte	0x8
 1497 0048 FF       		.byte	0xff
 1498 0049 9F       		.byte	0x9f
 1499 004a 4C000000 		.4byte	.LVL6
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 37


 1500 004e BC000000 		.4byte	.LVL16
 1501 0052 0100     		.2byte	0x1
 1502 0054 54       		.byte	0x54
 1503 0055 D2000000 		.4byte	.LVL20
 1504 0059 D6000000 		.4byte	.LVL21
 1505 005d 0100     		.2byte	0x1
 1506 005f 50       		.byte	0x50
 1507 0060 D6000000 		.4byte	.LVL21
 1508 0064 E6000000 		.4byte	.LVL26
 1509 0068 0100     		.2byte	0x1
 1510 006a 54       		.byte	0x54
 1511 006b F4000000 		.4byte	.LVL29
 1512 006f F8000000 		.4byte	.LVL30
 1513 0073 0100     		.2byte	0x1
 1514 0075 50       		.byte	0x50
 1515 0076 F8000000 		.4byte	.LVL30
 1516 007a D0010000 		.4byte	.LVL71
 1517 007e 0100     		.2byte	0x1
 1518 0080 54       		.byte	0x54
 1519 0081 D0010000 		.4byte	.LVL71
 1520 0085 D4010000 		.4byte	.LVL72
 1521 0089 0100     		.2byte	0x1
 1522 008b 50       		.byte	0x50
 1523 008c D4010000 		.4byte	.LVL72
 1524 0090 FC010000 		.4byte	.LVL78
 1525 0094 0100     		.2byte	0x1
 1526 0096 54       		.byte	0x54
 1527 0097 FE010000 		.4byte	.LVL79
 1528 009b 70020000 		.4byte	.LFE64
 1529 009f 0100     		.2byte	0x1
 1530 00a1 54       		.byte	0x54
 1531 00a2 00000000 		.4byte	0
 1532 00a6 00000000 		.4byte	0
 1533              	.LLST3:
 1534 00aa 1C000000 		.4byte	.LVL3
 1535 00ae 4C000000 		.4byte	.LVL6
 1536 00b2 0300     		.2byte	0x3
 1537 00b4 08       		.byte	0x8
 1538 00b5 FF       		.byte	0xff
 1539 00b6 9F       		.byte	0x9f
 1540 00b7 4C000000 		.4byte	.LVL6
 1541 00bb E0000000 		.4byte	.LVL24
 1542 00bf 0100     		.2byte	0x1
 1543 00c1 55       		.byte	0x55
 1544 00c2 E0000000 		.4byte	.LVL24
 1545 00c6 E6000000 		.4byte	.LVL26
 1546 00ca 0100     		.2byte	0x1
 1547 00cc 50       		.byte	0x50
 1548 00cd E6000000 		.4byte	.LVL26
 1549 00d1 02010000 		.4byte	.LVL33
 1550 00d5 0100     		.2byte	0x1
 1551 00d7 55       		.byte	0x55
 1552 00d8 02010000 		.4byte	.LVL33
 1553 00dc 08010000 		.4byte	.LVL35
 1554 00e0 0100     		.2byte	0x1
 1555 00e2 50       		.byte	0x50
 1556 00e3 08010000 		.4byte	.LVL35
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 38


 1557 00e7 AA010000 		.4byte	.LVL64
 1558 00eb 0100     		.2byte	0x1
 1559 00ed 55       		.byte	0x55
 1560 00ee EE010000 		.4byte	.LVL77
 1561 00f2 10020000 		.4byte	.LVL81
 1562 00f6 0100     		.2byte	0x1
 1563 00f8 55       		.byte	0x55
 1564 00f9 12020000 		.4byte	.LVL82
 1565 00fd 70020000 		.4byte	.LFE64
 1566 0101 0100     		.2byte	0x1
 1567 0103 55       		.byte	0x55
 1568 0104 00000000 		.4byte	0
 1569 0108 00000000 		.4byte	0
 1570              	.LLST4:
 1571 010c 1C000000 		.4byte	.LVL3
 1572 0110 4C000000 		.4byte	.LVL6
 1573 0114 0300     		.2byte	0x3
 1574 0116 08       		.byte	0x8
 1575 0117 FF       		.byte	0xff
 1576 0118 9F       		.byte	0x9f
 1577 0119 4C000000 		.4byte	.LVL6
 1578 011d 50010000 		.4byte	.LVL44
 1579 0121 0100     		.2byte	0x1
 1580 0123 5B       		.byte	0x5b
 1581 0124 52010000 		.4byte	.LVL45
 1582 0128 5E010000 		.4byte	.LVL48
 1583 012c 0100     		.2byte	0x1
 1584 012e 5B       		.byte	0x5b
 1585 012f 60010000 		.4byte	.LVL49
 1586 0133 70020000 		.4byte	.LFE64
 1587 0137 0100     		.2byte	0x1
 1588 0139 5B       		.byte	0x5b
 1589 013a 00000000 		.4byte	0
 1590 013e 00000000 		.4byte	0
 1591              	.LLST5:
 1592 0142 1C000000 		.4byte	.LVL3
 1593 0146 4C000000 		.4byte	.LVL6
 1594 014a 0300     		.2byte	0x3
 1595 014c 09       		.byte	0x9
 1596 014d FF       		.byte	0xff
 1597 014e 9F       		.byte	0x9f
 1598 014f 4C000000 		.4byte	.LVL6
 1599 0153 A4000000 		.4byte	.LVL14
 1600 0157 0100     		.2byte	0x1
 1601 0159 56       		.byte	0x56
 1602 015a B2000000 		.4byte	.LVL15
 1603 015e 70020000 		.4byte	.LFE64
 1604 0162 0100     		.2byte	0x1
 1605 0164 56       		.byte	0x56
 1606 0165 00000000 		.4byte	0
 1607 0169 00000000 		.4byte	0
 1608              	.LLST6:
 1609 016d 1C000000 		.4byte	.LVL3
 1610 0171 4C000000 		.4byte	.LVL6
 1611 0175 0400     		.2byte	0x4
 1612 0177 0A       		.byte	0xa
 1613 0178 F401     		.2byte	0x1f4
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 39


 1614 017a 9F       		.byte	0x9f
 1615 017b 4C000000 		.4byte	.LVL6
 1616 017f 4C010000 		.4byte	.LVL43
 1617 0183 0100     		.2byte	0x1
 1618 0185 57       		.byte	0x57
 1619 0186 52010000 		.4byte	.LVL45
 1620 018a 5A010000 		.4byte	.LVL47
 1621 018e 0100     		.2byte	0x1
 1622 0190 57       		.byte	0x57
 1623 0191 60010000 		.4byte	.LVL49
 1624 0195 68010000 		.4byte	.LVL51
 1625 0199 0100     		.2byte	0x1
 1626 019b 57       		.byte	0x57
 1627 019c 6C010000 		.4byte	.LVL52
 1628 01a0 70020000 		.4byte	.LFE64
 1629 01a4 0100     		.2byte	0x1
 1630 01a6 57       		.byte	0x57
 1631 01a7 00000000 		.4byte	0
 1632 01ab 00000000 		.4byte	0
 1633              	.LLST7:
 1634 01af 1C000000 		.4byte	.LVL3
 1635 01b3 4C000000 		.4byte	.LVL6
 1636 01b7 0200     		.2byte	0x2
 1637 01b9 30       		.byte	0x30
 1638 01ba 9F       		.byte	0x9f
 1639 01bb 6C010000 		.4byte	.LVL52
 1640 01bf B2010000 		.4byte	.LVL66
 1641 01c3 0100     		.2byte	0x1
 1642 01c5 5A       		.byte	0x5a
 1643 01c6 00000000 		.4byte	0
 1644 01ca 00000000 		.4byte	0
 1645              	.LLST8:
 1646 01ce 1C000000 		.4byte	.LVL3
 1647 01d2 4C000000 		.4byte	.LVL6
 1648 01d6 0600     		.2byte	0x6
 1649 01d8 9E       		.byte	0x9e
 1650 01d9 04       		.uleb128 0x4
 1651 01da 00000000 		.4byte	0
 1652 01de 84010000 		.4byte	.LVL56
 1653 01e2 88010000 		.4byte	.LVL57
 1654 01e6 0100     		.2byte	0x1
 1655 01e8 50       		.byte	0x50
 1656 01e9 88010000 		.4byte	.LVL57
 1657 01ed 28020000 		.4byte	.LVL85
 1658 01f1 0100     		.2byte	0x1
 1659 01f3 59       		.byte	0x59
 1660 01f4 00000000 		.4byte	0
 1661 01f8 00000000 		.4byte	0
 1662              	.LLST9:
 1663 01fc 1C000000 		.4byte	.LVL3
 1664 0200 4C000000 		.4byte	.LVL6
 1665 0204 0600     		.2byte	0x6
 1666 0206 9E       		.byte	0x9e
 1667 0207 04       		.uleb128 0x4
 1668 0208 00000000 		.4byte	0
 1669 020c 9C010000 		.4byte	.LVL61
 1670 0210 A4010000 		.4byte	.LVL62
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 40


 1671 0214 0100     		.2byte	0x1
 1672 0216 50       		.byte	0x50
 1673 0217 A4010000 		.4byte	.LVL62
 1674 021b 48020000 		.4byte	.LVL93
 1675 021f 0200     		.2byte	0x2
 1676 0221 7D       		.byte	0x7d
 1677 0222 00       		.sleb128 0
 1678 0223 00000000 		.4byte	0
 1679 0227 00000000 		.4byte	0
 1680              	.LLST10:
 1681 022b 1C000000 		.4byte	.LVL3
 1682 022f 4C000000 		.4byte	.LVL6
 1683 0233 0600     		.2byte	0x6
 1684 0235 9E       		.byte	0x9e
 1685 0236 04       		.uleb128 0x4
 1686 0237 0024F448 		.4byte	0x48f42400
 1687 023b 4C000000 		.4byte	.LVL6
 1688 023f 40020000 		.4byte	.LVL90
 1689 0243 0200     		.2byte	0x2
 1690 0245 91       		.byte	0x91
 1691 0246 44       		.sleb128 -60
 1692 0247 40020000 		.4byte	.LVL90
 1693 024b 42020000 		.4byte	.LVL91
 1694 024f 0100     		.2byte	0x1
 1695 0251 50       		.byte	0x50
 1696 0252 42020000 		.4byte	.LVL91
 1697 0256 70020000 		.4byte	.LFE64
 1698 025a 0200     		.2byte	0x2
 1699 025c 91       		.byte	0x91
 1700 025d 44       		.sleb128 -60
 1701 025e 00000000 		.4byte	0
 1702 0262 00000000 		.4byte	0
 1703              	.LLST11:
 1704 0266 1C000000 		.4byte	.LVL3
 1705 026a 4C000000 		.4byte	.LVL6
 1706 026e 0600     		.2byte	0x6
 1707 0270 9E       		.byte	0x9e
 1708 0271 04       		.uleb128 0x4
 1709 0272 0024F448 		.4byte	0x48f42400
 1710 0276 4C000000 		.4byte	.LVL6
 1711 027a E4000000 		.4byte	.LVL25
 1712 027e 0100     		.2byte	0x1
 1713 0280 5A       		.byte	0x5a
 1714 0281 E6000000 		.4byte	.LVL26
 1715 0285 06010000 		.4byte	.LVL34
 1716 0289 0100     		.2byte	0x1
 1717 028b 5A       		.byte	0x5a
 1718 028c 08010000 		.4byte	.LVL35
 1719 0290 48010000 		.4byte	.LVL42
 1720 0294 0100     		.2byte	0x1
 1721 0296 5A       		.byte	0x5a
 1722 0297 52010000 		.4byte	.LVL45
 1723 029b 56010000 		.4byte	.LVL46
 1724 029f 0100     		.2byte	0x1
 1725 02a1 5A       		.byte	0x5a
 1726 02a2 60010000 		.4byte	.LVL49
 1727 02a6 64010000 		.4byte	.LVL50
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 41


 1728 02aa 0100     		.2byte	0x1
 1729 02ac 5A       		.byte	0x5a
 1730 02ad 32020000 		.4byte	.LVL87
 1731 02b1 36020000 		.4byte	.LVL88
 1732 02b5 0100     		.2byte	0x1
 1733 02b7 50       		.byte	0x50
 1734 02b8 36020000 		.4byte	.LVL88
 1735 02bc 70020000 		.4byte	.LFE64
 1736 02c0 0100     		.2byte	0x1
 1737 02c2 5A       		.byte	0x5a
 1738 02c3 00000000 		.4byte	0
 1739 02c7 00000000 		.4byte	0
 1740              	.LLST12:
 1741 02cb 1C000000 		.4byte	.LVL3
 1742 02cf 4C000000 		.4byte	.LVL6
 1743 02d3 0600     		.2byte	0x6
 1744 02d5 9E       		.byte	0x9e
 1745 02d6 04       		.uleb128 0x4
 1746 02d7 00000000 		.4byte	0
 1747 02db 4C000000 		.4byte	.LVL6
 1748 02df 9C010000 		.4byte	.LVL61
 1749 02e3 0200     		.2byte	0x2
 1750 02e5 7D       		.byte	0x7d
 1751 02e6 00       		.sleb128 0
 1752 02e7 48020000 		.4byte	.LVL93
 1753 02eb 4A020000 		.4byte	.LVL94
 1754 02ef 0100     		.2byte	0x1
 1755 02f1 50       		.byte	0x50
 1756 02f2 4A020000 		.4byte	.LVL94
 1757 02f6 70020000 		.4byte	.LFE64
 1758 02fa 0200     		.2byte	0x2
 1759 02fc 7D       		.byte	0x7d
 1760 02fd 00       		.sleb128 0
 1761 02fe 00000000 		.4byte	0
 1762 0302 00000000 		.4byte	0
 1763              	.LLST13:
 1764 0306 1C000000 		.4byte	.LVL3
 1765 030a 4C000000 		.4byte	.LVL6
 1766 030e 0600     		.2byte	0x6
 1767 0310 9E       		.byte	0x9e
 1768 0311 04       		.uleb128 0x4
 1769 0312 00000000 		.4byte	0
 1770 0316 4C000000 		.4byte	.LVL6
 1771 031a 84010000 		.4byte	.LVL56
 1772 031e 0100     		.2byte	0x1
 1773 0320 59       		.byte	0x59
 1774 0321 50020000 		.4byte	.LVL96
 1775 0325 70020000 		.4byte	.LFE64
 1776 0329 0100     		.2byte	0x1
 1777 032b 50       		.byte	0x50
 1778 032c 00000000 		.4byte	0
 1779 0330 00000000 		.4byte	0
 1780              	.LLST14:
 1781 0334 00000000 		.4byte	.LVL97
 1782 0338 0A000000 		.4byte	.LVL99
 1783 033c 0100     		.2byte	0x1
 1784 033e 50       		.byte	0x50
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 42


 1785 033f 0A000000 		.4byte	.LVL99
 1786 0343 2A000000 		.4byte	.LFE65
 1787 0347 0400     		.2byte	0x4
 1788 0349 F3       		.byte	0xf3
 1789 034a 01       		.uleb128 0x1
 1790 034b 50       		.byte	0x50
 1791 034c 9F       		.byte	0x9f
 1792 034d 00000000 		.4byte	0
 1793 0351 00000000 		.4byte	0
 1794              	.LLST15:
 1795 0355 00000000 		.4byte	.LVL97
 1796 0359 0A000000 		.4byte	.LVL99
 1797 035d 0100     		.2byte	0x1
 1798 035f 51       		.byte	0x51
 1799 0360 0A000000 		.4byte	.LVL99
 1800 0364 18000000 		.4byte	.LVL101
 1801 0368 0100     		.2byte	0x1
 1802 036a 54       		.byte	0x54
 1803 036b 18000000 		.4byte	.LVL101
 1804 036f 22000000 		.4byte	.LVL104
 1805 0373 0100     		.2byte	0x1
 1806 0375 56       		.byte	0x56
 1807 0376 22000000 		.4byte	.LVL104
 1808 037a 2A000000 		.4byte	.LFE65
 1809 037e 0100     		.2byte	0x1
 1810 0380 54       		.byte	0x54
 1811 0381 00000000 		.4byte	0
 1812 0385 00000000 		.4byte	0
 1813              	.LLST16:
 1814 0389 00000000 		.4byte	.LVL97
 1815 038d 0A000000 		.4byte	.LVL99
 1816 0391 0100     		.2byte	0x1
 1817 0393 52       		.byte	0x52
 1818 0394 0A000000 		.4byte	.LVL99
 1819 0398 2A000000 		.4byte	.LFE65
 1820 039c 0100     		.2byte	0x1
 1821 039e 57       		.byte	0x57
 1822 039f 00000000 		.4byte	0
 1823 03a3 00000000 		.4byte	0
 1824              	.LLST17:
 1825 03a7 06000000 		.4byte	.LVL98
 1826 03ab 0A000000 		.4byte	.LVL99
 1827 03af 0200     		.2byte	0x2
 1828 03b1 30       		.byte	0x30
 1829 03b2 9F       		.byte	0x9f
 1830 03b3 0A000000 		.4byte	.LVL99
 1831 03b7 2A000000 		.4byte	.LFE65
 1832 03bb 0100     		.2byte	0x1
 1833 03bd 55       		.byte	0x55
 1834 03be 00000000 		.4byte	0
 1835 03c2 00000000 		.4byte	0
 1836              	.LLST18:
 1837 03c6 00000000 		.4byte	.LVL105
 1838 03ca 0A000000 		.4byte	.LVL107
 1839 03ce 0100     		.2byte	0x1
 1840 03d0 50       		.byte	0x50
 1841 03d1 0A000000 		.4byte	.LVL107
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 43


 1842 03d5 38000000 		.4byte	.LFE66
 1843 03d9 0400     		.2byte	0x4
 1844 03db F3       		.byte	0xf3
 1845 03dc 01       		.uleb128 0x1
 1846 03dd 50       		.byte	0x50
 1847 03de 9F       		.byte	0x9f
 1848 03df 00000000 		.4byte	0
 1849 03e3 00000000 		.4byte	0
 1850              	.LLST19:
 1851 03e7 00000000 		.4byte	.LVL105
 1852 03eb 0A000000 		.4byte	.LVL107
 1853 03ef 0100     		.2byte	0x1
 1854 03f1 51       		.byte	0x51
 1855 03f2 0A000000 		.4byte	.LVL107
 1856 03f6 26000000 		.4byte	.LVL114
 1857 03fa 0100     		.2byte	0x1
 1858 03fc 57       		.byte	0x57
 1859 03fd 26000000 		.4byte	.LVL114
 1860 0401 30000000 		.4byte	.LVL116
 1861 0405 0100     		.2byte	0x1
 1862 0407 53       		.byte	0x53
 1863 0408 30000000 		.4byte	.LVL116
 1864 040c 34000000 		.4byte	.LVL117
 1865 0410 0100     		.2byte	0x1
 1866 0412 57       		.byte	0x57
 1867 0413 00000000 		.4byte	0
 1868 0417 00000000 		.4byte	0
 1869              	.LLST20:
 1870 041b 00000000 		.4byte	.LVL105
 1871 041f 0A000000 		.4byte	.LVL107
 1872 0423 0100     		.2byte	0x1
 1873 0425 52       		.byte	0x52
 1874 0426 0A000000 		.4byte	.LVL107
 1875 042a 38000000 		.4byte	.LFE66
 1876 042e 0100     		.2byte	0x1
 1877 0430 54       		.byte	0x54
 1878 0431 00000000 		.4byte	0
 1879 0435 00000000 		.4byte	0
 1880              	.LLST21:
 1881 0439 06000000 		.4byte	.LVL106
 1882 043d 0A000000 		.4byte	.LVL107
 1883 0441 0200     		.2byte	0x2
 1884 0443 30       		.byte	0x30
 1885 0444 9F       		.byte	0x9f
 1886 0445 0A000000 		.4byte	.LVL107
 1887 0449 38000000 		.4byte	.LFE66
 1888 044d 0100     		.2byte	0x1
 1889 044f 56       		.byte	0x56
 1890 0450 00000000 		.4byte	0
 1891 0454 00000000 		.4byte	0
 1892              	.LLST22:
 1893 0458 0E000000 		.4byte	.LVL108
 1894 045c 15000000 		.4byte	.LVL109-1
 1895 0460 0100     		.2byte	0x1
 1896 0462 50       		.byte	0x50
 1897 0463 1C000000 		.4byte	.LVL111
 1898 0467 24000000 		.4byte	.LVL113
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 44


 1899 046b 0200     		.2byte	0x2
 1900 046d 3A       		.byte	0x3a
 1901 046e 9F       		.byte	0x9f
 1902 046f 24000000 		.4byte	.LVL113
 1903 0473 30000000 		.4byte	.LVL116
 1904 0477 0100     		.2byte	0x1
 1905 0479 55       		.byte	0x55
 1906 047a 00000000 		.4byte	0
 1907 047e 00000000 		.4byte	0
 1908              		.section	.debug_aranges,"",%progbits
 1909 0000 2C000000 		.4byte	0x2c
 1910 0004 0200     		.2byte	0x2
 1911 0006 00000000 		.4byte	.Ldebug_info0
 1912 000a 04       		.byte	0x4
 1913 000b 00       		.byte	0
 1914 000c 0000     		.2byte	0
 1915 000e 0000     		.2byte	0
 1916 0010 00000000 		.4byte	.LFB64
 1917 0014 70020000 		.4byte	.LFE64-.LFB64
 1918 0018 00000000 		.4byte	.LFB65
 1919 001c 2A000000 		.4byte	.LFE65-.LFB65
 1920 0020 00000000 		.4byte	.LFB66
 1921 0024 38000000 		.4byte	.LFE66-.LFB66
 1922 0028 00000000 		.4byte	0
 1923 002c 00000000 		.4byte	0
 1924              		.section	.debug_ranges,"",%progbits
 1925              	.Ldebug_ranges0:
 1926 0000 00000000 		.4byte	.LFB64
 1927 0004 70020000 		.4byte	.LFE64
 1928 0008 00000000 		.4byte	.LFB65
 1929 000c 2A000000 		.4byte	.LFE65
 1930 0010 00000000 		.4byte	.LFB66
 1931 0014 38000000 		.4byte	.LFE66
 1932 0018 00000000 		.4byte	0
 1933 001c 00000000 		.4byte	0
 1934              		.section	.debug_line,"",%progbits
 1935              	.Ldebug_line0:
 1936 0000 36020000 		.section	.debug_str,"MS",%progbits,1
 1936      02006B01 
 1936      00000201 
 1936      FB0E0D00 
 1936      01010101 
 1937              	.LASF20:
 1938 0000 626C6163 		.ascii	"black\000"
 1938      6B00
 1939              	.LASF51:
 1940 0006 55415254 		.ascii	"UART_1_GetChar\000"
 1940      5F315F47 
 1940      65744368 
 1940      617200
 1941              	.LASF31:
 1942 0015 6F6C645F 		.ascii	"old_error_left\000"
 1942      6572726F 
 1942      725F6C65 
 1942      667400
 1943              	.LASF47:
 1944 0024 6D6F746F 		.ascii	"motor_stop\000"
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 45


 1944      725F7374 
 1944      6F7000
 1945              	.LASF2:
 1946 002f 73686F72 		.ascii	"short int\000"
 1946      7420696E 
 1946      7400
 1947              	.LASF33:
 1948 0039 6F6C645F 		.ascii	"old_speed_right\000"
 1948      73706565 
 1948      645F7269 
 1948      67687400 
 1949              	.LASF17:
 1950 0049 73697A65 		.ascii	"sizetype\000"
 1950      74797065 
 1950      00
 1951              	.LASF26:
 1952 0052 6F6C6453 		.ascii	"oldSignalValue\000"
 1952      69676E61 
 1952      6C56616C 
 1952      756500
 1953              	.LASF8:
 1954 0061 6C6F6E67 		.ascii	"long long int\000"
 1954      206C6F6E 
 1954      6720696E 
 1954      7400
 1955              	.LASF35:
 1956 006f 5F777269 		.ascii	"_write\000"
 1956      746500
 1957              	.LASF4:
 1958 0076 5F5F7569 		.ascii	"__uint16_t\000"
 1958      6E743136 
 1958      5F7400
 1959              	.LASF36:
 1960 0081 66696C65 		.ascii	"file\000"
 1960      00
 1961              	.LASF55:
 1962 0086 73656E73 		.ascii	"sensors_\000"
 1962      6F72735F 
 1962      00
 1963              	.LASF30:
 1964 008f 6F6C645F 		.ascii	"old_error_right\000"
 1964      6572726F 
 1964      725F7269 
 1964      67687400 
 1965              	.LASF41:
 1966 009f 7265666C 		.ascii	"reflectance_start\000"
 1966      65637461 
 1966      6E63655F 
 1966      73746172 
 1966      7400
 1967              	.LASF39:
 1968 00b1 55415254 		.ascii	"UART_1_Start\000"
 1968      5F315F53 
 1968      74617274 
 1968      00
 1969              	.LASF50:
 1970 00be 55415254 		.ascii	"UART_1_PutChar\000"
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 46


 1970      5F315F50 
 1970      75744368 
 1970      617200
 1971              	.LASF13:
 1972 00cd 666C6F61 		.ascii	"float\000"
 1972      7400
 1973              	.LASF28:
 1974 00d3 6572726F 		.ascii	"error_left\000"
 1974      725F6C65 
 1974      667400
 1975              	.LASF32:
 1976 00de 6F6C645F 		.ascii	"old_speed_left\000"
 1976      73706565 
 1976      645F6C65 
 1976      667400
 1977              	.LASF46:
 1978 00ed 7265666C 		.ascii	"reflectance_digital\000"
 1978      65637461 
 1978      6E63655F 
 1978      64696769 
 1978      74616C00 
 1979              	.LASF6:
 1980 0101 6C6F6E67 		.ascii	"long int\000"
 1980      20696E74 
 1980      00
 1981              	.LASF21:
 1982 010a 49525F76 		.ascii	"IR_val\000"
 1982      616C00
 1983              	.LASF19:
 1984 0111 72696768 		.ascii	"right_white\000"
 1984      745F7768 
 1984      69746500 
 1985              	.LASF16:
 1986 011d 6C6F6E67 		.ascii	"long double\000"
 1986      20646F75 
 1986      626C6500 
 1987              	.LASF18:
 1988 0129 6C656674 		.ascii	"left_white\000"
 1988      5F776869 
 1988      746500
 1989              	.LASF1:
 1990 0134 756E7369 		.ascii	"unsigned char\000"
 1990      676E6564 
 1990      20636861 
 1990      7200
 1991              	.LASF37:
 1992 0142 5F726561 		.ascii	"_read\000"
 1992      6400
 1993              	.LASF0:
 1994 0148 7369676E 		.ascii	"signed char\000"
 1994      65642063 
 1994      68617200 
 1995              	.LASF9:
 1996 0154 6C6F6E67 		.ascii	"long long unsigned int\000"
 1996      206C6F6E 
 1996      6720756E 
 1996      7369676E 
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 47


 1996      65642069 
 1997              	.LASF10:
 1998 016b 756E7369 		.ascii	"unsigned int\000"
 1998      676E6564 
 1998      20696E74 
 1998      00
 1999              	.LASF11:
 2000 0178 75696E74 		.ascii	"uint16_t\000"
 2000      31365F74 
 2000      00
 2001              	.LASF23:
 2002 0181 6C656674 		.ascii	"left_speed\000"
 2002      5F737065 
 2002      656400
 2003              	.LASF24:
 2004 018c 72696768 		.ascii	"right_speed\000"
 2004      745F7370 
 2004      65656400 
 2005              	.LASF3:
 2006 0198 73686F72 		.ascii	"short unsigned int\000"
 2006      7420756E 
 2006      7369676E 
 2006      65642069 
 2006      6E7400
 2007              	.LASF29:
 2008 01ab 6572726F 		.ascii	"error_right\000"
 2008      725F7269 
 2008      67687400 
 2009              	.LASF48:
 2010 01b7 6D6F746F 		.ascii	"motor_forward\000"
 2010      725F666F 
 2010      72776172 
 2010      6400
 2011              	.LASF15:
 2012 01c5 63686172 		.ascii	"char\000"
 2012      00
 2013              	.LASF34:
 2014 01ca 6D61696E 		.ascii	"main\000"
 2014      00
 2015              	.LASF12:
 2016 01cf 696E7433 		.ascii	"int32_t\000"
 2016      325F7400 
 2017              	.LASF54:
 2018 01d7 4A3A5C50 		.ascii	"J:\\Project\\Steve Brain\\Zumo01\\ZumoBot.cydsn\000"
 2018      726F6A65 
 2018      63745C53 
 2018      74657665 
 2018      20427261 
 2019              	.LASF22:
 2020 0203 73746F70 		.ascii	"stopCounter\000"
 2020      436F756E 
 2020      74657200 
 2021              	.LASF53:
 2022 020f 6D61696E 		.ascii	"main.c\000"
 2022      2E6300
 2023              	.LASF7:
 2024 0216 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 48


 2024      20756E73 
 2024      69676E65 
 2024      6420696E 
 2024      7400
 2025              	.LASF40:
 2026 0228 73656E73 		.ascii	"sensor_isr_StartEx\000"
 2026      6F725F69 
 2026      73725F53 
 2026      74617274 
 2026      457800
 2027              	.LASF44:
 2028 023b 6D6F746F 		.ascii	"motor_start\000"
 2028      725F7374 
 2028      61727400 
 2029              	.LASF27:
 2030 0247 666C6167 		.ascii	"flag\000"
 2030      00
 2031              	.LASF38:
 2032 024c 636F756E 		.ascii	"count\000"
 2032      7400
 2033              	.LASF5:
 2034 0252 5F5F696E 		.ascii	"__int32_t\000"
 2034      7433325F 
 2034      7400
 2035              	.LASF45:
 2036 025c 7265666C 		.ascii	"reflectance_read\000"
 2036      65637461 
 2036      6E63655F 
 2036      72656164 
 2036      00
 2037              	.LASF25:
 2038 026d 6D61785F 		.ascii	"max_speed\000"
 2038      73706565 
 2038      6400
 2039              	.LASF14:
 2040 0277 646F7562 		.ascii	"double\000"
 2040      6C6500
 2041              	.LASF43:
 2042 027e 6765745F 		.ascii	"get_IR\000"
 2042      495200
 2043              	.LASF49:
 2044 0285 6D6F746F 		.ascii	"motor_move\000"
 2044      725F6D6F 
 2044      766500
 2045              	.LASF56:
 2046 0290 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2046      52784275 
 2046      66666572 
 2046      00
 2047              	.LASF52:
 2048 029d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2048      43313120 
 2048      352E342E 
 2048      31203230 
 2048      31363036 
 2049 02d0 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2049      20726576 
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccKeL2pb.s 			page 49


 2049      6973696F 
 2049      6E203233 
 2049      37373135 
 2050 0303 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2050      66756E63 
 2050      74696F6E 
 2050      2D736563 
 2050      74696F6E 
 2051              	.LASF42:
 2052 032b 49525F6C 		.ascii	"IR_led_Write\000"
 2052      65645F57 
 2052      72697465 
 2052      00
 2053              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
