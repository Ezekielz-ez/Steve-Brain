ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_f2d
  20              		.global	__aeabi_dadd
  21              		.global	__aeabi_d2f
  22              		.global	__aeabi_dsub
  23              		.global	__aeabi_fmul
  24              		.global	__aeabi_f2uiz
  25              		.section	.text.main,"ax",%progbits
  26              		.align	2
  27              		.global	main
  28              		.thumb
  29              		.thumb_func
  30              		.type	main, %function
  31              	main:
  32              	.LFB64:
  33              		.file 1 "main.c"
   1:main.c        **** /**
   2:main.c        **** * @mainpage ZumoBot Project
   3:main.c        **** * @brief    You can make your own ZumoBot with various sensors.
   4:main.c        **** * @details  <br><br>
   5:main.c        ****     <p>
   6:main.c        ****     <B>General</B><br>
   7:main.c        ****     You will use Pololu Zumo Shields for your robot project with CY8CKIT-059(PSoC 5LP) from Cypress
   8:main.c        ****     library has basic methods of various sensors and communications so that you can make what you w
   9:main.c        ****     <br><br>
  10:main.c        ****     </p>
  11:main.c        ****     
  12:main.c        ****     <p>
  13:main.c        ****     <B>Sensors</B><br>
  14:main.c        ****     &nbsp;Included: <br>
  15:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;LSM303D: Accelerometer & Magnetometer<br>
  16:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;L3GD20H: Gyroscope<br>
  17:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;Reflectance sensor<br>
  18:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;Motors
  19:main.c        ****     &nbsp;Wii nunchuck<br>
  20:main.c        ****     &nbsp;TSOP-2236: IR Receiver<br>
  21:main.c        ****     &nbsp;HC-SR04: Ultrasonic sensor<br>
  22:main.c        ****     &nbsp;APDS-9301: Ambient light sensor<br>
  23:main.c        ****     &nbsp;IR LED <br><br><br>
  24:main.c        ****     </p>
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 2


  25:main.c        ****     
  26:main.c        ****     <p>
  27:main.c        ****     <B>Communication</B><br>
  28:main.c        ****     I2C, UART, Serial<br>
  29:main.c        ****     </p>
  30:main.c        **** */
  31:main.c        **** 
  32:main.c        **** #include <project.h>
  33:main.c        **** #include <stdio.h>
  34:main.c        **** #include "Motor.h"
  35:main.c        **** #include "Ultra.h"
  36:main.c        **** #include "Nunchuk.h"
  37:main.c        **** #include "Reflectance.h"
  38:main.c        **** #include "I2C_made.h"
  39:main.c        **** #include "Gyro.h"
  40:main.c        **** #include "Accel_magnet.h"
  41:main.c        **** #include "IR.h"
  42:main.c        **** #include "Ambient.h"
  43:main.c        **** #include "Beep.h"
  44:main.c        **** 
  45:main.c        **** int rread(void);
  46:main.c        **** 
  47:main.c        **** /**
  48:main.c        ****  * @file    main.c
  49:main.c        ****  * @brief   
  50:main.c        ****  * @details  ** You should enable global interrupt for operating properly. **<br>&nbsp;&nbsp;&nbsp;
  51:main.c        **** */
  52:main.c        **** 
  53:main.c        **** /*
  54:main.c        **** //battery level//
  55:main.c        **** int main()
  56:main.c        **** {
  57:main.c        ****     CyGlobalIntEnable; 
  58:main.c        ****     UART_1_Start();
  59:main.c        ****     ADC_Battery_Start();        
  60:main.c        ****     int16 adcresult =0;
  61:main.c        ****     //float volts = 0.0;
  62:main.c        **** 
  63:main.c        ****     printf("\nBoot\n");
  64:main.c        **** 
  65:main.c        ****     //BatteryLed_Write(1); // Switch led on 
  66:main.c        ****     BatteryLed_Write(0); // Switch led off 
  67:main.c        ****     //uint8 button;
  68:main.c        ****     //button = SW1_Read(); // read SW1 on pSoC board
  69:main.c        **** 
  70:main.c        ****     for(;;)
  71:main.c        ****     {
  72:main.c        ****         
  73:main.c        ****         ADC_Battery_StartConvert();
  74:main.c        ****         if(ADC_Battery_IsEndConversion(ADC_Battery_WAIT_FOR_RESULT)) {   // wait for get ADC conver
  75:main.c        ****             adcresult = ADC_Battery_GetResult16();
  76:main.c        ****             volts = ADC_Battery_CountsTo_Volts(adcresult);                  // convert value to Vol
  77:main.c        ****         
  78:main.c        ****             // If you want to print value
  79:main.c        ****             printf("%d %f\r\n",adcresult, volts*1.5+0.045);
  80:main.c        ****         }
  81:main.c        ****         CyDelay(500);
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 3


  82:main.c        ****     }
  83:main.c        ****    
  84:main.c        ****     int choice;
  85:main.c        ****     int IR_val;
  86:main.c        ****     while(1) {
  87:main.c        ****         do {
  88:main.c        ****             IR_val = get_IR();
  89:main.c        ****         }
  90:main.c        ****         while(!IR_val);
  91:main.c        ****         motor_start();
  92:main.c        ****        
  93:main.c        ****         motor_forward(110,4800);
  94:main.c        ****         motor_turn(160,0,470);
  95:main.c        ****         motor_forward(100,3800);
  96:main.c        ****         motor_turn(170,0,470);
  97:main.c        ****         motor_forward(200,2450);
  98:main.c        ****         motor_turn(230,0,600);
  99:main.c        ****         motor_turn(90,120,3620);
 100:main.c        ****         
 101:main.c        ****         motor_stop();
 102:main.c        **** 
 103:main.c        ****     }
 104:main.c        **** }
 105:main.c        **** */
 106:main.c        **** 
 107:main.c        **** 
 108:main.c        **** /*//ultra sonic sensor//
 109:main.c        **** int main()
 110:main.c        **** {
 111:main.c        ****     CyGlobalIntEnable; 
 112:main.c        ****     UART_1_Start();
 113:main.c        ****     Ultra_Start();                          // Ultra Sonic Start function
 114:main.c        ****     while(1) {
 115:main.c        ****         //If you want to print out the value  
 116:main.c        ****         printf("distance = %5.0f\r\n", Ultra_GetDistance());
 117:main.c        ****         CyDelay(1000);
 118:main.c        ****     }
 119:main.c        **** }   
 120:main.c        **** //*/
 121:main.c        **** 
 122:main.c        **** 
 123:main.c        **** /*//nunchuk//
 124:main.c        **** int main()
 125:main.c        **** {
 126:main.c        ****     CyGlobalIntEnable; 
 127:main.c        ****     UART_1_Start();
 128:main.c        ****   
 129:main.c        ****     nunchuk_start();
 130:main.c        ****     nunchuk_init();
 131:main.c        ****     
 132:main.c        ****     for(;;)
 133:main.c        ****     {    
 134:main.c        ****         nunchuk_read();
 135:main.c        ****     }
 136:main.c        **** }   
 137:main.c        **** //*/
 138:main.c        **** 
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 4


 139:main.c        **** 
 140:main.c        **** /*//IR receiver//
 141:main.c        **** int main()
 142:main.c        **** {
 143:main.c        ****     CyGlobalIntEnable; 
 144:main.c        ****     UART_1_Start();
 145:main.c        ****     
 146:main.c        ****     unsigned int IR_val; 
 147:main.c        ****     
 148:main.c        ****     for(;;)
 149:main.c        ****     {
 150:main.c        ****        IR_val = get_IR();
 151:main.c        ****        printf("%x\r\n\n",IR_val);
 152:main.c        ****     }    
 153:main.c        ****  }   
 154:main.c        **** //*/
 155:main.c        **** 
 156:main.c        **** 
 157:main.c        **** /*//Ambient light sensor//
 158:main.c        **** int main()
 159:main.c        **** {
 160:main.c        ****     CyGlobalIntEnable; 
 161:main.c        ****     UART_1_Start();
 162:main.c        ****     
 163:main.c        ****     I2C_Start();
 164:main.c        ****     
 165:main.c        ****     I2C_write(0x29,0x80,0x00);          // set to power down
 166:main.c        ****     I2C_write(0x29,0x80,0x03);          // set to power on
 167:main.c        ****     
 168:main.c        ****     for(;;)
 169:main.c        ****     {    
 170:main.c        ****         uint8 Data0Low,Data0High,Data1Low,Data1High;
 171:main.c        ****         Data0Low = I2C_read(0x29,CH0_L);
 172:main.c        ****         Data0High = I2C_read(0x29,CH0_H);
 173:main.c        ****         Data1Low = I2C_read(0x29,CH1_L);
 174:main.c        ****         Data1High = I2C_read(0x29,CH1_H);
 175:main.c        ****         
 176:main.c        ****         uint8 CH0, CH1;
 177:main.c        ****         CH0 = convert_raw(Data0Low,Data0High);      // combine Data0
 178:main.c        ****         CH1 = convert_raw(Data1Low,Data1High);      // combine Data1
 179:main.c        **** 
 180:main.c        ****         double Ch0 = CH0;
 181:main.c        ****         double Ch1 = CH1;
 182:main.c        ****         
 183:main.c        ****         double data = 0;
 184:main.c        ****         data = getLux(Ch0,Ch1);
 185:main.c        ****         
 186:main.c        ****         // If you want to print out data
 187:main.c        ****         //printf("%lf\r\n",data);    
 188:main.c        ****     }    
 189:main.c        ****  }   
 190:main.c        **** //*/
 191:main.c        **** 
 192:main.c        **** 
 193:main.c        **** /*//accelerometer//
 194:main.c        **** int main()
 195:main.c        **** {
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 5


 196:main.c        ****     CyGlobalIntEnable; 
 197:main.c        ****     UART_1_Start();
 198:main.c        ****   
 199:main.c        ****     I2C_Start();
 200:main.c        ****   
 201:main.c        ****     uint8 X_L_A, X_H_A, Y_L_A, Y_H_A, Z_L_A, Z_H_A;
 202:main.c        ****     int16 X_AXIS_A, Y_AXIS_A, Z_AXIS_A;
 203:main.c        ****     
 204:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL1_REG, 0x37);           // set accelerometer & magnetometer
 205:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL7_REG, 0x22);
 206:main.c        ****     
 207:main.c        ****     
 208:main.c        ****     for(;;)
 209:main.c        ****     {
 210:main.c        ****         //print out accelerometer output
 211:main.c        ****         X_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_X_L_A);
 212:main.c        ****         X_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_X_H_A);
 213:main.c        ****         X_AXIS_A = convert_raw(X_L_A, X_H_A);
 214:main.c        ****         
 215:main.c        ****         Y_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_Y_L_A);
 216:main.c        ****         Y_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_Y_H_A);
 217:main.c        ****         Y_AXIS_A = convert_raw(Y_L_A, Y_H_A);
 218:main.c        ****         
 219:main.c        ****         Z_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_Z_L_A);
 220:main.c        ****         Z_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_Z_H_A);
 221:main.c        ****         Z_AXIS_A = convert_raw(Z_L_A, Z_H_A);
 222:main.c        ****         
 223:main.c        ****         printf("ACCEL: %d %d %d %d %d %d \r\n", X_L_A, X_H_A, Y_L_A, Y_H_A, Z_L_A, Z_H_A);
 224:main.c        ****         value_convert_accel(X_AXIS_A, Y_AXIS_A, Z_AXIS_A);
 225:main.c        ****         printf("\n");
 226:main.c        ****         
 227:main.c        ****         CyDelay(50);
 228:main.c        ****     }
 229:main.c        **** }   
 230:main.c        **** //*/
 231:main.c        **** 
 232:main.c        **** 
 233:main.c        **** //reflectance//
 234:main.c        **** int main()
 235:main.c        **** {
  34              		.loc 1 235 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 16
  37              		@ frame_needed = 0, uses_anonymous_args = 0
  38 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  39              		.cfi_def_cfa_offset 28
  40              		.cfi_offset 4, -28
  41              		.cfi_offset 5, -24
  42              		.cfi_offset 6, -20
  43              		.cfi_offset 7, -16
  44              		.cfi_offset 8, -12
  45              		.cfi_offset 9, -8
  46              		.cfi_offset 14, -4
  47 0004 85B0     		sub	sp, sp, #20
  48              		.cfi_def_cfa_offset 48
 236:main.c        ****     struct sensors_ ref;
 237:main.c        ****     struct sensors_ dig;
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 6


 238:main.c        ****     CyGlobalIntEnable; 
  49              		.loc 1 238 0
  50              		.syntax unified
  51              	@ 238 "main.c" 1
  52 0006 62B6     		CPSIE   i
  53              	@ 0 "" 2
 239:main.c        ****     UART_1_Start();
  54              		.loc 1 239 0
  55              		.thumb
  56              		.syntax unified
  57 0008 FFF7FEFF 		bl	UART_1_Start
  58              	.LVL0:
 240:main.c        ****   
 241:main.c        ****     sensor_isr_StartEx(sensor_isr_handler);
  59              		.loc 1 241 0
  60 000c 7048     		ldr	r0, .L16+8
  61 000e FFF7FEFF 		bl	sensor_isr_StartEx
  62              	.LVL1:
 242:main.c        ****     
 243:main.c        ****     reflectance_start();
  63              		.loc 1 243 0
  64 0012 FFF7FEFF 		bl	reflectance_start
  65              	.LVL2:
 244:main.c        **** 
 245:main.c        ****     IR_led_Write(1);
  66              		.loc 1 245 0
  67 0016 0120     		movs	r0, #1
  68 0018 FFF7FEFF 		bl	IR_led_Write
  69              	.LVL3:
  70              	.L2:
  71              	.LBB2:
 246:main.c        ****     for(;;)
 247:main.c        ****     {
 248:main.c        ****         //reflectance_read(&ref);
 249:main.c        ****         //printf("%d %d %d %d \r\n", ref.l3, ref.l1, ref.r1, ref.r3);       //print out each period
 250:main.c        ****         //reflectance_digital(&dig);      //print out 0 or 1 according to results of reflectance pe
 251:main.c        ****         //printf("%d %d %d %d \r\n", dig.l3, dig.l1, dig.r1, dig.r3);        //print out 0 or 1 acc
 252:main.c        ****         int IR_val;
 253:main.c        ****         int oldSignalValue = -1;
 254:main.c        ****         int stopCounter = 0;
 255:main.c        ****         int lineChecker = 0; //variable to check if the line is still the same
 256:main.c        ****         float accelerator = 1;
 257:main.c        ****         
 258:main.c        ****         //remote control
 259:main.c        ****         do 
 260:main.c        ****         {
 261:main.c        ****             IR_val = get_IR();
  72              		.loc 1 261 0 discriminator 1
  73 001c FFF7FEFF 		bl	get_IR
  74              	.LVL4:
 262:main.c        ****         }
 263:main.c        ****         while(!IR_val);
  75              		.loc 1 263 0 discriminator 1
  76 0020 0028     		cmp	r0, #0
  77 0022 FBD0     		beq	.L2
 264:main.c        ****         motor_start();
  78              		.loc 1 264 0
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 7


  79 0024 FFF7FEFF 		bl	motor_start
  80              	.LVL5:
 256:main.c        ****         
  81              		.loc 1 256 0
  82 0028 4FF07E54 		mov	r4, #1065353216
 255:main.c        ****         float accelerator = 1;
  83              		.loc 1 255 0
  84 002c 0026     		movs	r6, #0
 254:main.c        ****         int lineChecker = 0; //variable to check if the line is still the same
  85              		.loc 1 254 0
  86 002e 3546     		mov	r5, r6
 253:main.c        ****         int stopCounter = 0;
  87              		.loc 1 253 0
  88 0030 4FF0FF37 		mov	r7, #-1
  89              	.LVL6:
  90              	.L14:
 265:main.c        ****         
 266:main.c        ****         do
 267:main.c        ****         { 
 268:main.c        ****             reflectance_read(&ref);
  91              		.loc 1 268 0
  92 0034 02A8     		add	r0, sp, #8
  93 0036 FFF7FEFF 		bl	reflectance_read
  94              	.LVL7:
 269:main.c        ****             reflectance_digital(&dig);
  95              		.loc 1 269 0
  96 003a 6846     		mov	r0, sp
  97 003c FFF7FEFF 		bl	reflectance_digital
  98              	.LVL8:
 270:main.c        ****             //for pausing at extra line
 271:main.c        ****             
 272:main.c        ****             if(dig.l1 + dig.l3 + dig.r1 + dig.r3 == 0)
  99              		.loc 1 272 0
 100 0040 BDF80220 		ldrh	r2, [sp, #2]
 101 0044 BDF80030 		ldrh	r3, [sp]
 102 0048 1344     		add	r3, r3, r2
 103 004a BDF80420 		ldrh	r2, [sp, #4]
 104 004e 1344     		add	r3, r3, r2
 105 0050 BDF80620 		ldrh	r2, [sp, #6]
 106 0054 D318     		adds	r3, r2, r3
 107 0056 12D1     		bne	.L3
 273:main.c        ****             {
 274:main.c        ****                 if(dig.l1 + dig.l3 + dig.r1 + dig.r3 != oldSignalValue )
 108              		.loc 1 274 0
 109 0058 9F42     		cmp	r7, r3
 110 005a 00D0     		beq	.L4
 275:main.c        ****                 {   
 276:main.c        ****                     stopCounter ++;
 111              		.loc 1 276 0
 112 005c 0135     		adds	r5, r5, #1
 113              	.LVL9:
 114              	.L4:
 277:main.c        ****                 }
 278:main.c        ****                 if(stopCounter == 1 || stopCounter == 3)
 115              		.loc 1 278 0
 116 005e 012D     		cmp	r5, #1
 117 0060 01D0     		beq	.L5
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 8


 118              		.loc 1 278 0 is_stmt 0 discriminator 1
 119 0062 032D     		cmp	r5, #3
 120 0064 0BD1     		bne	.L3
 121              	.L5:
 279:main.c        ****                 {
 280:main.c        ****                     motor_stop();
 122              		.loc 1 280 0 is_stmt 1
 123 0066 FFF7FEFF 		bl	motor_stop
 124              	.LVL10:
 125              	.L6:
 281:main.c        ****                 do
 282:main.c        ****                 {
 283:main.c        ****                     IR_val = get_IR();
 126              		.loc 1 283 0 discriminator 1
 127 006a FFF7FEFF 		bl	get_IR
 128              	.LVL11:
 284:main.c        ****                 }
 285:main.c        ****                 while(!IR_val);
 129              		.loc 1 285 0 discriminator 1
 130 006e 0028     		cmp	r0, #0
 131 0070 FBD0     		beq	.L6
 286:main.c        ****                 motor_start();
 132              		.loc 1 286 0
 133 0072 FFF7FEFF 		bl	motor_start
 134              	.LVL12:
 287:main.c        ****                 motor_forward(100,100);
 135              		.loc 1 287 0
 136 0076 6421     		movs	r1, #100
 137 0078 0846     		mov	r0, r1
 138 007a FFF7FEFF 		bl	motor_forward
 139              	.LVL13:
 140              	.L3:
 288:main.c        ****             }
 289:main.c        ****             }
 290:main.c        ****             
 291:main.c        ****             //acceleration modifier
 292:main.c        ****             if(lineChecker == dig.l1+dig.r1)
 141              		.loc 1 292 0
 142 007e BDF80290 		ldrh	r9, [sp, #2]
 143 0082 BDF80470 		ldrh	r7, [sp, #4]
 144              	.LVL14:
 145 0086 09EB0708 		add	r8, r9, r7
 146 008a 4645     		cmp	r6, r8
 147 008c 0BD1     		bne	.L7
 293:main.c        ****             {
 294:main.c        ****                 accelerator+=0.2;
 148              		.loc 1 294 0
 149 008e 2046     		mov	r0, r4
 150 0090 FFF7FEFF 		bl	__aeabi_f2d
 151              	.LVL15:
 152 0094 4CA3     		adr	r3, .L16
 153 0096 D3E90023 		ldrd	r2, [r3]
 154 009a FFF7FEFF 		bl	__aeabi_dadd
 155              	.LVL16:
 156 009e FFF7FEFF 		bl	__aeabi_d2f
 157              	.LVL17:
 158 00a2 0446     		mov	r4, r0
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 9


 159              	.LVL18:
 160 00a4 0AE0     		b	.L8
 161              	.LVL19:
 162              	.L7:
 295:main.c        ****             }
 296:main.c        ****             else
 297:main.c        ****             {
 298:main.c        ****                 accelerator-=0.2;
 163              		.loc 1 298 0
 164 00a6 2046     		mov	r0, r4
 165 00a8 FFF7FEFF 		bl	__aeabi_f2d
 166              	.LVL20:
 167 00ac 46A3     		adr	r3, .L16
 168 00ae D3E90023 		ldrd	r2, [r3]
 169 00b2 FFF7FEFF 		bl	__aeabi_dsub
 170              	.LVL21:
 171 00b6 FFF7FEFF 		bl	__aeabi_d2f
 172              	.LVL22:
 173 00ba 0446     		mov	r4, r0
 174              	.LVL23:
 175              	.L8:
 299:main.c        ****             }
 300:main.c        ****             
 301:main.c        ****             //main moving part
 302:main.c        ****             if(dig.r1+dig.l1==0)
 176              		.loc 1 302 0
 177 00bc B8F1000F 		cmp	r8, #0
 178 00c0 0AD1     		bne	.L9
 303:main.c        ****             {
 304:main.c        ****                 motor_forward(120*accelerator,50);
 179              		.loc 1 304 0
 180 00c2 4449     		ldr	r1, .L16+12
 181 00c4 2046     		mov	r0, r4
 182 00c6 FFF7FEFF 		bl	__aeabi_fmul
 183              	.LVL24:
 184 00ca FFF7FEFF 		bl	__aeabi_f2uiz
 185              	.LVL25:
 186 00ce 3221     		movs	r1, #50
 187 00d0 C0B2     		uxtb	r0, r0
 188 00d2 FFF7FEFF 		bl	motor_forward
 189              	.LVL26:
 190 00d6 6AE0     		b	.L10
 191              	.LVL27:
 192              	.L9:
 305:main.c        ****             }
 306:main.c        ****             else if (dig.r1==1 && dig.l1==0)
 193              		.loc 1 306 0
 194 00d8 012F     		cmp	r7, #1
 195 00da 33D1     		bne	.L11
 196              		.loc 1 306 0 is_stmt 0 discriminator 1
 197 00dc B9F1000F 		cmp	r9, #0
 198 00e0 30D1     		bne	.L11
 307:main.c        ****             {
 308:main.c        ****                 motor_forward(1,1);
 199              		.loc 1 308 0 is_stmt 1
 200 00e2 0121     		movs	r1, #1
 201 00e4 0846     		mov	r0, r1
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 10


 202              	.LVL28:
 203 00e6 FFF7FEFF 		bl	motor_forward
 204              	.LVL29:
 309:main.c        ****                 if(dig.l3==0)
 205              		.loc 1 309 0
 206 00ea BDF80030 		ldrh	r3, [sp]
 207 00ee A3B9     		cbnz	r3, .L12
 310:main.c        ****                 {
 311:main.c        ****                     motor_turn(10*accelerator,150*accelerator,35);
 208              		.loc 1 311 0
 209 00f0 3949     		ldr	r1, .L16+16
 210 00f2 2046     		mov	r0, r4
 211 00f4 FFF7FEFF 		bl	__aeabi_fmul
 212              	.LVL30:
 213 00f8 0746     		mov	r7, r0
 214 00fa 3849     		ldr	r1, .L16+20
 215 00fc 2046     		mov	r0, r4
 216 00fe FFF7FEFF 		bl	__aeabi_fmul
 217              	.LVL31:
 218 0102 FFF7FEFF 		bl	__aeabi_f2uiz
 219              	.LVL32:
 220 0106 C6B2     		uxtb	r6, r0
 221              	.LVL33:
 222 0108 3846     		mov	r0, r7
 223 010a FFF7FEFF 		bl	__aeabi_f2uiz
 224              	.LVL34:
 225 010e 2322     		movs	r2, #35
 226 0110 3146     		mov	r1, r6
 227 0112 C0B2     		uxtb	r0, r0
 228 0114 FFF7FEFF 		bl	motor_turn
 229              	.LVL35:
 230 0118 49E0     		b	.L10
 231              	.LVL36:
 232              	.L12:
 312:main.c        ****                 }
 313:main.c        ****                 else
 314:main.c        ****                 {
 315:main.c        ****                     motor_turn(10*accelerator,100*accelerator,35);
 233              		.loc 1 315 0
 234 011a 2F49     		ldr	r1, .L16+16
 235 011c 2046     		mov	r0, r4
 236 011e FFF7FEFF 		bl	__aeabi_fmul
 237              	.LVL37:
 238 0122 0746     		mov	r7, r0
 239 0124 2E49     		ldr	r1, .L16+24
 240 0126 2046     		mov	r0, r4
 241 0128 FFF7FEFF 		bl	__aeabi_fmul
 242              	.LVL38:
 243 012c FFF7FEFF 		bl	__aeabi_f2uiz
 244              	.LVL39:
 245 0130 C6B2     		uxtb	r6, r0
 246              	.LVL40:
 247 0132 3846     		mov	r0, r7
 248 0134 FFF7FEFF 		bl	__aeabi_f2uiz
 249              	.LVL41:
 250 0138 2322     		movs	r2, #35
 251 013a 3146     		mov	r1, r6
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 11


 252 013c C0B2     		uxtb	r0, r0
 253 013e FFF7FEFF 		bl	motor_turn
 254              	.LVL42:
 255 0142 34E0     		b	.L10
 256              	.LVL43:
 257              	.L11:
 316:main.c        ****                 }
 317:main.c        ****             }
 318:main.c        ****             else if (dig.r1==0 && dig.l1==1)
 258              		.loc 1 318 0
 259 0144 002F     		cmp	r7, #0
 260 0146 32D1     		bne	.L10
 261              		.loc 1 318 0 is_stmt 0 discriminator 1
 262 0148 B9F1010F 		cmp	r9, #1
 263 014c 2FD1     		bne	.L10
 319:main.c        ****             {   
 320:main.c        ****                 motor_forward(1,1);
 264              		.loc 1 320 0 is_stmt 1
 265 014e 0121     		movs	r1, #1
 266 0150 0846     		mov	r0, r1
 267              	.LVL44:
 268 0152 FFF7FEFF 		bl	motor_forward
 269              	.LVL45:
 321:main.c        ****                 if(dig.r3==0)
 270              		.loc 1 321 0
 271 0156 BDF80630 		ldrh	r3, [sp, #6]
 272 015a A3B9     		cbnz	r3, .L13
 322:main.c        ****                 {
 323:main.c        ****                     motor_turn(150*accelerator,10*accelerator,35);
 273              		.loc 1 323 0
 274 015c 1F49     		ldr	r1, .L16+20
 275 015e 2046     		mov	r0, r4
 276 0160 FFF7FEFF 		bl	__aeabi_fmul
 277              	.LVL46:
 278 0164 0746     		mov	r7, r0
 279 0166 1C49     		ldr	r1, .L16+16
 280 0168 2046     		mov	r0, r4
 281 016a FFF7FEFF 		bl	__aeabi_fmul
 282              	.LVL47:
 283 016e FFF7FEFF 		bl	__aeabi_f2uiz
 284              	.LVL48:
 285 0172 C6B2     		uxtb	r6, r0
 286              	.LVL49:
 287 0174 3846     		mov	r0, r7
 288 0176 FFF7FEFF 		bl	__aeabi_f2uiz
 289              	.LVL50:
 290 017a 2322     		movs	r2, #35
 291 017c 3146     		mov	r1, r6
 292 017e C0B2     		uxtb	r0, r0
 293 0180 FFF7FEFF 		bl	motor_turn
 294              	.LVL51:
 295 0184 13E0     		b	.L10
 296              	.LVL52:
 297              	.L13:
 324:main.c        ****                 }
 325:main.c        ****                 else
 326:main.c        ****                 {
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 12


 327:main.c        ****                     motor_turn(100*accelerator,10*accelerator,35);
 298              		.loc 1 327 0
 299 0186 1649     		ldr	r1, .L16+24
 300 0188 2046     		mov	r0, r4
 301 018a FFF7FEFF 		bl	__aeabi_fmul
 302              	.LVL53:
 303 018e 0746     		mov	r7, r0
 304 0190 1149     		ldr	r1, .L16+16
 305 0192 2046     		mov	r0, r4
 306 0194 FFF7FEFF 		bl	__aeabi_fmul
 307              	.LVL54:
 308 0198 FFF7FEFF 		bl	__aeabi_f2uiz
 309              	.LVL55:
 310 019c C6B2     		uxtb	r6, r0
 311              	.LVL56:
 312 019e 3846     		mov	r0, r7
 313 01a0 FFF7FEFF 		bl	__aeabi_f2uiz
 314              	.LVL57:
 315 01a4 2322     		movs	r2, #35
 316 01a6 3146     		mov	r1, r6
 317 01a8 C0B2     		uxtb	r0, r0
 318 01aa FFF7FEFF 		bl	motor_turn
 319              	.LVL58:
 320              	.L10:
 328:main.c        ****                 }
 329:main.c        ****             }
 330:main.c        ****             else
 331:main.c        ****             {   
 332:main.c        ****                 //motor_backward(80,15);
 333:main.c        ****                 //motor_turn(100,0,30);
 334:main.c        ****                 //CyDelay(50);
 335:main.c        ****             }
 336:main.c        ****             oldSignalValue = dig.l1 + dig.l3 + dig.r1 + dig.r3;
 321              		.loc 1 336 0
 322 01ae BDF80260 		ldrh	r6, [sp, #2]
 323 01b2 BDF80030 		ldrh	r3, [sp]
 324 01b6 3344     		add	r3, r3, r6
 325 01b8 BDF80420 		ldrh	r2, [sp, #4]
 326 01bc 1344     		add	r3, r3, r2
 327 01be BDF80670 		ldrh	r7, [sp, #6]
 328 01c2 1F44     		add	r7, r7, r3
 329              	.LVL59:
 337:main.c        ****             lineChecker = dig.l1 + dig.r1;
 330              		.loc 1 337 0
 331 01c4 1644     		add	r6, r6, r2
 332              	.LVL60:
 338:main.c        ****             //the loop for running normally - hopefully
 339:main.c        ****             
 340:main.c        ****         }
 341:main.c        ****         while(1);
 333              		.loc 1 341 0
 334 01c6 35E7     		b	.L14
 335              	.L17:
 336              		.align	3
 337              	.L16:
 338 01c8 9A999999 		.word	-1717986918
 339 01cc 9999C93F 		.word	1070176665
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 13


 340 01d0 00000000 		.word	sensor_isr_handler
 341 01d4 0000F042 		.word	1123024896
 342 01d8 00002041 		.word	1092616192
 343 01dc 00001643 		.word	1125515264
 344 01e0 0000C842 		.word	1120403456
 345              	.LBE2:
 346              		.cfi_endproc
 347              	.LFE64:
 348              		.size	main, .-main
 349              		.section	.text._write,"ax",%progbits
 350              		.align	2
 351              		.global	_write
 352              		.thumb
 353              		.thumb_func
 354              		.type	_write, %function
 355              	_write:
 356              	.LFB65:
 342:main.c        ****             
 343:main.c        ****         
 344:main.c        ****         CyDelay(500);
 345:main.c        ****     }
 346:main.c        **** }   
 347:main.c        **** //
 348:main.c        **** 
 349:main.c        ****  /* //motor//
 350:main.c        **** int main()
 351:main.c        **** {
 352:main.c        ****     CyGlobalIntEnable; 
 353:main.c        ****     UART_1_Start();
 354:main.c        **** 
 355:main.c        ****     motor_start();              // motor start
 356:main.c        **** 
 357:main.c        ****     motor_forward(100,2000);     // moving forward
 358:main.c        ****     motor_turn(200,50,2000);     // turn
 359:main.c        ****     motor_turn(50,200,2000);     // turn
 360:main.c        ****     motor_backward(100,2000);    // movinb backward
 361:main.c        ****        
 362:main.c        ****     motor_stop();               // motor stop
 363:main.c        ****     
 364:main.c        ****     for(;;)
 365:main.c        ****     {
 366:main.c        **** 
 367:main.c        ****     }
 368:main.c        **** }
 369:main.c        **** //*/
 370:main.c        ****     
 371:main.c        **** 
 372:main.c        **** /*//gyroscope//
 373:main.c        **** int main()
 374:main.c        **** {
 375:main.c        ****     CyGlobalIntEnable; 
 376:main.c        ****     UART_1_Start();
 377:main.c        ****   
 378:main.c        ****     I2C_Start();
 379:main.c        ****   
 380:main.c        ****     uint8 X_L_G, X_H_G, Y_L_G, Y_H_G, Z_L_G, Z_H_G;
 381:main.c        ****     int16 X_AXIS_G, Y_AXIS_G, Z_AXIS_G;
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 14


 382:main.c        ****     
 383:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL1_REG, 0x0F);             // set gyroscope into active mode
 384:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL4_REG, 0x30);             // set full scale selection to 2000dps 
 385:main.c        ****     
 386:main.c        ****     for(;;)
 387:main.c        ****     {
 388:main.c        ****         //print out gyroscope output
 389:main.c        ****         X_L_G = I2C_read(GYRO_ADDR, OUT_X_AXIS_L);
 390:main.c        ****         X_H_G = I2C_read(GYRO_ADDR, OUT_X_AXIS_H);
 391:main.c        ****         X_AXIS_G = convert_raw(X_H_G, X_L_G);
 392:main.c        ****         
 393:main.c        ****         
 394:main.c        ****         Y_L_G = I2C_read(GYRO_ADDR, OUT_Y_AXIS_L);
 395:main.c        ****         Y_H_G = I2C_read(GYRO_ADDR, OUT_Y_AXIS_H);
 396:main.c        ****         Y_AXIS_G = convert_raw(Y_H_G, Y_L_G);
 397:main.c        ****         
 398:main.c        ****         
 399:main.c        ****         Z_L_G = I2C_read(GYRO_ADDR, OUT_Z_AXIS_L);
 400:main.c        ****         Z_H_G = I2C_read(GYRO_ADDR, OUT_Z_AXIS_H);
 401:main.c        ****         Z_AXIS_G = convert_raw(Z_H_G, Z_L_G);
 402:main.c        ****      
 403:main.c        ****         // If you want to print value
 404:main.c        ****         printf("%d %d %d \r\n", X_AXIS_G, Y_AXIS_G, Z_AXIS_G);
 405:main.c        ****         CyDelay(50);
 406:main.c        ****     }
 407:main.c        **** }   
 408:main.c        **** //*/
 409:main.c        **** 
 410:main.c        **** 
 411:main.c        **** /*//magnetometer//
 412:main.c        **** int main()
 413:main.c        **** {
 414:main.c        ****     CyGlobalIntEnable; 
 415:main.c        ****     UART_1_Start();
 416:main.c        ****   
 417:main.c        ****     I2C_Start();
 418:main.c        ****    
 419:main.c        ****     uint8 X_L_M, X_H_M, Y_L_M, Y_H_M, Z_L_M, Z_H_M;
 420:main.c        ****     int16 X_AXIS, Y_AXIS, Z_AXIS;
 421:main.c        ****     
 422:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL1_REG, 0x0F);             // set gyroscope into active mode
 423:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL4_REG, 0x30);             // set full scale selection to 2000dps
 424:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL1_REG, 0x37);           // set accelerometer & magnetometer
 425:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL7_REG, 0x22);
 426:main.c        ****     
 427:main.c        ****     
 428:main.c        ****     for(;;)
 429:main.c        ****     {
 430:main.c        ****         X_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_X_L_M);
 431:main.c        ****         X_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_X_H_M);
 432:main.c        ****         X_AXIS = convert_raw(X_L_M, X_H_M);
 433:main.c        ****         
 434:main.c        ****         Y_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_Y_L_M);
 435:main.c        ****         Y_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_Y_H_M);
 436:main.c        ****         Y_AXIS = convert_raw(Y_L_M, Y_H_M);
 437:main.c        ****         
 438:main.c        ****         Z_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_Z_L_M);
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 15


 439:main.c        ****         Z_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_Z_H_M);
 440:main.c        ****         Z_AXIS = convert_raw(Z_L_M, Z_H_M);
 441:main.c        ****         
 442:main.c        ****         heading(X_AXIS, Y_AXIS);
 443:main.c        ****         printf("MAGNET: %d %d %d %d %d %d \r\n", X_L_M, X_H_M, Y_L_M, Y_H_M, Z_L_M, Z_H_M);
 444:main.c        ****         printf("%d %d %d \r\n", X_AXIS,Y_AXIS, Z_AXIS);
 445:main.c        ****         CyDelay(50);      
 446:main.c        ****     }
 447:main.c        **** }   
 448:main.c        **** //*/
 449:main.c        **** 
 450:main.c        **** 
 451:main.c        **** #if 0
 452:main.c        **** int rread(void)
 453:main.c        **** {
 454:main.c        ****     SC0_SetDriveMode(PIN_DM_STRONG);
 455:main.c        ****     SC0_Write(1);
 456:main.c        ****     CyDelayUs(10);
 457:main.c        ****     SC0_SetDriveMode(PIN_DM_DIG_HIZ);
 458:main.c        ****     Timer_1_Start();
 459:main.c        ****     uint16_t start = Timer_1_ReadCounter();
 460:main.c        ****     uint16_t end = 0;
 461:main.c        ****     while(!(Timer_1_ReadStatusRegister() & Timer_1_STATUS_TC)) {
 462:main.c        ****         if(SC0_Read() == 0 && end == 0) {
 463:main.c        ****             end = Timer_1_ReadCounter();
 464:main.c        ****         }
 465:main.c        ****     }
 466:main.c        ****     Timer_1_Stop();
 467:main.c        ****     
 468:main.c        ****     return (start - end);
 469:main.c        **** }
 470:main.c        **** #endif
 471:main.c        **** 
 472:main.c        **** /* Don't remove the functions below */
 473:main.c        **** int _write(int file, char *ptr, int len)
 474:main.c        **** {
 357              		.loc 1 474 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361              	.LVL61:
 362 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 363              		.cfi_def_cfa_offset 24
 364              		.cfi_offset 3, -24
 365              		.cfi_offset 4, -20
 366              		.cfi_offset 5, -16
 367              		.cfi_offset 6, -12
 368              		.cfi_offset 7, -8
 369              		.cfi_offset 14, -4
 370 0002 0C46     		mov	r4, r1
 371 0004 1746     		mov	r7, r2
 372              	.LVL62:
 475:main.c        ****     (void)file; /* Parameter is not used, suppress unused argument warning */
 476:main.c        **** 	int n;
 477:main.c        **** 	for(n = 0; n < len; n++) {
 373              		.loc 1 477 0
 374 0006 0025     		movs	r5, #0
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 16


 375 0008 0BE0     		b	.L19
 376              	.LVL63:
 377              	.L21:
 478:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 378              		.loc 1 478 0
 379 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 380 000c 0A2B     		cmp	r3, #10
 381 000e 02D1     		bne	.L20
 382              		.loc 1 478 0 is_stmt 0 discriminator 1
 383 0010 0D20     		movs	r0, #13
 384 0012 FFF7FEFF 		bl	UART_1_PutChar
 385              	.LVL64:
 386              	.L20:
 479:main.c        **** 		UART_1_PutChar(*ptr++);
 387              		.loc 1 479 0 is_stmt 1 discriminator 2
 388 0016 661C     		adds	r6, r4, #1
 389              	.LVL65:
 390 0018 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 391 001a FFF7FEFF 		bl	UART_1_PutChar
 392              	.LVL66:
 477:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 393              		.loc 1 477 0 discriminator 2
 394 001e 0135     		adds	r5, r5, #1
 395              	.LVL67:
 396              		.loc 1 479 0 discriminator 2
 397 0020 3446     		mov	r4, r6
 398              	.LVL68:
 399              	.L19:
 477:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 400              		.loc 1 477 0 discriminator 1
 401 0022 BD42     		cmp	r5, r7
 402 0024 F1DB     		blt	.L21
 480:main.c        **** 	}
 481:main.c        **** 	return len;
 482:main.c        **** }
 403              		.loc 1 482 0
 404 0026 3846     		mov	r0, r7
 405 0028 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 406              		.cfi_endproc
 407              	.LFE65:
 408              		.size	_write, .-_write
 409 002a 00BF     		.section	.text._read,"ax",%progbits
 410              		.align	2
 411              		.global	_read
 412              		.thumb
 413              		.thumb_func
 414              		.type	_read, %function
 415              	_read:
 416              	.LFB66:
 483:main.c        **** 
 484:main.c        **** int _read (int file, char *ptr, int count)
 485:main.c        **** {
 417              		.loc 1 485 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421              	.LVL69:
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 17


 422 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 423              		.cfi_def_cfa_offset 24
 424              		.cfi_offset 3, -24
 425              		.cfi_offset 4, -20
 426              		.cfi_offset 5, -16
 427              		.cfi_offset 6, -12
 428              		.cfi_offset 7, -8
 429              		.cfi_offset 14, -4
 430 0002 0F46     		mov	r7, r1
 431 0004 1446     		mov	r4, r2
 432              	.LVL70:
 486:main.c        ****     int chs = 0;
 433              		.loc 1 486 0
 434 0006 0026     		movs	r6, #0
 487:main.c        ****     char ch;
 488:main.c        ****  
 489:main.c        ****     (void)file; /* Parameter is not used, suppress unused argument warning */
 490:main.c        ****     while(count > 0) {
 435              		.loc 1 490 0
 436 0008 12E0     		b	.L25
 437              	.LVL71:
 438              	.L28:
 491:main.c        ****         ch = UART_1_GetChar();
 439              		.loc 1 491 0
 440 000a FFF7FEFF 		bl	UART_1_GetChar
 441              	.LVL72:
 492:main.c        ****         if(ch != 0) {
 442              		.loc 1 492 0
 443 000e 0546     		mov	r5, r0
 444 0010 70B1     		cbz	r0, .L25
 493:main.c        ****             UART_1_PutChar(ch);
 445              		.loc 1 493 0
 446 0012 FFF7FEFF 		bl	UART_1_PutChar
 447              	.LVL73:
 494:main.c        ****             chs++;
 448              		.loc 1 494 0
 449 0016 0136     		adds	r6, r6, #1
 450              	.LVL74:
 495:main.c        ****             if(ch == '\r') {
 451              		.loc 1 495 0
 452 0018 0D2D     		cmp	r5, #13
 453 001a 03D1     		bne	.L26
 454              	.LVL75:
 496:main.c        ****                 ch = '\n';
 497:main.c        ****                 UART_1_PutChar(ch);
 455              		.loc 1 497 0
 456 001c 0A20     		movs	r0, #10
 457 001e FFF7FEFF 		bl	UART_1_PutChar
 458              	.LVL76:
 496:main.c        ****                 ch = '\n';
 459              		.loc 1 496 0
 460 0022 0A25     		movs	r5, #10
 461              	.LVL77:
 462              	.L26:
 498:main.c        ****             }
 499:main.c        ****             *ptr++ = ch;
 463              		.loc 1 499 0
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 18


 464 0024 7B1C     		adds	r3, r7, #1
 465              	.LVL78:
 466 0026 3D70     		strb	r5, [r7]
 500:main.c        ****             count--;
 467              		.loc 1 500 0
 468 0028 013C     		subs	r4, r4, #1
 469              	.LVL79:
 501:main.c        ****             if(ch == '\n') break;
 470              		.loc 1 501 0
 471 002a 0A2D     		cmp	r5, #10
 472 002c 02D0     		beq	.L27
 499:main.c        ****             count--;
 473              		.loc 1 499 0
 474 002e 1F46     		mov	r7, r3
 475              	.LVL80:
 476              	.L25:
 490:main.c        ****         ch = UART_1_GetChar();
 477              		.loc 1 490 0
 478 0030 002C     		cmp	r4, #0
 479 0032 EADC     		bgt	.L28
 480              	.LVL81:
 481              	.L27:
 502:main.c        ****         }
 503:main.c        ****     }
 504:main.c        ****     return chs;
 505:main.c        **** }
 482              		.loc 1 505 0
 483 0034 3046     		mov	r0, r6
 484 0036 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 485              		.cfi_endproc
 486              	.LFE66:
 487              		.size	_read, .-_read
 488              		.text
 489              	.Letext0:
 490              		.file 2 "j:\\psoc\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.1\\arm-none-eabi\\includ
 491              		.file 3 "j:\\psoc\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.1\\arm-none-eabi\\includ
 492              		.file 4 ".\\ZumoLibrary/Reflectance.h"
 493              		.file 5 ".\\ZumoLibrary/IR.h"
 494              		.file 6 ".\\ZumoLibrary/Motor.h"
 495              		.file 7 "Generated_Source\\PSoC5/UART_1.h"
 496              		.file 8 "Generated_Source\\PSoC5/sensor_isr.h"
 497              		.file 9 "Generated_Source\\PSoC5/IR_led.h"
 498              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 499              		.section	.debug_info,"",%progbits
 500              	.Ldebug_info0:
 501 0000 72040000 		.4byte	0x472
 502 0004 0400     		.2byte	0x4
 503 0006 00000000 		.4byte	.Ldebug_abbrev0
 504 000a 04       		.byte	0x4
 505 000b 01       		.uleb128 0x1
 506 000c A5000000 		.4byte	.LASF41
 507 0010 0C       		.byte	0xc
 508 0011 2A020000 		.4byte	.LASF42
 509 0015 D3010000 		.4byte	.LASF43
 510 0019 00000000 		.4byte	.Ldebug_ranges0+0
 511 001d 00000000 		.4byte	0
 512 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 19


 513 0025 02       		.uleb128 0x2
 514 0026 01       		.byte	0x1
 515 0027 06       		.byte	0x6
 516 0028 FF010000 		.4byte	.LASF0
 517 002c 02       		.uleb128 0x2
 518 002d 01       		.byte	0x1
 519 002e 08       		.byte	0x8
 520 002f 97000000 		.4byte	.LASF1
 521 0033 02       		.uleb128 0x2
 522 0034 02       		.byte	0x2
 523 0035 05       		.byte	0x5
 524 0036 4F020000 		.4byte	.LASF2
 525 003a 03       		.uleb128 0x3
 526 003b 72010000 		.4byte	.LASF4
 527 003f 02       		.byte	0x2
 528 0040 2B       		.byte	0x2b
 529 0041 45000000 		.4byte	0x45
 530 0045 02       		.uleb128 0x2
 531 0046 02       		.byte	0x2
 532 0047 07       		.byte	0x7
 533 0048 2B000000 		.4byte	.LASF3
 534 004c 03       		.uleb128 0x3
 535 004d 21000000 		.4byte	.LASF5
 536 0051 02       		.byte	0x2
 537 0052 3F       		.byte	0x3f
 538 0053 57000000 		.4byte	0x57
 539 0057 02       		.uleb128 0x2
 540 0058 04       		.byte	0x4
 541 0059 05       		.byte	0x5
 542 005a 62020000 		.4byte	.LASF6
 543 005e 02       		.uleb128 0x2
 544 005f 04       		.byte	0x4
 545 0060 07       		.byte	0x7
 546 0061 3A010000 		.4byte	.LASF7
 547 0065 02       		.uleb128 0x2
 548 0066 08       		.byte	0x8
 549 0067 05       		.byte	0x5
 550 0068 1C020000 		.4byte	.LASF8
 551 006c 02       		.uleb128 0x2
 552 006d 08       		.byte	0x8
 553 006e 07       		.byte	0x7
 554 006f B0010000 		.4byte	.LASF9
 555 0073 04       		.uleb128 0x4
 556 0074 04       		.byte	0x4
 557 0075 05       		.byte	0x5
 558 0076 696E7400 		.ascii	"int\000"
 559 007a 02       		.uleb128 0x2
 560 007b 04       		.byte	0x4
 561 007c 07       		.byte	0x7
 562 007d A3010000 		.4byte	.LASF10
 563 0081 03       		.uleb128 0x3
 564 0082 59020000 		.4byte	.LASF11
 565 0086 03       		.byte	0x3
 566 0087 24       		.byte	0x24
 567 0088 3A000000 		.4byte	0x3a
 568 008c 03       		.uleb128 0x3
 569 008d 0B020000 		.4byte	.LASF12
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 20


 570 0091 03       		.byte	0x3
 571 0092 2C       		.byte	0x2c
 572 0093 4C000000 		.4byte	0x4c
 573 0097 02       		.uleb128 0x2
 574 0098 04       		.byte	0x4
 575 0099 04       		.byte	0x4
 576 009a 79000000 		.4byte	.LASF13
 577 009e 02       		.uleb128 0x2
 578 009f 08       		.byte	0x8
 579 00a0 04       		.byte	0x4
 580 00a1 7D010000 		.4byte	.LASF14
 581 00a5 02       		.uleb128 0x2
 582 00a6 01       		.byte	0x1
 583 00a7 08       		.byte	0x8
 584 00a8 31020000 		.4byte	.LASF15
 585 00ac 02       		.uleb128 0x2
 586 00ad 08       		.byte	0x8
 587 00ae 04       		.byte	0x4
 588 00af 6B020000 		.4byte	.LASF16
 589 00b3 02       		.uleb128 0x2
 590 00b4 04       		.byte	0x4
 591 00b5 07       		.byte	0x7
 592 00b6 13020000 		.4byte	.LASF17
 593 00ba 05       		.uleb128 0x5
 594 00bb 04       		.byte	0x4
 595 00bc A5000000 		.4byte	0xa5
 596 00c0 06       		.uleb128 0x6
 597 00c1 00000000 		.4byte	.LASF44
 598 00c5 08       		.byte	0x8
 599 00c6 04       		.byte	0x4
 600 00c7 11       		.byte	0x11
 601 00c8 F9000000 		.4byte	0xf9
 602 00cc 07       		.uleb128 0x7
 603 00cd 6C3300   		.ascii	"l3\000"
 604 00d0 04       		.byte	0x4
 605 00d1 12       		.byte	0x12
 606 00d2 81000000 		.4byte	0x81
 607 00d6 00       		.byte	0
 608 00d7 07       		.uleb128 0x7
 609 00d8 6C3100   		.ascii	"l1\000"
 610 00db 04       		.byte	0x4
 611 00dc 14       		.byte	0x14
 612 00dd 81000000 		.4byte	0x81
 613 00e1 02       		.byte	0x2
 614 00e2 07       		.uleb128 0x7
 615 00e3 723100   		.ascii	"r1\000"
 616 00e6 04       		.byte	0x4
 617 00e7 15       		.byte	0x15
 618 00e8 81000000 		.4byte	0x81
 619 00ec 04       		.byte	0x4
 620 00ed 07       		.uleb128 0x7
 621 00ee 723300   		.ascii	"r3\000"
 622 00f1 04       		.byte	0x4
 623 00f2 17       		.byte	0x17
 624 00f3 81000000 		.4byte	0x81
 625 00f7 06       		.byte	0x6
 626 00f8 00       		.byte	0
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 21


 627 00f9 08       		.uleb128 0x8
 628 00fa 8F010000 		.4byte	.LASF23
 629 00fe 01       		.byte	0x1
 630 00ff EA       		.byte	0xea
 631 0100 73000000 		.4byte	0x73
 632 0104 00000000 		.4byte	.LFB64
 633 0108 E4010000 		.4byte	.LFE64-.LFB64
 634 010c 01       		.uleb128 0x1
 635 010d 9C       		.byte	0x9c
 636 010e CA020000 		.4byte	0x2ca
 637 0112 09       		.uleb128 0x9
 638 0113 72656600 		.ascii	"ref\000"
 639 0117 01       		.byte	0x1
 640 0118 EC       		.byte	0xec
 641 0119 C0000000 		.4byte	0xc0
 642 011d 02       		.uleb128 0x2
 643 011e 91       		.byte	0x91
 644 011f 58       		.sleb128 -40
 645 0120 09       		.uleb128 0x9
 646 0121 64696700 		.ascii	"dig\000"
 647 0125 01       		.byte	0x1
 648 0126 ED       		.byte	0xed
 649 0127 C0000000 		.4byte	0xc0
 650 012b 02       		.uleb128 0x2
 651 012c 91       		.byte	0x91
 652 012d 50       		.sleb128 -48
 653 012e 0A       		.uleb128 0xa
 654 012f 1C000000 		.4byte	.LBB2
 655 0133 C8010000 		.4byte	.LBE2-.LBB2
 656 0137 9F020000 		.4byte	0x29f
 657 013b 0B       		.uleb128 0xb
 658 013c 33010000 		.4byte	.LASF18
 659 0140 01       		.byte	0x1
 660 0141 FC       		.byte	0xfc
 661 0142 73000000 		.4byte	0x73
 662 0146 00000000 		.4byte	.LLST0
 663 014a 0B       		.uleb128 0xb
 664 014b 64000000 		.4byte	.LASF19
 665 014f 01       		.byte	0x1
 666 0150 FD       		.byte	0xfd
 667 0151 73000000 		.4byte	0x73
 668 0155 1E000000 		.4byte	.LLST1
 669 0159 0B       		.uleb128 0xb
 670 015a 82020000 		.4byte	.LASF20
 671 015e 01       		.byte	0x1
 672 015f FE       		.byte	0xfe
 673 0160 73000000 		.4byte	0x73
 674 0164 49000000 		.4byte	.LLST2
 675 0168 0B       		.uleb128 0xb
 676 0169 36020000 		.4byte	.LASF21
 677 016d 01       		.byte	0x1
 678 016e FF       		.byte	0xff
 679 016f 73000000 		.4byte	0x73
 680 0173 68000000 		.4byte	.LLST3
 681 0177 0C       		.uleb128 0xc
 682 0178 59010000 		.4byte	.LASF22
 683 017c 01       		.byte	0x1
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 22


 684 017d 0001     		.2byte	0x100
 685 017f 97000000 		.4byte	0x97
 686 0183 B3000000 		.4byte	.LLST4
 687 0187 0D       		.uleb128 0xd
 688 0188 20000000 		.4byte	.LVL4
 689 018c E6030000 		.4byte	0x3e6
 690 0190 0D       		.uleb128 0xd
 691 0191 28000000 		.4byte	.LVL5
 692 0195 F1030000 		.4byte	0x3f1
 693 0199 0E       		.uleb128 0xe
 694 019a 3A000000 		.4byte	.LVL7
 695 019e FC030000 		.4byte	0x3fc
 696 01a2 AD010000 		.4byte	0x1ad
 697 01a6 0F       		.uleb128 0xf
 698 01a7 01       		.uleb128 0x1
 699 01a8 50       		.byte	0x50
 700 01a9 02       		.uleb128 0x2
 701 01aa 91       		.byte	0x91
 702 01ab 58       		.sleb128 -40
 703 01ac 00       		.byte	0
 704 01ad 0E       		.uleb128 0xe
 705 01ae 40000000 		.4byte	.LVL8
 706 01b2 07040000 		.4byte	0x407
 707 01b6 C1010000 		.4byte	0x1c1
 708 01ba 0F       		.uleb128 0xf
 709 01bb 01       		.uleb128 0x1
 710 01bc 50       		.byte	0x50
 711 01bd 02       		.uleb128 0x2
 712 01be 7D       		.byte	0x7d
 713 01bf 00       		.sleb128 0
 714 01c0 00       		.byte	0
 715 01c1 0D       		.uleb128 0xd
 716 01c2 6A000000 		.4byte	.LVL10
 717 01c6 12040000 		.4byte	0x412
 718 01ca 0D       		.uleb128 0xd
 719 01cb 6E000000 		.4byte	.LVL11
 720 01cf E6030000 		.4byte	0x3e6
 721 01d3 0D       		.uleb128 0xd
 722 01d4 76000000 		.4byte	.LVL12
 723 01d8 F1030000 		.4byte	0x3f1
 724 01dc 0E       		.uleb128 0xe
 725 01dd 7E000000 		.4byte	.LVL13
 726 01e1 1D040000 		.4byte	0x41d
 727 01e5 F6010000 		.4byte	0x1f6
 728 01e9 0F       		.uleb128 0xf
 729 01ea 01       		.uleb128 0x1
 730 01eb 50       		.byte	0x50
 731 01ec 02       		.uleb128 0x2
 732 01ed 08       		.byte	0x8
 733 01ee 64       		.byte	0x64
 734 01ef 0F       		.uleb128 0xf
 735 01f0 01       		.uleb128 0x1
 736 01f1 51       		.byte	0x51
 737 01f2 02       		.uleb128 0x2
 738 01f3 08       		.byte	0x8
 739 01f4 64       		.byte	0x64
 740 01f5 00       		.byte	0
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 23


 741 01f6 0E       		.uleb128 0xe
 742 01f7 D6000000 		.4byte	.LVL26
 743 01fb 1D040000 		.4byte	0x41d
 744 01ff 0A020000 		.4byte	0x20a
 745 0203 0F       		.uleb128 0xf
 746 0204 01       		.uleb128 0x1
 747 0205 51       		.byte	0x51
 748 0206 02       		.uleb128 0x2
 749 0207 08       		.byte	0x8
 750 0208 32       		.byte	0x32
 751 0209 00       		.byte	0
 752 020a 0E       		.uleb128 0xe
 753 020b EA000000 		.4byte	.LVL29
 754 020f 1D040000 		.4byte	0x41d
 755 0213 22020000 		.4byte	0x222
 756 0217 0F       		.uleb128 0xf
 757 0218 01       		.uleb128 0x1
 758 0219 50       		.byte	0x50
 759 021a 01       		.uleb128 0x1
 760 021b 31       		.byte	0x31
 761 021c 0F       		.uleb128 0xf
 762 021d 01       		.uleb128 0x1
 763 021e 51       		.byte	0x51
 764 021f 01       		.uleb128 0x1
 765 0220 31       		.byte	0x31
 766 0221 00       		.byte	0
 767 0222 0E       		.uleb128 0xe
 768 0223 18010000 		.4byte	.LVL35
 769 0227 28040000 		.4byte	0x428
 770 022b 3C020000 		.4byte	0x23c
 771 022f 0F       		.uleb128 0xf
 772 0230 01       		.uleb128 0x1
 773 0231 51       		.byte	0x51
 774 0232 02       		.uleb128 0x2
 775 0233 76       		.byte	0x76
 776 0234 00       		.sleb128 0
 777 0235 0F       		.uleb128 0xf
 778 0236 01       		.uleb128 0x1
 779 0237 52       		.byte	0x52
 780 0238 02       		.uleb128 0x2
 781 0239 08       		.byte	0x8
 782 023a 23       		.byte	0x23
 783 023b 00       		.byte	0
 784 023c 0E       		.uleb128 0xe
 785 023d 42010000 		.4byte	.LVL42
 786 0241 28040000 		.4byte	0x428
 787 0245 56020000 		.4byte	0x256
 788 0249 0F       		.uleb128 0xf
 789 024a 01       		.uleb128 0x1
 790 024b 51       		.byte	0x51
 791 024c 02       		.uleb128 0x2
 792 024d 76       		.byte	0x76
 793 024e 00       		.sleb128 0
 794 024f 0F       		.uleb128 0xf
 795 0250 01       		.uleb128 0x1
 796 0251 52       		.byte	0x52
 797 0252 02       		.uleb128 0x2
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 24


 798 0253 08       		.byte	0x8
 799 0254 23       		.byte	0x23
 800 0255 00       		.byte	0
 801 0256 0E       		.uleb128 0xe
 802 0257 56010000 		.4byte	.LVL45
 803 025b 1D040000 		.4byte	0x41d
 804 025f 6E020000 		.4byte	0x26e
 805 0263 0F       		.uleb128 0xf
 806 0264 01       		.uleb128 0x1
 807 0265 50       		.byte	0x50
 808 0266 01       		.uleb128 0x1
 809 0267 31       		.byte	0x31
 810 0268 0F       		.uleb128 0xf
 811 0269 01       		.uleb128 0x1
 812 026a 51       		.byte	0x51
 813 026b 01       		.uleb128 0x1
 814 026c 31       		.byte	0x31
 815 026d 00       		.byte	0
 816 026e 0E       		.uleb128 0xe
 817 026f 84010000 		.4byte	.LVL51
 818 0273 28040000 		.4byte	0x428
 819 0277 88020000 		.4byte	0x288
 820 027b 0F       		.uleb128 0xf
 821 027c 01       		.uleb128 0x1
 822 027d 51       		.byte	0x51
 823 027e 02       		.uleb128 0x2
 824 027f 76       		.byte	0x76
 825 0280 00       		.sleb128 0
 826 0281 0F       		.uleb128 0xf
 827 0282 01       		.uleb128 0x1
 828 0283 52       		.byte	0x52
 829 0284 02       		.uleb128 0x2
 830 0285 08       		.byte	0x8
 831 0286 23       		.byte	0x23
 832 0287 00       		.byte	0
 833 0288 10       		.uleb128 0x10
 834 0289 AE010000 		.4byte	.LVL58
 835 028d 28040000 		.4byte	0x428
 836 0291 0F       		.uleb128 0xf
 837 0292 01       		.uleb128 0x1
 838 0293 51       		.byte	0x51
 839 0294 02       		.uleb128 0x2
 840 0295 76       		.byte	0x76
 841 0296 00       		.sleb128 0
 842 0297 0F       		.uleb128 0xf
 843 0298 01       		.uleb128 0x1
 844 0299 52       		.byte	0x52
 845 029a 02       		.uleb128 0x2
 846 029b 08       		.byte	0x8
 847 029c 23       		.byte	0x23
 848 029d 00       		.byte	0
 849 029e 00       		.byte	0
 850 029f 0D       		.uleb128 0xd
 851 02a0 0C000000 		.4byte	.LVL0
 852 02a4 33040000 		.4byte	0x433
 853 02a8 0D       		.uleb128 0xd
 854 02a9 12000000 		.4byte	.LVL1
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 25


 855 02ad 3E040000 		.4byte	0x43e
 856 02b1 0D       		.uleb128 0xd
 857 02b2 16000000 		.4byte	.LVL2
 858 02b6 49040000 		.4byte	0x449
 859 02ba 10       		.uleb128 0x10
 860 02bb 1C000000 		.4byte	.LVL3
 861 02bf 54040000 		.4byte	0x454
 862 02c3 0F       		.uleb128 0xf
 863 02c4 01       		.uleb128 0x1
 864 02c5 50       		.byte	0x50
 865 02c6 01       		.uleb128 0x1
 866 02c7 31       		.byte	0x31
 867 02c8 00       		.byte	0
 868 02c9 00       		.byte	0
 869 02ca 11       		.uleb128 0x11
 870 02cb 42020000 		.4byte	.LASF24
 871 02cf 01       		.byte	0x1
 872 02d0 D901     		.2byte	0x1d9
 873 02d2 73000000 		.4byte	0x73
 874 02d6 00000000 		.4byte	.LFB65
 875 02da 2A000000 		.4byte	.LFE65-.LFB65
 876 02de 01       		.uleb128 0x1
 877 02df 9C       		.byte	0x9c
 878 02e0 3F030000 		.4byte	0x33f
 879 02e4 12       		.uleb128 0x12
 880 02e5 7F000000 		.4byte	.LASF25
 881 02e9 01       		.byte	0x1
 882 02ea D901     		.2byte	0x1d9
 883 02ec 73000000 		.4byte	0x73
 884 02f0 2E010000 		.4byte	.LLST5
 885 02f4 13       		.uleb128 0x13
 886 02f5 70747200 		.ascii	"ptr\000"
 887 02f9 01       		.byte	0x1
 888 02fa D901     		.2byte	0x1d9
 889 02fc BA000000 		.4byte	0xba
 890 0300 4F010000 		.4byte	.LLST6
 891 0304 13       		.uleb128 0x13
 892 0305 6C656E00 		.ascii	"len\000"
 893 0309 01       		.byte	0x1
 894 030a D901     		.2byte	0x1d9
 895 030c 73000000 		.4byte	0x73
 896 0310 83010000 		.4byte	.LLST7
 897 0314 14       		.uleb128 0x14
 898 0315 6E00     		.ascii	"n\000"
 899 0317 01       		.byte	0x1
 900 0318 DC01     		.2byte	0x1dc
 901 031a 73000000 		.4byte	0x73
 902 031e A1010000 		.4byte	.LLST8
 903 0322 0E       		.uleb128 0xe
 904 0323 16000000 		.4byte	.LVL64
 905 0327 5F040000 		.4byte	0x45f
 906 032b 35030000 		.4byte	0x335
 907 032f 0F       		.uleb128 0xf
 908 0330 01       		.uleb128 0x1
 909 0331 50       		.byte	0x50
 910 0332 01       		.uleb128 0x1
 911 0333 3D       		.byte	0x3d
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 26


 912 0334 00       		.byte	0
 913 0335 0D       		.uleb128 0xd
 914 0336 1E000000 		.4byte	.LVL66
 915 033a 5F040000 		.4byte	0x45f
 916 033e 00       		.byte	0
 917 033f 11       		.uleb128 0x11
 918 0340 73000000 		.4byte	.LASF26
 919 0344 01       		.byte	0x1
 920 0345 E401     		.2byte	0x1e4
 921 0347 73000000 		.4byte	0x73
 922 034b 00000000 		.4byte	.LFB66
 923 034f 38000000 		.4byte	.LFE66-.LFB66
 924 0353 01       		.uleb128 0x1
 925 0354 9C       		.byte	0x9c
 926 0355 D5030000 		.4byte	0x3d5
 927 0359 12       		.uleb128 0x12
 928 035a 7F000000 		.4byte	.LASF25
 929 035e 01       		.byte	0x1
 930 035f E401     		.2byte	0x1e4
 931 0361 73000000 		.4byte	0x73
 932 0365 C0010000 		.4byte	.LLST9
 933 0369 13       		.uleb128 0x13
 934 036a 70747200 		.ascii	"ptr\000"
 935 036e 01       		.byte	0x1
 936 036f E401     		.2byte	0x1e4
 937 0371 BA000000 		.4byte	0xba
 938 0375 E1010000 		.4byte	.LLST10
 939 0379 12       		.uleb128 0x12
 940 037a 49020000 		.4byte	.LASF27
 941 037e 01       		.byte	0x1
 942 037f E401     		.2byte	0x1e4
 943 0381 73000000 		.4byte	0x73
 944 0385 15020000 		.4byte	.LLST11
 945 0389 14       		.uleb128 0x14
 946 038a 63687300 		.ascii	"chs\000"
 947 038e 01       		.byte	0x1
 948 038f E601     		.2byte	0x1e6
 949 0391 73000000 		.4byte	0x73
 950 0395 33020000 		.4byte	.LLST12
 951 0399 14       		.uleb128 0x14
 952 039a 636800   		.ascii	"ch\000"
 953 039d 01       		.byte	0x1
 954 039e E701     		.2byte	0x1e7
 955 03a0 A5000000 		.4byte	0xa5
 956 03a4 52020000 		.4byte	.LLST13
 957 03a8 0D       		.uleb128 0xd
 958 03a9 0E000000 		.4byte	.LVL72
 959 03ad 6A040000 		.4byte	0x46a
 960 03b1 0E       		.uleb128 0xe
 961 03b2 16000000 		.4byte	.LVL73
 962 03b6 5F040000 		.4byte	0x45f
 963 03ba C5030000 		.4byte	0x3c5
 964 03be 0F       		.uleb128 0xf
 965 03bf 01       		.uleb128 0x1
 966 03c0 50       		.byte	0x50
 967 03c1 02       		.uleb128 0x2
 968 03c2 75       		.byte	0x75
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 27


 969 03c3 00       		.sleb128 0
 970 03c4 00       		.byte	0
 971 03c5 10       		.uleb128 0x10
 972 03c6 22000000 		.4byte	.LVL76
 973 03ca 5F040000 		.4byte	0x45f
 974 03ce 0F       		.uleb128 0xf
 975 03cf 01       		.uleb128 0x1
 976 03d0 50       		.byte	0x50
 977 03d1 01       		.uleb128 0x1
 978 03d2 3A       		.byte	0x3a
 979 03d3 00       		.byte	0
 980 03d4 00       		.byte	0
 981 03d5 15       		.uleb128 0x15
 982 03d6 4C010000 		.4byte	.LASF45
 983 03da 0A       		.byte	0xa
 984 03db 1207     		.2byte	0x712
 985 03dd E1030000 		.4byte	0x3e1
 986 03e1 16       		.uleb128 0x16
 987 03e2 8C000000 		.4byte	0x8c
 988 03e6 17       		.uleb128 0x17
 989 03e7 1A000000 		.4byte	.LASF28
 990 03eb 1A000000 		.4byte	.LASF28
 991 03ef 05       		.byte	0x5
 992 03f0 10       		.byte	0x10
 993 03f1 17       		.uleb128 0x17
 994 03f2 C7010000 		.4byte	.LASF29
 995 03f6 C7010000 		.4byte	.LASF29
 996 03fa 06       		.byte	0x6
 997 03fb 0B       		.byte	0xb
 998 03fc 17       		.uleb128 0x17
 999 03fd 09000000 		.4byte	.LASF30
 1000 0401 09000000 		.4byte	.LASF30
 1001 0405 04       		.byte	0x4
 1002 0406 1B       		.byte	0x1b
 1003 0407 17       		.uleb128 0x17
 1004 0408 3E000000 		.4byte	.LASF31
 1005 040c 3E000000 		.4byte	.LASF31
 1006 0410 04       		.byte	0x4
 1007 0411 1C       		.byte	0x1c
 1008 0412 17       		.uleb128 0x17
 1009 0413 84010000 		.4byte	.LASF32
 1010 0417 84010000 		.4byte	.LASF32
 1011 041b 06       		.byte	0x6
 1012 041c 0C       		.byte	0xc
 1013 041d 17       		.uleb128 0x17
 1014 041e 8E020000 		.4byte	.LASF33
 1015 0422 8E020000 		.4byte	.LASF33
 1016 0426 06       		.byte	0x6
 1017 0427 0F       		.byte	0xf
 1018 0428 17       		.uleb128 0x17
 1019 0429 77020000 		.4byte	.LASF34
 1020 042d 77020000 		.4byte	.LASF34
 1021 0431 06       		.byte	0x6
 1022 0432 12       		.byte	0x12
 1023 0433 17       		.uleb128 0x17
 1024 0434 AB020000 		.4byte	.LASF35
 1025 0438 AB020000 		.4byte	.LASF35
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 28


 1026 043c 07       		.byte	0x7
 1027 043d 54       		.byte	0x54
 1028 043e 17       		.uleb128 0x17
 1029 043f 84000000 		.4byte	.LASF36
 1030 0443 84000000 		.4byte	.LASF36
 1031 0447 08       		.byte	0x8
 1032 0448 18       		.byte	0x18
 1033 0449 17       		.uleb128 0x17
 1034 044a 52000000 		.4byte	.LASF37
 1035 044e 52000000 		.4byte	.LASF37
 1036 0452 04       		.byte	0x4
 1037 0453 1A       		.byte	0x1a
 1038 0454 17       		.uleb128 0x17
 1039 0455 65010000 		.4byte	.LASF38
 1040 0459 65010000 		.4byte	.LASF38
 1041 045d 09       		.byte	0x9
 1042 045e 26       		.byte	0x26
 1043 045f 17       		.uleb128 0x17
 1044 0460 94010000 		.4byte	.LASF39
 1045 0464 94010000 		.4byte	.LASF39
 1046 0468 07       		.byte	0x7
 1047 0469 8A       		.byte	0x8a
 1048 046a 17       		.uleb128 0x17
 1049 046b 9C020000 		.4byte	.LASF40
 1050 046f 9C020000 		.4byte	.LASF40
 1051 0473 07       		.byte	0x7
 1052 0474 71       		.byte	0x71
 1053 0475 00       		.byte	0
 1054              		.section	.debug_abbrev,"",%progbits
 1055              	.Ldebug_abbrev0:
 1056 0000 01       		.uleb128 0x1
 1057 0001 11       		.uleb128 0x11
 1058 0002 01       		.byte	0x1
 1059 0003 25       		.uleb128 0x25
 1060 0004 0E       		.uleb128 0xe
 1061 0005 13       		.uleb128 0x13
 1062 0006 0B       		.uleb128 0xb
 1063 0007 03       		.uleb128 0x3
 1064 0008 0E       		.uleb128 0xe
 1065 0009 1B       		.uleb128 0x1b
 1066 000a 0E       		.uleb128 0xe
 1067 000b 55       		.uleb128 0x55
 1068 000c 17       		.uleb128 0x17
 1069 000d 11       		.uleb128 0x11
 1070 000e 01       		.uleb128 0x1
 1071 000f 10       		.uleb128 0x10
 1072 0010 17       		.uleb128 0x17
 1073 0011 00       		.byte	0
 1074 0012 00       		.byte	0
 1075 0013 02       		.uleb128 0x2
 1076 0014 24       		.uleb128 0x24
 1077 0015 00       		.byte	0
 1078 0016 0B       		.uleb128 0xb
 1079 0017 0B       		.uleb128 0xb
 1080 0018 3E       		.uleb128 0x3e
 1081 0019 0B       		.uleb128 0xb
 1082 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 29


 1083 001b 0E       		.uleb128 0xe
 1084 001c 00       		.byte	0
 1085 001d 00       		.byte	0
 1086 001e 03       		.uleb128 0x3
 1087 001f 16       		.uleb128 0x16
 1088 0020 00       		.byte	0
 1089 0021 03       		.uleb128 0x3
 1090 0022 0E       		.uleb128 0xe
 1091 0023 3A       		.uleb128 0x3a
 1092 0024 0B       		.uleb128 0xb
 1093 0025 3B       		.uleb128 0x3b
 1094 0026 0B       		.uleb128 0xb
 1095 0027 49       		.uleb128 0x49
 1096 0028 13       		.uleb128 0x13
 1097 0029 00       		.byte	0
 1098 002a 00       		.byte	0
 1099 002b 04       		.uleb128 0x4
 1100 002c 24       		.uleb128 0x24
 1101 002d 00       		.byte	0
 1102 002e 0B       		.uleb128 0xb
 1103 002f 0B       		.uleb128 0xb
 1104 0030 3E       		.uleb128 0x3e
 1105 0031 0B       		.uleb128 0xb
 1106 0032 03       		.uleb128 0x3
 1107 0033 08       		.uleb128 0x8
 1108 0034 00       		.byte	0
 1109 0035 00       		.byte	0
 1110 0036 05       		.uleb128 0x5
 1111 0037 0F       		.uleb128 0xf
 1112 0038 00       		.byte	0
 1113 0039 0B       		.uleb128 0xb
 1114 003a 0B       		.uleb128 0xb
 1115 003b 49       		.uleb128 0x49
 1116 003c 13       		.uleb128 0x13
 1117 003d 00       		.byte	0
 1118 003e 00       		.byte	0
 1119 003f 06       		.uleb128 0x6
 1120 0040 13       		.uleb128 0x13
 1121 0041 01       		.byte	0x1
 1122 0042 03       		.uleb128 0x3
 1123 0043 0E       		.uleb128 0xe
 1124 0044 0B       		.uleb128 0xb
 1125 0045 0B       		.uleb128 0xb
 1126 0046 3A       		.uleb128 0x3a
 1127 0047 0B       		.uleb128 0xb
 1128 0048 3B       		.uleb128 0x3b
 1129 0049 0B       		.uleb128 0xb
 1130 004a 01       		.uleb128 0x1
 1131 004b 13       		.uleb128 0x13
 1132 004c 00       		.byte	0
 1133 004d 00       		.byte	0
 1134 004e 07       		.uleb128 0x7
 1135 004f 0D       		.uleb128 0xd
 1136 0050 00       		.byte	0
 1137 0051 03       		.uleb128 0x3
 1138 0052 08       		.uleb128 0x8
 1139 0053 3A       		.uleb128 0x3a
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 30


 1140 0054 0B       		.uleb128 0xb
 1141 0055 3B       		.uleb128 0x3b
 1142 0056 0B       		.uleb128 0xb
 1143 0057 49       		.uleb128 0x49
 1144 0058 13       		.uleb128 0x13
 1145 0059 38       		.uleb128 0x38
 1146 005a 0B       		.uleb128 0xb
 1147 005b 00       		.byte	0
 1148 005c 00       		.byte	0
 1149 005d 08       		.uleb128 0x8
 1150 005e 2E       		.uleb128 0x2e
 1151 005f 01       		.byte	0x1
 1152 0060 3F       		.uleb128 0x3f
 1153 0061 19       		.uleb128 0x19
 1154 0062 03       		.uleb128 0x3
 1155 0063 0E       		.uleb128 0xe
 1156 0064 3A       		.uleb128 0x3a
 1157 0065 0B       		.uleb128 0xb
 1158 0066 3B       		.uleb128 0x3b
 1159 0067 0B       		.uleb128 0xb
 1160 0068 49       		.uleb128 0x49
 1161 0069 13       		.uleb128 0x13
 1162 006a 8701     		.uleb128 0x87
 1163 006c 19       		.uleb128 0x19
 1164 006d 11       		.uleb128 0x11
 1165 006e 01       		.uleb128 0x1
 1166 006f 12       		.uleb128 0x12
 1167 0070 06       		.uleb128 0x6
 1168 0071 40       		.uleb128 0x40
 1169 0072 18       		.uleb128 0x18
 1170 0073 9642     		.uleb128 0x2116
 1171 0075 19       		.uleb128 0x19
 1172 0076 01       		.uleb128 0x1
 1173 0077 13       		.uleb128 0x13
 1174 0078 00       		.byte	0
 1175 0079 00       		.byte	0
 1176 007a 09       		.uleb128 0x9
 1177 007b 34       		.uleb128 0x34
 1178 007c 00       		.byte	0
 1179 007d 03       		.uleb128 0x3
 1180 007e 08       		.uleb128 0x8
 1181 007f 3A       		.uleb128 0x3a
 1182 0080 0B       		.uleb128 0xb
 1183 0081 3B       		.uleb128 0x3b
 1184 0082 0B       		.uleb128 0xb
 1185 0083 49       		.uleb128 0x49
 1186 0084 13       		.uleb128 0x13
 1187 0085 02       		.uleb128 0x2
 1188 0086 18       		.uleb128 0x18
 1189 0087 00       		.byte	0
 1190 0088 00       		.byte	0
 1191 0089 0A       		.uleb128 0xa
 1192 008a 0B       		.uleb128 0xb
 1193 008b 01       		.byte	0x1
 1194 008c 11       		.uleb128 0x11
 1195 008d 01       		.uleb128 0x1
 1196 008e 12       		.uleb128 0x12
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 31


 1197 008f 06       		.uleb128 0x6
 1198 0090 01       		.uleb128 0x1
 1199 0091 13       		.uleb128 0x13
 1200 0092 00       		.byte	0
 1201 0093 00       		.byte	0
 1202 0094 0B       		.uleb128 0xb
 1203 0095 34       		.uleb128 0x34
 1204 0096 00       		.byte	0
 1205 0097 03       		.uleb128 0x3
 1206 0098 0E       		.uleb128 0xe
 1207 0099 3A       		.uleb128 0x3a
 1208 009a 0B       		.uleb128 0xb
 1209 009b 3B       		.uleb128 0x3b
 1210 009c 0B       		.uleb128 0xb
 1211 009d 49       		.uleb128 0x49
 1212 009e 13       		.uleb128 0x13
 1213 009f 02       		.uleb128 0x2
 1214 00a0 17       		.uleb128 0x17
 1215 00a1 00       		.byte	0
 1216 00a2 00       		.byte	0
 1217 00a3 0C       		.uleb128 0xc
 1218 00a4 34       		.uleb128 0x34
 1219 00a5 00       		.byte	0
 1220 00a6 03       		.uleb128 0x3
 1221 00a7 0E       		.uleb128 0xe
 1222 00a8 3A       		.uleb128 0x3a
 1223 00a9 0B       		.uleb128 0xb
 1224 00aa 3B       		.uleb128 0x3b
 1225 00ab 05       		.uleb128 0x5
 1226 00ac 49       		.uleb128 0x49
 1227 00ad 13       		.uleb128 0x13
 1228 00ae 02       		.uleb128 0x2
 1229 00af 17       		.uleb128 0x17
 1230 00b0 00       		.byte	0
 1231 00b1 00       		.byte	0
 1232 00b2 0D       		.uleb128 0xd
 1233 00b3 898201   		.uleb128 0x4109
 1234 00b6 00       		.byte	0
 1235 00b7 11       		.uleb128 0x11
 1236 00b8 01       		.uleb128 0x1
 1237 00b9 31       		.uleb128 0x31
 1238 00ba 13       		.uleb128 0x13
 1239 00bb 00       		.byte	0
 1240 00bc 00       		.byte	0
 1241 00bd 0E       		.uleb128 0xe
 1242 00be 898201   		.uleb128 0x4109
 1243 00c1 01       		.byte	0x1
 1244 00c2 11       		.uleb128 0x11
 1245 00c3 01       		.uleb128 0x1
 1246 00c4 31       		.uleb128 0x31
 1247 00c5 13       		.uleb128 0x13
 1248 00c6 01       		.uleb128 0x1
 1249 00c7 13       		.uleb128 0x13
 1250 00c8 00       		.byte	0
 1251 00c9 00       		.byte	0
 1252 00ca 0F       		.uleb128 0xf
 1253 00cb 8A8201   		.uleb128 0x410a
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 32


 1254 00ce 00       		.byte	0
 1255 00cf 02       		.uleb128 0x2
 1256 00d0 18       		.uleb128 0x18
 1257 00d1 9142     		.uleb128 0x2111
 1258 00d3 18       		.uleb128 0x18
 1259 00d4 00       		.byte	0
 1260 00d5 00       		.byte	0
 1261 00d6 10       		.uleb128 0x10
 1262 00d7 898201   		.uleb128 0x4109
 1263 00da 01       		.byte	0x1
 1264 00db 11       		.uleb128 0x11
 1265 00dc 01       		.uleb128 0x1
 1266 00dd 31       		.uleb128 0x31
 1267 00de 13       		.uleb128 0x13
 1268 00df 00       		.byte	0
 1269 00e0 00       		.byte	0
 1270 00e1 11       		.uleb128 0x11
 1271 00e2 2E       		.uleb128 0x2e
 1272 00e3 01       		.byte	0x1
 1273 00e4 3F       		.uleb128 0x3f
 1274 00e5 19       		.uleb128 0x19
 1275 00e6 03       		.uleb128 0x3
 1276 00e7 0E       		.uleb128 0xe
 1277 00e8 3A       		.uleb128 0x3a
 1278 00e9 0B       		.uleb128 0xb
 1279 00ea 3B       		.uleb128 0x3b
 1280 00eb 05       		.uleb128 0x5
 1281 00ec 27       		.uleb128 0x27
 1282 00ed 19       		.uleb128 0x19
 1283 00ee 49       		.uleb128 0x49
 1284 00ef 13       		.uleb128 0x13
 1285 00f0 11       		.uleb128 0x11
 1286 00f1 01       		.uleb128 0x1
 1287 00f2 12       		.uleb128 0x12
 1288 00f3 06       		.uleb128 0x6
 1289 00f4 40       		.uleb128 0x40
 1290 00f5 18       		.uleb128 0x18
 1291 00f6 9742     		.uleb128 0x2117
 1292 00f8 19       		.uleb128 0x19
 1293 00f9 01       		.uleb128 0x1
 1294 00fa 13       		.uleb128 0x13
 1295 00fb 00       		.byte	0
 1296 00fc 00       		.byte	0
 1297 00fd 12       		.uleb128 0x12
 1298 00fe 05       		.uleb128 0x5
 1299 00ff 00       		.byte	0
 1300 0100 03       		.uleb128 0x3
 1301 0101 0E       		.uleb128 0xe
 1302 0102 3A       		.uleb128 0x3a
 1303 0103 0B       		.uleb128 0xb
 1304 0104 3B       		.uleb128 0x3b
 1305 0105 05       		.uleb128 0x5
 1306 0106 49       		.uleb128 0x49
 1307 0107 13       		.uleb128 0x13
 1308 0108 02       		.uleb128 0x2
 1309 0109 17       		.uleb128 0x17
 1310 010a 00       		.byte	0
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 33


 1311 010b 00       		.byte	0
 1312 010c 13       		.uleb128 0x13
 1313 010d 05       		.uleb128 0x5
 1314 010e 00       		.byte	0
 1315 010f 03       		.uleb128 0x3
 1316 0110 08       		.uleb128 0x8
 1317 0111 3A       		.uleb128 0x3a
 1318 0112 0B       		.uleb128 0xb
 1319 0113 3B       		.uleb128 0x3b
 1320 0114 05       		.uleb128 0x5
 1321 0115 49       		.uleb128 0x49
 1322 0116 13       		.uleb128 0x13
 1323 0117 02       		.uleb128 0x2
 1324 0118 17       		.uleb128 0x17
 1325 0119 00       		.byte	0
 1326 011a 00       		.byte	0
 1327 011b 14       		.uleb128 0x14
 1328 011c 34       		.uleb128 0x34
 1329 011d 00       		.byte	0
 1330 011e 03       		.uleb128 0x3
 1331 011f 08       		.uleb128 0x8
 1332 0120 3A       		.uleb128 0x3a
 1333 0121 0B       		.uleb128 0xb
 1334 0122 3B       		.uleb128 0x3b
 1335 0123 05       		.uleb128 0x5
 1336 0124 49       		.uleb128 0x49
 1337 0125 13       		.uleb128 0x13
 1338 0126 02       		.uleb128 0x2
 1339 0127 17       		.uleb128 0x17
 1340 0128 00       		.byte	0
 1341 0129 00       		.byte	0
 1342 012a 15       		.uleb128 0x15
 1343 012b 34       		.uleb128 0x34
 1344 012c 00       		.byte	0
 1345 012d 03       		.uleb128 0x3
 1346 012e 0E       		.uleb128 0xe
 1347 012f 3A       		.uleb128 0x3a
 1348 0130 0B       		.uleb128 0xb
 1349 0131 3B       		.uleb128 0x3b
 1350 0132 05       		.uleb128 0x5
 1351 0133 49       		.uleb128 0x49
 1352 0134 13       		.uleb128 0x13
 1353 0135 3F       		.uleb128 0x3f
 1354 0136 19       		.uleb128 0x19
 1355 0137 3C       		.uleb128 0x3c
 1356 0138 19       		.uleb128 0x19
 1357 0139 00       		.byte	0
 1358 013a 00       		.byte	0
 1359 013b 16       		.uleb128 0x16
 1360 013c 35       		.uleb128 0x35
 1361 013d 00       		.byte	0
 1362 013e 49       		.uleb128 0x49
 1363 013f 13       		.uleb128 0x13
 1364 0140 00       		.byte	0
 1365 0141 00       		.byte	0
 1366 0142 17       		.uleb128 0x17
 1367 0143 2E       		.uleb128 0x2e
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 34


 1368 0144 00       		.byte	0
 1369 0145 3F       		.uleb128 0x3f
 1370 0146 19       		.uleb128 0x19
 1371 0147 3C       		.uleb128 0x3c
 1372 0148 19       		.uleb128 0x19
 1373 0149 6E       		.uleb128 0x6e
 1374 014a 0E       		.uleb128 0xe
 1375 014b 03       		.uleb128 0x3
 1376 014c 0E       		.uleb128 0xe
 1377 014d 3A       		.uleb128 0x3a
 1378 014e 0B       		.uleb128 0xb
 1379 014f 3B       		.uleb128 0x3b
 1380 0150 0B       		.uleb128 0xb
 1381 0151 00       		.byte	0
 1382 0152 00       		.byte	0
 1383 0153 00       		.byte	0
 1384              		.section	.debug_loc,"",%progbits
 1385              	.Ldebug_loc0:
 1386              	.LLST0:
 1387 0000 20000000 		.4byte	.LVL4
 1388 0004 27000000 		.4byte	.LVL5-1
 1389 0008 0100     		.2byte	0x1
 1390 000a 50       		.byte	0x50
 1391 000b 6E000000 		.4byte	.LVL11
 1392 000f 75000000 		.4byte	.LVL12-1
 1393 0013 0100     		.2byte	0x1
 1394 0015 50       		.byte	0x50
 1395 0016 00000000 		.4byte	0
 1396 001a 00000000 		.4byte	0
 1397              	.LLST1:
 1398 001e 1C000000 		.4byte	.LVL3
 1399 0022 34000000 		.4byte	.LVL6
 1400 0026 0300     		.2byte	0x3
 1401 0028 09       		.byte	0x9
 1402 0029 FF       		.byte	0xff
 1403 002a 9F       		.byte	0x9f
 1404 002b 34000000 		.4byte	.LVL6
 1405 002f 86000000 		.4byte	.LVL14
 1406 0033 0100     		.2byte	0x1
 1407 0035 57       		.byte	0x57
 1408 0036 C4010000 		.4byte	.LVL59
 1409 003a E4010000 		.4byte	.LFE64
 1410 003e 0100     		.2byte	0x1
 1411 0040 57       		.byte	0x57
 1412 0041 00000000 		.4byte	0
 1413 0045 00000000 		.4byte	0
 1414              	.LLST2:
 1415 0049 1C000000 		.4byte	.LVL3
 1416 004d 34000000 		.4byte	.LVL6
 1417 0051 0200     		.2byte	0x2
 1418 0053 30       		.byte	0x30
 1419 0054 9F       		.byte	0x9f
 1420 0055 34000000 		.4byte	.LVL6
 1421 0059 E4010000 		.4byte	.LFE64
 1422 005d 0100     		.2byte	0x1
 1423 005f 55       		.byte	0x55
 1424 0060 00000000 		.4byte	0
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 35


 1425 0064 00000000 		.4byte	0
 1426              	.LLST3:
 1427 0068 1C000000 		.4byte	.LVL3
 1428 006c 34000000 		.4byte	.LVL6
 1429 0070 0200     		.2byte	0x2
 1430 0072 30       		.byte	0x30
 1431 0073 9F       		.byte	0x9f
 1432 0074 34000000 		.4byte	.LVL6
 1433 0078 08010000 		.4byte	.LVL33
 1434 007c 0100     		.2byte	0x1
 1435 007e 56       		.byte	0x56
 1436 007f 1A010000 		.4byte	.LVL36
 1437 0083 32010000 		.4byte	.LVL40
 1438 0087 0100     		.2byte	0x1
 1439 0089 56       		.byte	0x56
 1440 008a 44010000 		.4byte	.LVL43
 1441 008e 74010000 		.4byte	.LVL49
 1442 0092 0100     		.2byte	0x1
 1443 0094 56       		.byte	0x56
 1444 0095 86010000 		.4byte	.LVL52
 1445 0099 9E010000 		.4byte	.LVL56
 1446 009d 0100     		.2byte	0x1
 1447 009f 56       		.byte	0x56
 1448 00a0 C6010000 		.4byte	.LVL60
 1449 00a4 E4010000 		.4byte	.LFE64
 1450 00a8 0100     		.2byte	0x1
 1451 00aa 56       		.byte	0x56
 1452 00ab 00000000 		.4byte	0
 1453 00af 00000000 		.4byte	0
 1454              	.LLST4:
 1455 00b3 1C000000 		.4byte	.LVL3
 1456 00b7 34000000 		.4byte	.LVL6
 1457 00bb 0600     		.2byte	0x6
 1458 00bd 9E       		.byte	0x9e
 1459 00be 04       		.uleb128 0x4
 1460 00bf 0000803F 		.4byte	0x3f800000
 1461 00c3 34000000 		.4byte	.LVL6
 1462 00c7 A4000000 		.4byte	.LVL18
 1463 00cb 0100     		.2byte	0x1
 1464 00cd 54       		.byte	0x54
 1465 00ce A4000000 		.4byte	.LVL18
 1466 00d2 A6000000 		.4byte	.LVL19
 1467 00d6 0100     		.2byte	0x1
 1468 00d8 50       		.byte	0x50
 1469 00d9 A6000000 		.4byte	.LVL19
 1470 00dd BC000000 		.4byte	.LVL23
 1471 00e1 0100     		.2byte	0x1
 1472 00e3 54       		.byte	0x54
 1473 00e4 BC000000 		.4byte	.LVL23
 1474 00e8 C9000000 		.4byte	.LVL24-1
 1475 00ec 0100     		.2byte	0x1
 1476 00ee 50       		.byte	0x50
 1477 00ef C9000000 		.4byte	.LVL24-1
 1478 00f3 D8000000 		.4byte	.LVL27
 1479 00f7 0100     		.2byte	0x1
 1480 00f9 54       		.byte	0x54
 1481 00fa D8000000 		.4byte	.LVL27
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 36


 1482 00fe E6000000 		.4byte	.LVL28
 1483 0102 0100     		.2byte	0x1
 1484 0104 50       		.byte	0x50
 1485 0105 E6000000 		.4byte	.LVL28
 1486 0109 44010000 		.4byte	.LVL43
 1487 010d 0100     		.2byte	0x1
 1488 010f 54       		.byte	0x54
 1489 0110 44010000 		.4byte	.LVL43
 1490 0114 52010000 		.4byte	.LVL44
 1491 0118 0100     		.2byte	0x1
 1492 011a 50       		.byte	0x50
 1493 011b 52010000 		.4byte	.LVL44
 1494 011f E4010000 		.4byte	.LFE64
 1495 0123 0100     		.2byte	0x1
 1496 0125 54       		.byte	0x54
 1497 0126 00000000 		.4byte	0
 1498 012a 00000000 		.4byte	0
 1499              	.LLST5:
 1500 012e 00000000 		.4byte	.LVL61
 1501 0132 0A000000 		.4byte	.LVL63
 1502 0136 0100     		.2byte	0x1
 1503 0138 50       		.byte	0x50
 1504 0139 0A000000 		.4byte	.LVL63
 1505 013d 2A000000 		.4byte	.LFE65
 1506 0141 0400     		.2byte	0x4
 1507 0143 F3       		.byte	0xf3
 1508 0144 01       		.uleb128 0x1
 1509 0145 50       		.byte	0x50
 1510 0146 9F       		.byte	0x9f
 1511 0147 00000000 		.4byte	0
 1512 014b 00000000 		.4byte	0
 1513              	.LLST6:
 1514 014f 00000000 		.4byte	.LVL61
 1515 0153 0A000000 		.4byte	.LVL63
 1516 0157 0100     		.2byte	0x1
 1517 0159 51       		.byte	0x51
 1518 015a 0A000000 		.4byte	.LVL63
 1519 015e 18000000 		.4byte	.LVL65
 1520 0162 0100     		.2byte	0x1
 1521 0164 54       		.byte	0x54
 1522 0165 18000000 		.4byte	.LVL65
 1523 0169 22000000 		.4byte	.LVL68
 1524 016d 0100     		.2byte	0x1
 1525 016f 56       		.byte	0x56
 1526 0170 22000000 		.4byte	.LVL68
 1527 0174 2A000000 		.4byte	.LFE65
 1528 0178 0100     		.2byte	0x1
 1529 017a 54       		.byte	0x54
 1530 017b 00000000 		.4byte	0
 1531 017f 00000000 		.4byte	0
 1532              	.LLST7:
 1533 0183 00000000 		.4byte	.LVL61
 1534 0187 0A000000 		.4byte	.LVL63
 1535 018b 0100     		.2byte	0x1
 1536 018d 52       		.byte	0x52
 1537 018e 0A000000 		.4byte	.LVL63
 1538 0192 2A000000 		.4byte	.LFE65
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 37


 1539 0196 0100     		.2byte	0x1
 1540 0198 57       		.byte	0x57
 1541 0199 00000000 		.4byte	0
 1542 019d 00000000 		.4byte	0
 1543              	.LLST8:
 1544 01a1 06000000 		.4byte	.LVL62
 1545 01a5 0A000000 		.4byte	.LVL63
 1546 01a9 0200     		.2byte	0x2
 1547 01ab 30       		.byte	0x30
 1548 01ac 9F       		.byte	0x9f
 1549 01ad 0A000000 		.4byte	.LVL63
 1550 01b1 2A000000 		.4byte	.LFE65
 1551 01b5 0100     		.2byte	0x1
 1552 01b7 55       		.byte	0x55
 1553 01b8 00000000 		.4byte	0
 1554 01bc 00000000 		.4byte	0
 1555              	.LLST9:
 1556 01c0 00000000 		.4byte	.LVL69
 1557 01c4 0A000000 		.4byte	.LVL71
 1558 01c8 0100     		.2byte	0x1
 1559 01ca 50       		.byte	0x50
 1560 01cb 0A000000 		.4byte	.LVL71
 1561 01cf 38000000 		.4byte	.LFE66
 1562 01d3 0400     		.2byte	0x4
 1563 01d5 F3       		.byte	0xf3
 1564 01d6 01       		.uleb128 0x1
 1565 01d7 50       		.byte	0x50
 1566 01d8 9F       		.byte	0x9f
 1567 01d9 00000000 		.4byte	0
 1568 01dd 00000000 		.4byte	0
 1569              	.LLST10:
 1570 01e1 00000000 		.4byte	.LVL69
 1571 01e5 0A000000 		.4byte	.LVL71
 1572 01e9 0100     		.2byte	0x1
 1573 01eb 51       		.byte	0x51
 1574 01ec 0A000000 		.4byte	.LVL71
 1575 01f0 26000000 		.4byte	.LVL78
 1576 01f4 0100     		.2byte	0x1
 1577 01f6 57       		.byte	0x57
 1578 01f7 26000000 		.4byte	.LVL78
 1579 01fb 30000000 		.4byte	.LVL80
 1580 01ff 0100     		.2byte	0x1
 1581 0201 53       		.byte	0x53
 1582 0202 30000000 		.4byte	.LVL80
 1583 0206 34000000 		.4byte	.LVL81
 1584 020a 0100     		.2byte	0x1
 1585 020c 57       		.byte	0x57
 1586 020d 00000000 		.4byte	0
 1587 0211 00000000 		.4byte	0
 1588              	.LLST11:
 1589 0215 00000000 		.4byte	.LVL69
 1590 0219 0A000000 		.4byte	.LVL71
 1591 021d 0100     		.2byte	0x1
 1592 021f 52       		.byte	0x52
 1593 0220 0A000000 		.4byte	.LVL71
 1594 0224 38000000 		.4byte	.LFE66
 1595 0228 0100     		.2byte	0x1
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 38


 1596 022a 54       		.byte	0x54
 1597 022b 00000000 		.4byte	0
 1598 022f 00000000 		.4byte	0
 1599              	.LLST12:
 1600 0233 06000000 		.4byte	.LVL70
 1601 0237 0A000000 		.4byte	.LVL71
 1602 023b 0200     		.2byte	0x2
 1603 023d 30       		.byte	0x30
 1604 023e 9F       		.byte	0x9f
 1605 023f 0A000000 		.4byte	.LVL71
 1606 0243 38000000 		.4byte	.LFE66
 1607 0247 0100     		.2byte	0x1
 1608 0249 56       		.byte	0x56
 1609 024a 00000000 		.4byte	0
 1610 024e 00000000 		.4byte	0
 1611              	.LLST13:
 1612 0252 0E000000 		.4byte	.LVL72
 1613 0256 15000000 		.4byte	.LVL73-1
 1614 025a 0100     		.2byte	0x1
 1615 025c 50       		.byte	0x50
 1616 025d 1C000000 		.4byte	.LVL75
 1617 0261 24000000 		.4byte	.LVL77
 1618 0265 0200     		.2byte	0x2
 1619 0267 3A       		.byte	0x3a
 1620 0268 9F       		.byte	0x9f
 1621 0269 24000000 		.4byte	.LVL77
 1622 026d 30000000 		.4byte	.LVL80
 1623 0271 0100     		.2byte	0x1
 1624 0273 55       		.byte	0x55
 1625 0274 00000000 		.4byte	0
 1626 0278 00000000 		.4byte	0
 1627              		.section	.debug_aranges,"",%progbits
 1628 0000 2C000000 		.4byte	0x2c
 1629 0004 0200     		.2byte	0x2
 1630 0006 00000000 		.4byte	.Ldebug_info0
 1631 000a 04       		.byte	0x4
 1632 000b 00       		.byte	0
 1633 000c 0000     		.2byte	0
 1634 000e 0000     		.2byte	0
 1635 0010 00000000 		.4byte	.LFB64
 1636 0014 E4010000 		.4byte	.LFE64-.LFB64
 1637 0018 00000000 		.4byte	.LFB65
 1638 001c 2A000000 		.4byte	.LFE65-.LFB65
 1639 0020 00000000 		.4byte	.LFB66
 1640 0024 38000000 		.4byte	.LFE66-.LFB66
 1641 0028 00000000 		.4byte	0
 1642 002c 00000000 		.4byte	0
 1643              		.section	.debug_ranges,"",%progbits
 1644              	.Ldebug_ranges0:
 1645 0000 00000000 		.4byte	.LFB64
 1646 0004 E4010000 		.4byte	.LFE64
 1647 0008 00000000 		.4byte	.LFB65
 1648 000c 2A000000 		.4byte	.LFE65
 1649 0010 00000000 		.4byte	.LFB66
 1650 0014 38000000 		.4byte	.LFE66
 1651 0018 00000000 		.4byte	0
 1652 001c 00000000 		.4byte	0
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 39


 1653              		.section	.debug_line,"",%progbits
 1654              	.Ldebug_line0:
 1655 0000 2C020000 		.section	.debug_str,"MS",%progbits,1
 1655      02006B01 
 1655      00000201 
 1655      FB0E0D00 
 1655      01010101 
 1656              	.LASF44:
 1657 0000 73656E73 		.ascii	"sensors_\000"
 1657      6F72735F 
 1657      00
 1658              	.LASF30:
 1659 0009 7265666C 		.ascii	"reflectance_read\000"
 1659      65637461 
 1659      6E63655F 
 1659      72656164 
 1659      00
 1660              	.LASF28:
 1661 001a 6765745F 		.ascii	"get_IR\000"
 1661      495200
 1662              	.LASF5:
 1663 0021 5F5F696E 		.ascii	"__int32_t\000"
 1663      7433325F 
 1663      7400
 1664              	.LASF3:
 1665 002b 73686F72 		.ascii	"short unsigned int\000"
 1665      7420756E 
 1665      7369676E 
 1665      65642069 
 1665      6E7400
 1666              	.LASF31:
 1667 003e 7265666C 		.ascii	"reflectance_digital\000"
 1667      65637461 
 1667      6E63655F 
 1667      64696769 
 1667      74616C00 
 1668              	.LASF37:
 1669 0052 7265666C 		.ascii	"reflectance_start\000"
 1669      65637461 
 1669      6E63655F 
 1669      73746172 
 1669      7400
 1670              	.LASF19:
 1671 0064 6F6C6453 		.ascii	"oldSignalValue\000"
 1671      69676E61 
 1671      6C56616C 
 1671      756500
 1672              	.LASF26:
 1673 0073 5F726561 		.ascii	"_read\000"
 1673      6400
 1674              	.LASF13:
 1675 0079 666C6F61 		.ascii	"float\000"
 1675      7400
 1676              	.LASF25:
 1677 007f 66696C65 		.ascii	"file\000"
 1677      00
 1678              	.LASF36:
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 40


 1679 0084 73656E73 		.ascii	"sensor_isr_StartEx\000"
 1679      6F725F69 
 1679      73725F53 
 1679      74617274 
 1679      457800
 1680              	.LASF1:
 1681 0097 756E7369 		.ascii	"unsigned char\000"
 1681      676E6564 
 1681      20636861 
 1681      7200
 1682              	.LASF41:
 1683 00a5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1683      43313120 
 1683      352E342E 
 1683      31203230 
 1683      31363036 
 1684 00d8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1684      20726576 
 1684      6973696F 
 1684      6E203233 
 1684      37373135 
 1685 010b 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1685      66756E63 
 1685      74696F6E 
 1685      2D736563 
 1685      74696F6E 
 1686              	.LASF18:
 1687 0133 49525F76 		.ascii	"IR_val\000"
 1687      616C00
 1688              	.LASF7:
 1689 013a 6C6F6E67 		.ascii	"long unsigned int\000"
 1689      20756E73 
 1689      69676E65 
 1689      6420696E 
 1689      7400
 1690              	.LASF45:
 1691 014c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1691      52784275 
 1691      66666572 
 1691      00
 1692              	.LASF22:
 1693 0159 61636365 		.ascii	"accelerator\000"
 1693      6C657261 
 1693      746F7200 
 1694              	.LASF38:
 1695 0165 49525F6C 		.ascii	"IR_led_Write\000"
 1695      65645F57 
 1695      72697465 
 1695      00
 1696              	.LASF4:
 1697 0172 5F5F7569 		.ascii	"__uint16_t\000"
 1697      6E743136 
 1697      5F7400
 1698              	.LASF14:
 1699 017d 646F7562 		.ascii	"double\000"
 1699      6C6500
 1700              	.LASF32:
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 41


 1701 0184 6D6F746F 		.ascii	"motor_stop\000"
 1701      725F7374 
 1701      6F7000
 1702              	.LASF23:
 1703 018f 6D61696E 		.ascii	"main\000"
 1703      00
 1704              	.LASF39:
 1705 0194 55415254 		.ascii	"UART_1_PutChar\000"
 1705      5F315F50 
 1705      75744368 
 1705      617200
 1706              	.LASF10:
 1707 01a3 756E7369 		.ascii	"unsigned int\000"
 1707      676E6564 
 1707      20696E74 
 1707      00
 1708              	.LASF9:
 1709 01b0 6C6F6E67 		.ascii	"long long unsigned int\000"
 1709      206C6F6E 
 1709      6720756E 
 1709      7369676E 
 1709      65642069 
 1710              	.LASF29:
 1711 01c7 6D6F746F 		.ascii	"motor_start\000"
 1711      725F7374 
 1711      61727400 
 1712              	.LASF43:
 1713 01d3 4A3A5C50 		.ascii	"J:\\Project\\Steve Brain\\Zumo01\\ZumoBot.cydsn\000"
 1713      726F6A65 
 1713      63745C53 
 1713      74657665 
 1713      20427261 
 1714              	.LASF0:
 1715 01ff 7369676E 		.ascii	"signed char\000"
 1715      65642063 
 1715      68617200 
 1716              	.LASF12:
 1717 020b 696E7433 		.ascii	"int32_t\000"
 1717      325F7400 
 1718              	.LASF17:
 1719 0213 73697A65 		.ascii	"sizetype\000"
 1719      74797065 
 1719      00
 1720              	.LASF8:
 1721 021c 6C6F6E67 		.ascii	"long long int\000"
 1721      206C6F6E 
 1721      6720696E 
 1721      7400
 1722              	.LASF42:
 1723 022a 6D61696E 		.ascii	"main.c\000"
 1723      2E6300
 1724              	.LASF15:
 1725 0231 63686172 		.ascii	"char\000"
 1725      00
 1726              	.LASF21:
 1727 0236 6C696E65 		.ascii	"lineChecker\000"
 1727      43686563 
ARM GAS  C:\Users\asd\AppData\Local\Temp\ccflpToy.s 			page 42


 1727      6B657200 
 1728              	.LASF24:
 1729 0242 5F777269 		.ascii	"_write\000"
 1729      746500
 1730              	.LASF27:
 1731 0249 636F756E 		.ascii	"count\000"
 1731      7400
 1732              	.LASF2:
 1733 024f 73686F72 		.ascii	"short int\000"
 1733      7420696E 
 1733      7400
 1734              	.LASF11:
 1735 0259 75696E74 		.ascii	"uint16_t\000"
 1735      31365F74 
 1735      00
 1736              	.LASF6:
 1737 0262 6C6F6E67 		.ascii	"long int\000"
 1737      20696E74 
 1737      00
 1738              	.LASF16:
 1739 026b 6C6F6E67 		.ascii	"long double\000"
 1739      20646F75 
 1739      626C6500 
 1740              	.LASF34:
 1741 0277 6D6F746F 		.ascii	"motor_turn\000"
 1741      725F7475 
 1741      726E00
 1742              	.LASF20:
 1743 0282 73746F70 		.ascii	"stopCounter\000"
 1743      436F756E 
 1743      74657200 
 1744              	.LASF33:
 1745 028e 6D6F746F 		.ascii	"motor_forward\000"
 1745      725F666F 
 1745      72776172 
 1745      6400
 1746              	.LASF40:
 1747 029c 55415254 		.ascii	"UART_1_GetChar\000"
 1747      5F315F47 
 1747      65744368 
 1747      617200
 1748              	.LASF35:
 1749 02ab 55415254 		.ascii	"UART_1_Start\000"
 1749      5F315F53 
 1749      74617274 
 1749      00
 1750              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
